{
    "name": "zpa",
    "description": "A Pulumi package for creating and managing zpa cloud resources.",
    "keywords": [
        "pulumi",
        "zpa"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`zpa` Terraform Provider](https://github.com/willguibr/terraform-provider-zpa).",
    "repository": "https://github.com/willguibr/pulumi-zpa",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "index": "Index",
                "zpa": "willguibr"
            },
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/willguibr/pulumi-zpa/sdk/go/zpa"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing zpa cloud resources.",
            "packageName": "@willguibr/zpa",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/willguibr/terraform-provider-zpa)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-zpa` repo](https://github.com/pulumi/pulumi-zpa/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`willguibr/terraform-provider-zpa` repo](https://github.com/willguibr/terraform-provider-zpa/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "packageName": "willguibr_zpa",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/willguibr/terraform-provider-zpa)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-zpa` repo](https://github.com/pulumi/pulumi-zpa/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`willguibr/terraform-provider-zpa` repo](https://github.com/willguibr/terraform-provider-zpa/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "zpaClientId": {
                "type": "string",
                "description": "zpa client id\n"
            },
            "zpaClientSecret": {
                "type": "string",
                "description": "zpa client secret\n"
            },
            "zpaCustomerId": {
                "type": "string",
                "description": "zpa customer id\n"
            }
        },
        "defaults": [
            "zpaClientId",
            "zpaClientSecret",
            "zpaCustomerId"
        ]
    },
    "types": {
        "zpa:index/ZPAAppSegmentBrowserAccessClientlessApp:ZPAAppSegmentBrowserAccessClientlessApp": {
            "properties": {
                "allowOptions": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "appId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "applicationPort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "applicationProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificateId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificateName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hidden": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "localDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trustUntrustedCert": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "applicationProtocol",
                "certificateId",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "appId",
                        "applicationPort",
                        "applicationProtocol",
                        "certificateId",
                        "certificateName",
                        "cname",
                        "enabled",
                        "hidden",
                        "id",
                        "name",
                        "trustUntrustedCert"
                    ]
                }
            }
        },
        "zpa:index/ZPAAppSegmentBrowserAccessServerGroup:ZPAAppSegmentBrowserAccessServerGroup": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ids"
            ]
        },
        "zpa:index/ZPAAppSegmentBrowserAccessTcpPortRange:ZPAAppSegmentBrowserAccessTcpPortRange": {
            "properties": {
                "from": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "to": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "zpa:index/ZPAAppSegmentBrowserAccessUdpPortRange:ZPAAppSegmentBrowserAccessUdpPortRange": {
            "properties": {
                "from": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "to": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "zpa:index/ZPAApplicationSegmentServerGroup:ZPAApplicationSegmentServerGroup": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ids"
            ]
        },
        "zpa:index/ZPAApplicationSegmentTcpPortRange:ZPAApplicationSegmentTcpPortRange": {
            "properties": {
                "from": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "to": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "zpa:index/ZPAApplicationSegmentUdpPortRange:ZPAApplicationSegmentUdpPortRange": {
            "properties": {
                "from": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "to": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "zpa:index/ZPALogStreamingServiceConfig:ZPALogStreamingServiceConfig": {
            "properties": {
                "auditMessage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lssHost": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lssPort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceLogType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTls": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "format",
                "lssHost",
                "lssPort",
                "name",
                "sourceLogType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "auditMessage",
                        "format",
                        "id",
                        "lssHost",
                        "lssPort",
                        "name",
                        "sourceLogType"
                    ]
                }
            }
        },
        "zpa:index/ZPALogStreamingServiceConnectorGroup:ZPALogStreamingServiceConnectorGroup": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "zpa:index/ZPALogStreamingServicePolicyRuleResource:ZPALogStreamingServicePolicyRuleResource": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bypassDefaultRule": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPALogStreamingServicePolicyRuleResourceCondition:ZPALogStreamingServicePolicyRuleResourceCondition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customMsg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultRule": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lssDefaultRule": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policySetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reauthDefaultRule": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reauthIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reauthTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ruleOrder": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name",
                        "operator",
                        "policyType",
                        "priority",
                        "ruleOrder"
                    ]
                }
            }
        },
        "zpa:index/ZPALogStreamingServicePolicyRuleResourceCondition:ZPALogStreamingServicePolicyRuleResourceCondition": {
            "properties": {
                "negated": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operands": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPALogStreamingServicePolicyRuleResourceConditionOperand:ZPALogStreamingServicePolicyRuleResourceConditionOperand"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "zpa:index/ZPALogStreamingServicePolicyRuleResourceConditionOperand:ZPALogStreamingServicePolicyRuleResourceConditionOperand": {
            "properties": {
                "objectType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "objectType"
            ]
        },
        "zpa:index/ZPAPolicyAccessForwardingRuleCondition:ZPAPolicyAccessForwardingRuleCondition": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negated": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operands": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAPolicyAccessForwardingRuleConditionOperand:ZPAPolicyAccessForwardingRuleConditionOperand"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "negated",
                        "operands",
                        "operator"
                    ]
                }
            }
        },
        "zpa:index/ZPAPolicyAccessForwardingRuleConditionOperand:ZPAPolicyAccessForwardingRuleConditionOperand": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idpId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lhs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "objectType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rhs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rhsLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "lhs",
                "objectType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "idpId",
                        "lhs",
                        "name",
                        "objectType"
                    ]
                }
            }
        },
        "zpa:index/ZPAPolicyAccessRuleAppConnectorGroup:ZPAPolicyAccessRuleAppConnectorGroup": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "zpa:index/ZPAPolicyAccessRuleAppServerGroup:ZPAPolicyAccessRuleAppServerGroup": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "zpa:index/ZPAPolicyAccessRuleCondition:ZPAPolicyAccessRuleCondition": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negated": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operands": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAPolicyAccessRuleConditionOperand:ZPAPolicyAccessRuleConditionOperand"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "negated",
                        "operands",
                        "operator"
                    ]
                }
            }
        },
        "zpa:index/ZPAPolicyAccessRuleConditionOperand:ZPAPolicyAccessRuleConditionOperand": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idpId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lhs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "objectType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rhs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rhsLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "lhs",
                "objectType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "idpId",
                        "lhs",
                        "name",
                        "objectType"
                    ]
                }
            }
        },
        "zpa:index/ZPAPolicyAccessTimeoutRuleCondition:ZPAPolicyAccessTimeoutRuleCondition": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negated": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operands": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAPolicyAccessTimeoutRuleConditionOperand:ZPAPolicyAccessTimeoutRuleConditionOperand"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "negated",
                        "operands",
                        "operator"
                    ]
                }
            }
        },
        "zpa:index/ZPAPolicyAccessTimeoutRuleConditionOperand:ZPAPolicyAccessTimeoutRuleConditionOperand": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idpId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lhs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "objectType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rhs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rhsLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "lhs",
                "objectType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "idpId",
                        "lhs",
                        "name",
                        "objectType"
                    ]
                }
            }
        },
        "zpa:index/ZPASegmentGroupApplication:ZPASegmentGroupApplication": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "zpa:index/ZPAServerGroupAppConnectorGroup:ZPAServerGroupAppConnectorGroup": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "zpa:index/ZPAServerGroupApplication:ZPAServerGroupApplication": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "zpa:index/ZPAServerGroupServer:ZPAServerGroupServer": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "zpa:index/ZPAServiceEdgeGroupServiceEdge:ZPAServiceEdgeGroupServiceEdge": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "zpa:index/ZPAServiceEdgeGroupTrustedNetwork:ZPAServiceEdgeGroupTrustedNetwork": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "zpa:index/getZPAAppConnectorGroupConnector:getZPAAppConnectorGroupConnector": {
            "properties": {
                "appconnectorGroupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "appconnectorGroupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "applicationStartTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "controlChannelStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ctrlBrokerName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "currentVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enrollmentCert": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expectedUpgradeTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expectedVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fingerprint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipacl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issuedCertId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastBrokerConnectTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastBrokerConnectTimeDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastBrokerDisconnectTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastBrokerDisconnectTimeDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastUpgradeTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "latitude": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "location": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longitude": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "platform": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "previousVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provisioningKeyId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provisioningKeyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sargeVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "upgradeAttempt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "upgradeStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "appconnectorGroupId",
                "appconnectorGroupName",
                "applicationStartTime",
                "controlChannelStatus",
                "creationTime",
                "ctrlBrokerName",
                "currentVersion",
                "description",
                "enabled",
                "enrollmentCert",
                "expectedUpgradeTime",
                "expectedVersion",
                "fingerprint",
                "id",
                "ipacl",
                "issuedCertId",
                "lastBrokerConnectTime",
                "lastBrokerConnectTimeDuration",
                "lastBrokerDisconnectTime",
                "lastBrokerDisconnectTimeDuration",
                "lastUpgradeTime",
                "latitude",
                "location",
                "longitude",
                "modifiedTime",
                "modifiedby",
                "name",
                "platform",
                "previousVersion",
                "privateIp",
                "provisioningKeyId",
                "provisioningKeyName",
                "publicIp",
                "sargeVersion",
                "upgradeAttempt",
                "upgradeStatus"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPAAppConnectorGroupServerGroup:getZPAAppConnectorGroupServerGroup": {
            "properties": {
                "configSpace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicDiscovery": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "configSpace",
                "creationTime",
                "description",
                "dynamicDiscovery",
                "enabled",
                "id",
                "modifiedTime",
                "modifiedby",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPAAppSegmentBrowserAccessClientlessApp:getZPAAppSegmentBrowserAccessClientlessApp": {
            "properties": {
                "allowOptions": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "appId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "applicationPort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "applicationProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificateId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificateName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hidden": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "localDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trustUntrustedCert": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allowOptions",
                "appId",
                "applicationPort",
                "applicationProtocol",
                "certificateId",
                "certificateName",
                "cname",
                "description",
                "domain",
                "enabled",
                "hidden",
                "id",
                "localDomain",
                "name",
                "path",
                "trustUntrustedCert"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPAAppSegmentBrowserAccessServerGroup:getZPAAppSegmentBrowserAccessServerGroup": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ids"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPAAppSegmentBrowserAccessTcpPortRange:getZPAAppSegmentBrowserAccessTcpPortRange": {
            "properties": {
                "from": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "to": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "zpa:index/getZPAAppSegmentBrowserAccessUdpPortRange:getZPAAppSegmentBrowserAccessUdpPortRange": {
            "properties": {
                "from": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "to": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "zpa:index/getZPAApplicationSegmentServerGroup:getZPAApplicationSegmentServerGroup": {
            "properties": {
                "configSpace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicDiscovery": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "configSpace",
                "creationTime",
                "description",
                "dynamicDiscovery",
                "enabled",
                "id",
                "modifiedTime",
                "modifiedby",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPAApplicationSegmentTcpPortRange:getZPAApplicationSegmentTcpPortRange": {
            "properties": {
                "from": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "to": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "zpa:index/getZPAApplicationSegmentUdpPortRange:getZPAApplicationSegmentUdpPortRange": {
            "properties": {
                "from": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "to": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "zpa:index/getZPACloudConnectorGroupCloudConnector:getZPACloudConnectorGroupCloudConnector": {
            "properties": {
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fingerprint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipacls": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issuedCertId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signingCert": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "creationTime",
                "description",
                "enabled",
                "fingerprint",
                "id",
                "ipacls",
                "issuedCertId",
                "modifiedTime",
                "modifiedby",
                "name",
                "signingCert"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPACustomerVersionProfileCustomScopeCustomerId:getZPACustomerVersionProfileCustomScopeCustomerId": {
            "properties": {
                "customerId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludeConstellation": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "customerId",
                "excludeConstellation",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPACustomerVersionProfileVersion:getZPACustomerVersionProfileVersion": {
            "properties": {
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customerId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "platform": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartAfterUptimeInDays": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "role": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versionProfileGid": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "creationTime",
                "customerId",
                "id",
                "modifiedTime",
                "modifiedby",
                "platform",
                "restartAfterUptimeInDays",
                "role",
                "version",
                "versionProfileGid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPAIdPControllerAdminMetadata:getZPAIdPControllerAdminMetadata": {
            "properties": {
                "certificateUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spBaseUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spEntityId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spMetadataUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spPostUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "certificateUrl",
                "spBaseUrl",
                "spEntityId",
                "spMetadataUrl",
                "spPostUrl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPAIdPControllerUserMetadata:getZPAIdPControllerUserMetadata": {
            "properties": {
                "certificateUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spBaseUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spEntityId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spMetadataUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spPostUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "certificateUrl",
                "spBaseUrl",
                "spEntityId",
                "spMetadataUrl",
                "spPostUrl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPALSSConfigMachineGroupMachine:getZPALSSConfigMachineGroupMachine": {
            "properties": {
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fingerprint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issuedCertId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "machineGroupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "machineGroupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "machineTokenId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signingCert": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "creationTime",
                "description",
                "fingerprint",
                "id",
                "issuedCertId",
                "machineGroupId",
                "machineGroupName",
                "machineTokenId",
                "modifiedTime",
                "modifiedby",
                "name",
                "signingCert"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPALogStreamingServiceConfig:getZPALogStreamingServiceConfig": {
            "properties": {
                "auditMessage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lssHost": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lssPort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceLogType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useTls": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "auditMessage",
                "description",
                "enabled",
                "filters",
                "format",
                "id",
                "lssHost",
                "lssPort",
                "name",
                "sourceLogType",
                "useTls"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPALogStreamingServiceConnectorGroup:getZPALogStreamingServiceConnectorGroup": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPALogStreamingServicePolicyRule:getZPALogStreamingServicePolicyRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bypassDefaultRule": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/getZPALogStreamingServicePolicyRuleCondition:getZPALogStreamingServicePolicyRuleCondition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customMsg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultRule": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isolationDefaultRule": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lssDefaultRule": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policySetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reauthDefaultRule": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reauthIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reauthTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ruleOrder": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zpnCbiProfileId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zpnInspectionProfileId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zpnInspectionProfileName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "action",
                "actionId",
                "bypassDefaultRule",
                "conditions",
                "creationTime",
                "customMsg",
                "defaultRule",
                "description",
                "id",
                "isolationDefaultRule",
                "lssDefaultRule",
                "modifiedTime",
                "modifiedby",
                "name",
                "operator",
                "policySetId",
                "policyType",
                "priority",
                "reauthDefaultRule",
                "reauthIdleTimeout",
                "reauthTimeout",
                "ruleOrder",
                "zpnCbiProfileId",
                "zpnInspectionProfileId",
                "zpnInspectionProfileName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPALogStreamingServicePolicyRuleCondition:getZPALogStreamingServicePolicyRuleCondition": {
            "properties": {
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negated": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operands": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/getZPALogStreamingServicePolicyRuleConditionOperand:getZPALogStreamingServicePolicyRuleConditionOperand"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "creationTime",
                "id",
                "modifiedTime",
                "modifiedby",
                "negated",
                "operands",
                "operator"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPALogStreamingServicePolicyRuleConditionOperand:getZPALogStreamingServicePolicyRuleConditionOperand": {
            "properties": {
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idpId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lhs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "objectType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rhs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "creationTime",
                "id",
                "idpId",
                "lhs",
                "modifiedTime",
                "modifiedby",
                "name",
                "objectType",
                "operator",
                "rhs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPAPolicyTypeRule:getZPAPolicyTypeRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bypassDefaultRule": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/getZPAPolicyTypeRuleCondition:getZPAPolicyTypeRuleCondition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customMsg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isolationDefaultRule": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policySetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reauthDefaultRule": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reauthIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reauthTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ruleOrder": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zpnCbiProfileId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zpnInspectionProfileId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zpnInspectionProfileName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "action",
                "actionId",
                "bypassDefaultRule",
                "conditions",
                "creationTime",
                "customMsg",
                "description",
                "id",
                "isolationDefaultRule",
                "modifiedTime",
                "modifiedby",
                "name",
                "operator",
                "policySetId",
                "policyType",
                "priority",
                "reauthDefaultRule",
                "reauthIdleTimeout",
                "reauthTimeout",
                "ruleOrder",
                "zpnCbiProfileId",
                "zpnInspectionProfileId",
                "zpnInspectionProfileName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPAPolicyTypeRuleCondition:getZPAPolicyTypeRuleCondition": {
            "properties": {
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negated": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operands": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/getZPAPolicyTypeRuleConditionOperand:getZPAPolicyTypeRuleConditionOperand"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "creationTime",
                "id",
                "modifiedTime",
                "modifiedby",
                "negated",
                "operands",
                "operator"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPAPolicyTypeRuleConditionOperand:getZPAPolicyTypeRuleConditionOperand": {
            "properties": {
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idpId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lhs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "objectType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rhs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "creationTime",
                "id",
                "idpId",
                "lhs",
                "modifiedTime",
                "modifiedby",
                "name",
                "objectType",
                "operator",
                "rhs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPASegmentGroupApplication:getZPASegmentGroupApplication": {
            "properties": {
                "bypassType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configSpace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultMaxAge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domainName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domainNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "doubleEncrypt": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthCheckType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipAnchored": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFeatures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passiveHealthEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/getZPASegmentGroupApplicationServerGroup:getZPASegmentGroupApplicationServerGroup"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tcpPortRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tcpPortsIns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tcpPortsOuts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "udpPortRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bypassType",
                "configSpace",
                "creationTime",
                "defaultIdleTimeout",
                "defaultMaxAge",
                "description",
                "domainName",
                "domainNames",
                "doubleEncrypt",
                "enabled",
                "healthCheckType",
                "id",
                "ipAnchored",
                "logFeatures",
                "modifiedTime",
                "modifiedby",
                "name",
                "passiveHealthEnabled",
                "serverGroups",
                "tcpPortRanges",
                "tcpPortsIns",
                "tcpPortsOuts",
                "udpPortRanges"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPASegmentGroupApplicationServerGroup:getZPASegmentGroupApplicationServerGroup": {
            "properties": {
                "configSpace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicDiscovery": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "configSpace",
                "creationTime",
                "description",
                "dynamicDiscovery",
                "enabled",
                "id",
                "modifiedTime",
                "modifiedby",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPAServerGroupAppConnectorGroup:getZPAServerGroupAppConnectorGroup": {
            "properties": {
                "cityCountry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/getZPAServerGroupAppConnectorGroupConnector:getZPAServerGroupAppConnectorGroupConnector"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "countryCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dnsQueryType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geolocationId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "latitude": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "location": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longitude": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/getZPAServerGroupAppConnectorGroupServerGroup:getZPAServerGroupAppConnectorGroupServerGroup"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "siemAppConnectorGroup": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "upgradeDay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "upgradeTimeInSecs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versionProfileId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cityCountry",
                "connectors",
                "countryCode",
                "creationTime",
                "description",
                "dnsQueryType",
                "enabled",
                "geolocationId",
                "id",
                "latitude",
                "location",
                "longitude",
                "modifiedTime",
                "modifiedby",
                "name",
                "serverGroups",
                "siemAppConnectorGroup",
                "upgradeDay",
                "upgradeTimeInSecs",
                "versionProfileId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPAServerGroupAppConnectorGroupConnector:getZPAServerGroupAppConnectorGroupConnector": {
            "properties": {
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fingerprint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issuedCertId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "upgradeAttempt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "creationTime",
                "description",
                "enabled",
                "fingerprint",
                "id",
                "issuedCertId",
                "modifiedTime",
                "modifiedby",
                "upgradeAttempt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPAServerGroupAppConnectorGroupServerGroup:getZPAServerGroupAppConnectorGroupServerGroup": {
            "properties": {
                "configSpace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicDiscovery": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "configSpace",
                "creationTime",
                "description",
                "dynamicDiscovery",
                "enabled",
                "id",
                "modifiedTime",
                "modifiedby"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPAServerGroupApplication:getZPAServerGroupApplication": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPAServerGroupServer:getZPAServerGroupServer": {
            "properties": {
                "address": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "appServerGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configSpace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "appServerGroupIds",
                "configSpace",
                "creationTime",
                "description",
                "enabled",
                "id",
                "modifiedTime",
                "modifiedby",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPAServiceEdgeGroupServiceEdge:getZPAServiceEdgeGroupServiceEdge": {
            "properties": {
                "applicationStartTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "controlChannelStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ctrlBrokerName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "currentVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enrollmentCert": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expectedUpgradeTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expectedVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fingerprint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipacl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issuedCertId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastBrokerConnectTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastBrokerConnectTimeDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastBrokerDisconnectTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastBrokerDisconnectTimeDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastUpgradeTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "latitude": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "listenIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "location": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longitude": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "platform": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "previousVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provisioningKeyId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provisioningKeyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publishIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sargeVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceEdgeGroupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceEdgeGroupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "upgradeAttempt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "upgradeStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "applicationStartTime",
                "controlChannelStatus",
                "creationTime",
                "ctrlBrokerName",
                "currentVersion",
                "description",
                "enabled",
                "enrollmentCert",
                "expectedUpgradeTime",
                "expectedVersion",
                "fingerprint",
                "id",
                "ipacl",
                "issuedCertId",
                "lastBrokerConnectTime",
                "lastBrokerConnectTimeDuration",
                "lastBrokerDisconnectTime",
                "lastBrokerDisconnectTimeDuration",
                "lastUpgradeTime",
                "latitude",
                "listenIps",
                "location",
                "longitude",
                "modifiedTime",
                "modifiedby",
                "name",
                "platform",
                "previousVersion",
                "privateIp",
                "provisioningKeyId",
                "provisioningKeyName",
                "publicIp",
                "publishIps",
                "sargeVersion",
                "serviceEdgeGroupId",
                "serviceEdgeGroupName",
                "upgradeAttempt",
                "upgradeStatus"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zpa:index/getZPAServiceEdgeGroupTrustedNetwork:getZPAServiceEdgeGroupTrustedNetwork": {
            "properties": {
                "creationTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "masterCustomerId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedby": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zscalerCloud": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "creationTime",
                "domain",
                "id",
                "masterCustomerId",
                "modifiedTime",
                "modifiedby",
                "name",
                "networkId",
                "zscalerCloud"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the zpa package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "zpaClientId": {
                "type": "string",
                "description": "zpa client id\n"
            },
            "zpaClientSecret": {
                "type": "string",
                "description": "zpa client secret\n"
            },
            "zpaCustomerId": {
                "type": "string",
                "description": "zpa customer id\n"
            }
        },
        "required": [
            "zpaClientId",
            "zpaClientSecret",
            "zpaCustomerId"
        ],
        "inputProperties": {
            "zpaClientId": {
                "type": "string",
                "description": "zpa client id\n"
            },
            "zpaClientSecret": {
                "type": "string",
                "description": "zpa client secret\n"
            },
            "zpaCustomerId": {
                "type": "string",
                "description": "zpa customer id\n"
            }
        },
        "requiredInputs": [
            "zpaClientId",
            "zpaClientSecret",
            "zpaCustomerId"
        ]
    },
    "resources": {
        "zpa:index/zPAAppConnectorGroup:ZPAAppConnectorGroup": {
            "properties": {
                "cityCountry": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the App Connector Group\n"
                },
                "dnsQueryType": {
                    "type": "string",
                    "description": "Whether to enable IPv4 or IPv6, or both, for DNS resolution of all applications in the App Connector Group\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether this App Connector Group is enabled or not\n"
                },
                "latitude": {
                    "type": "string",
                    "description": "Latitude of the App Connector Group. Integer or decimal. With values in the range of -90 to 90\n"
                },
                "location": {
                    "type": "string",
                    "description": "Location of the App Connector Group\n"
                },
                "longitude": {
                    "type": "string",
                    "description": "Longitude of the App Connector Group. Integer or decimal. With values in the range of -180 to 180\n"
                },
                "lssAppConnectorGroup": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the App Connector Group\n"
                },
                "overrideVersionProfile": {
                    "type": "boolean",
                    "description": "Whether the default version profile of the App Connector Group is applied or overridden. Supported values: true, false\n"
                },
                "upgradeDay": {
                    "type": "string",
                    "description": "App Connectors in this group will attempt to update to a newer version of the software during this specified day. List\nof valid days (i.e., Sunday, Monday)\n"
                },
                "upgradeTimeInSecs": {
                    "type": "string",
                    "description": "App Connectors in this group will attempt to update to a newer version of the software during this specified time.\nInteger in seconds (i.e., -66600). The integer should be greater than or equal to 0 and less than 86400, in 15 minute\nintervals\n"
                },
                "versionProfileId": {
                    "type": "string",
                    "description": "ID of the version profile. To learn more, see Version Profile Use Cases. This value is required, if the value for\noverrideVersionProfile is set to true\n"
                }
            },
            "required": [
                "cityCountry",
                "countryCode",
                "latitude",
                "location",
                "longitude",
                "lssAppConnectorGroup",
                "name"
            ],
            "inputProperties": {
                "countryCode": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the App Connector Group\n"
                },
                "dnsQueryType": {
                    "type": "string",
                    "description": "Whether to enable IPv4 or IPv6, or both, for DNS resolution of all applications in the App Connector Group\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether this App Connector Group is enabled or not\n"
                },
                "latitude": {
                    "type": "string",
                    "description": "Latitude of the App Connector Group. Integer or decimal. With values in the range of -90 to 90\n"
                },
                "location": {
                    "type": "string",
                    "description": "Location of the App Connector Group\n"
                },
                "longitude": {
                    "type": "string",
                    "description": "Longitude of the App Connector Group. Integer or decimal. With values in the range of -180 to 180\n"
                },
                "lssAppConnectorGroup": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the App Connector Group\n"
                },
                "overrideVersionProfile": {
                    "type": "boolean",
                    "description": "Whether the default version profile of the App Connector Group is applied or overridden. Supported values: true, false\n"
                },
                "upgradeDay": {
                    "type": "string",
                    "description": "App Connectors in this group will attempt to update to a newer version of the software during this specified day. List\nof valid days (i.e., Sunday, Monday)\n"
                },
                "upgradeTimeInSecs": {
                    "type": "string",
                    "description": "App Connectors in this group will attempt to update to a newer version of the software during this specified time.\nInteger in seconds (i.e., -66600). The integer should be greater than or equal to 0 and less than 86400, in 15 minute\nintervals\n"
                },
                "versionProfileId": {
                    "type": "string",
                    "description": "ID of the version profile. To learn more, see Version Profile Use Cases. This value is required, if the value for\noverrideVersionProfile is set to true\n"
                }
            },
            "requiredInputs": [
                "latitude",
                "location",
                "longitude"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZPAAppConnectorGroup resources.\n",
                "properties": {
                    "cityCountry": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the App Connector Group\n"
                    },
                    "dnsQueryType": {
                        "type": "string",
                        "description": "Whether to enable IPv4 or IPv6, or both, for DNS resolution of all applications in the App Connector Group\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether this App Connector Group is enabled or not\n"
                    },
                    "latitude": {
                        "type": "string",
                        "description": "Latitude of the App Connector Group. Integer or decimal. With values in the range of -90 to 90\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location of the App Connector Group\n"
                    },
                    "longitude": {
                        "type": "string",
                        "description": "Longitude of the App Connector Group. Integer or decimal. With values in the range of -180 to 180\n"
                    },
                    "lssAppConnectorGroup": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the App Connector Group\n"
                    },
                    "overrideVersionProfile": {
                        "type": "boolean",
                        "description": "Whether the default version profile of the App Connector Group is applied or overridden. Supported values: true, false\n"
                    },
                    "upgradeDay": {
                        "type": "string",
                        "description": "App Connectors in this group will attempt to update to a newer version of the software during this specified day. List\nof valid days (i.e., Sunday, Monday)\n"
                    },
                    "upgradeTimeInSecs": {
                        "type": "string",
                        "description": "App Connectors in this group will attempt to update to a newer version of the software during this specified time.\nInteger in seconds (i.e., -66600). The integer should be greater than or equal to 0 and less than 86400, in 15 minute\nintervals\n"
                    },
                    "versionProfileId": {
                        "type": "string",
                        "description": "ID of the version profile. To learn more, see Version Profile Use Cases. This value is required, if the value for\noverrideVersionProfile is set to true\n"
                    }
                },
                "type": "object"
            }
        },
        "zpa:index/zPAAppSegmentBrowserAccess:ZPAAppSegmentBrowserAccess": {
            "properties": {
                "bypassType": {
                    "type": "string",
                    "description": "Indicates whether users can bypass ZPA to access applications. Default: NEVER. Supported values: ALWAYS, NEVER, ON_NET.\nThe value NEVER indicates the use of the client forwarding policy.\n"
                },
                "clientlessApps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAAppSegmentBrowserAccessClientlessApp:ZPAAppSegmentBrowserAccessClientlessApp"
                    }
                },
                "configSpace": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the application.\n"
                },
                "domainNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of domains and IPs.\n"
                },
                "doubleEncrypt": {
                    "type": "boolean",
                    "description": "Whether Double Encryption is enabled or disabled for the app.\n"
                },
                "enabled": {
                    "type": "boolean"
                },
                "healthCheckType": {
                    "type": "string"
                },
                "healthReporting": {
                    "type": "string",
                    "description": "Whether health reporting for the app is Continuous or On Access. Supported values: NONE, ON_ACCESS, CONTINUOUS.\n"
                },
                "ipAnchored": {
                    "type": "boolean"
                },
                "isCnameEnabled": {
                    "type": "boolean",
                    "description": "Indicates if the Zscaler Client Connector (formerly Zscaler App or Z App) receives CNAME DNS records from the\nconnectors.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the application.\n"
                },
                "passiveHealthEnabled": {
                    "type": "boolean"
                },
                "segmentGroupId": {
                    "type": "string"
                },
                "segmentGroupName": {
                    "type": "string"
                },
                "serverGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAAppSegmentBrowserAccessServerGroup:ZPAAppSegmentBrowserAccessServerGroup"
                    },
                    "description": "List of the server group IDs.\n"
                },
                "tcpPortRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "TCP port ranges used to access the app.\n"
                },
                "udpPortRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "UDP port ranges used to access the app.\n"
                }
            },
            "required": [
                "enabled",
                "healthCheckType",
                "healthReporting",
                "name",
                "passiveHealthEnabled",
                "segmentGroupId",
                "segmentGroupName",
                "serverGroups",
                "tcpPortRanges",
                "tcpPortRanges",
                "udpPortRanges",
                "udpPortRanges"
            ],
            "inputProperties": {
                "bypassType": {
                    "type": "string",
                    "description": "Indicates whether users can bypass ZPA to access applications. Default: NEVER. Supported values: ALWAYS, NEVER, ON_NET.\nThe value NEVER indicates the use of the client forwarding policy.\n"
                },
                "clientlessApps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAAppSegmentBrowserAccessClientlessApp:ZPAAppSegmentBrowserAccessClientlessApp"
                    }
                },
                "configSpace": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the application.\n"
                },
                "domainNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of domains and IPs.\n"
                },
                "doubleEncrypt": {
                    "type": "boolean",
                    "description": "Whether Double Encryption is enabled or disabled for the app.\n"
                },
                "enabled": {
                    "type": "boolean"
                },
                "healthCheckType": {
                    "type": "string"
                },
                "healthReporting": {
                    "type": "string",
                    "description": "Whether health reporting for the app is Continuous or On Access. Supported values: NONE, ON_ACCESS, CONTINUOUS.\n"
                },
                "ipAnchored": {
                    "type": "boolean"
                },
                "isCnameEnabled": {
                    "type": "boolean",
                    "description": "Indicates if the Zscaler Client Connector (formerly Zscaler App or Z App) receives CNAME DNS records from the\nconnectors.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the application.\n"
                },
                "passiveHealthEnabled": {
                    "type": "boolean"
                },
                "segmentGroupId": {
                    "type": "string"
                },
                "segmentGroupName": {
                    "type": "string"
                },
                "serverGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAAppSegmentBrowserAccessServerGroup:ZPAAppSegmentBrowserAccessServerGroup"
                    },
                    "description": "List of the server group IDs.\n"
                },
                "tcpPortRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "TCP port ranges used to access the app.\n"
                },
                "udpPortRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "UDP port ranges used to access the app.\n"
                }
            },
            "requiredInputs": [
                "segmentGroupId",
                "serverGroups"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZPAAppSegmentBrowserAccess resources.\n",
                "properties": {
                    "bypassType": {
                        "type": "string",
                        "description": "Indicates whether users can bypass ZPA to access applications. Default: NEVER. Supported values: ALWAYS, NEVER, ON_NET.\nThe value NEVER indicates the use of the client forwarding policy.\n"
                    },
                    "clientlessApps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/ZPAAppSegmentBrowserAccessClientlessApp:ZPAAppSegmentBrowserAccessClientlessApp"
                        }
                    },
                    "configSpace": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the application.\n"
                    },
                    "domainNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of domains and IPs.\n"
                    },
                    "doubleEncrypt": {
                        "type": "boolean",
                        "description": "Whether Double Encryption is enabled or disabled for the app.\n"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "healthCheckType": {
                        "type": "string"
                    },
                    "healthReporting": {
                        "type": "string",
                        "description": "Whether health reporting for the app is Continuous or On Access. Supported values: NONE, ON_ACCESS, CONTINUOUS.\n"
                    },
                    "ipAnchored": {
                        "type": "boolean"
                    },
                    "isCnameEnabled": {
                        "type": "boolean",
                        "description": "Indicates if the Zscaler Client Connector (formerly Zscaler App or Z App) receives CNAME DNS records from the\nconnectors.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the application.\n"
                    },
                    "passiveHealthEnabled": {
                        "type": "boolean"
                    },
                    "segmentGroupId": {
                        "type": "string"
                    },
                    "segmentGroupName": {
                        "type": "string"
                    },
                    "serverGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/ZPAAppSegmentBrowserAccessServerGroup:ZPAAppSegmentBrowserAccessServerGroup"
                        },
                        "description": "List of the server group IDs.\n"
                    },
                    "tcpPortRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "TCP port ranges used to access the app.\n"
                    },
                    "udpPortRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "UDP port ranges used to access the app.\n"
                    }
                },
                "type": "object"
            }
        },
        "zpa:index/zPAApplicationSegment:ZPAApplicationSegment": {
            "properties": {
                "bypassType": {
                    "type": "string",
                    "description": "Indicates whether users can bypass ZPA to access applications.\n"
                },
                "configSpace": {
                    "type": "string"
                },
                "defaultIdleTimeout": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the application.\n"
                },
                "domainNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of domains and IPs.\n"
                },
                "doubleEncrypt": {
                    "type": "boolean",
                    "description": "Whether Double Encryption is enabled or disabled for the app.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether this application is enabled or not.\n"
                },
                "healthCheckType": {
                    "type": "string"
                },
                "healthReporting": {
                    "type": "string",
                    "description": "Whether health reporting for the app is Continuous or On Access. Supported values: NONE, ON_ACCESS, CONTINUOUS.\n"
                },
                "icmpAccessType": {
                    "type": "string"
                },
                "ipAnchored": {
                    "type": "boolean"
                },
                "isCnameEnabled": {
                    "type": "boolean",
                    "description": "Indicates if the Zscaler Client Connector (formerly Zscaler App or Z App) receives CNAME DNS records from the\nconnectors.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the application.\n"
                },
                "passiveHealthEnabled": {
                    "type": "boolean"
                },
                "segmentGroupId": {
                    "type": "string"
                },
                "segmentGroupName": {
                    "type": "string"
                },
                "serverGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAApplicationSegmentServerGroup:ZPAApplicationSegmentServerGroup"
                    },
                    "description": "List of the server group IDs.\n"
                },
                "tcpPortRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "TCP port ranges used to access the app.\n"
                },
                "udpPortRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "UDP port ranges used to access the app.\n"
                }
            },
            "required": [
                "bypassType",
                "defaultIdleTimeout",
                "domainNames",
                "isCnameEnabled",
                "name",
                "passiveHealthEnabled",
                "segmentGroupId",
                "segmentGroupName",
                "serverGroups",
                "tcpPortRanges",
                "tcpPortRanges",
                "udpPortRanges",
                "udpPortRanges"
            ],
            "inputProperties": {
                "bypassType": {
                    "type": "string",
                    "description": "Indicates whether users can bypass ZPA to access applications.\n"
                },
                "configSpace": {
                    "type": "string"
                },
                "defaultIdleTimeout": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the application.\n"
                },
                "domainNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of domains and IPs.\n"
                },
                "doubleEncrypt": {
                    "type": "boolean",
                    "description": "Whether Double Encryption is enabled or disabled for the app.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether this application is enabled or not.\n"
                },
                "healthCheckType": {
                    "type": "string"
                },
                "healthReporting": {
                    "type": "string",
                    "description": "Whether health reporting for the app is Continuous or On Access. Supported values: NONE, ON_ACCESS, CONTINUOUS.\n"
                },
                "icmpAccessType": {
                    "type": "string"
                },
                "ipAnchored": {
                    "type": "boolean"
                },
                "isCnameEnabled": {
                    "type": "boolean",
                    "description": "Indicates if the Zscaler Client Connector (formerly Zscaler App or Z App) receives CNAME DNS records from the\nconnectors.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the application.\n"
                },
                "passiveHealthEnabled": {
                    "type": "boolean"
                },
                "segmentGroupId": {
                    "type": "string"
                },
                "serverGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAApplicationSegmentServerGroup:ZPAApplicationSegmentServerGroup"
                    },
                    "description": "List of the server group IDs.\n"
                },
                "tcpPortRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "TCP port ranges used to access the app.\n"
                },
                "udpPortRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "UDP port ranges used to access the app.\n"
                }
            },
            "requiredInputs": [
                "domainNames",
                "serverGroups"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZPAApplicationSegment resources.\n",
                "properties": {
                    "bypassType": {
                        "type": "string",
                        "description": "Indicates whether users can bypass ZPA to access applications.\n"
                    },
                    "configSpace": {
                        "type": "string"
                    },
                    "defaultIdleTimeout": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the application.\n"
                    },
                    "domainNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of domains and IPs.\n"
                    },
                    "doubleEncrypt": {
                        "type": "boolean",
                        "description": "Whether Double Encryption is enabled or disabled for the app.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether this application is enabled or not.\n"
                    },
                    "healthCheckType": {
                        "type": "string"
                    },
                    "healthReporting": {
                        "type": "string",
                        "description": "Whether health reporting for the app is Continuous or On Access. Supported values: NONE, ON_ACCESS, CONTINUOUS.\n"
                    },
                    "icmpAccessType": {
                        "type": "string"
                    },
                    "ipAnchored": {
                        "type": "boolean"
                    },
                    "isCnameEnabled": {
                        "type": "boolean",
                        "description": "Indicates if the Zscaler Client Connector (formerly Zscaler App or Z App) receives CNAME DNS records from the\nconnectors.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the application.\n"
                    },
                    "passiveHealthEnabled": {
                        "type": "boolean"
                    },
                    "segmentGroupId": {
                        "type": "string"
                    },
                    "segmentGroupName": {
                        "type": "string"
                    },
                    "serverGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/ZPAApplicationSegmentServerGroup:ZPAApplicationSegmentServerGroup"
                        },
                        "description": "List of the server group IDs.\n"
                    },
                    "tcpPortRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "TCP port ranges used to access the app.\n"
                    },
                    "udpPortRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "UDP port ranges used to access the app.\n"
                    }
                },
                "type": "object"
            }
        },
        "zpa:index/zPAApplicationServer:ZPAApplicationServer": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "This field defines the domain or IP address of the server.\n"
                },
                "appServerGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This field defines the list of server groups IDs.\n"
                },
                "configSpace": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "This field defines the description of the server.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This field defines the status of the server.\n"
                },
                "name": {
                    "type": "string",
                    "description": "This field defines the name of the server.\n"
                }
            },
            "required": [
                "address",
                "appServerGroupIds",
                "enabled",
                "name"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "This field defines the domain or IP address of the server.\n"
                },
                "appServerGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This field defines the list of server groups IDs.\n"
                },
                "configSpace": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "This field defines the description of the server.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This field defines the status of the server.\n"
                },
                "name": {
                    "type": "string",
                    "description": "This field defines the name of the server.\n"
                }
            },
            "requiredInputs": [
                "address"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZPAApplicationServer resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "This field defines the domain or IP address of the server.\n"
                    },
                    "appServerGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "This field defines the list of server groups IDs.\n"
                    },
                    "configSpace": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "This field defines the description of the server.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This field defines the status of the server.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "This field defines the name of the server.\n"
                    }
                },
                "type": "object"
            }
        },
        "zpa:index/zPALogStreamingService:ZPALogStreamingService": {
            "properties": {
                "config": {
                    "$ref": "#/types/zpa:index/ZPALogStreamingServiceConfig:ZPALogStreamingServiceConfig"
                },
                "connectorGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPALogStreamingServiceConnectorGroup:ZPALogStreamingServiceConnectorGroup"
                    },
                    "description": "App Connector Group(s) to be added to the LSS configuration\n"
                },
                "policyRuleId": {
                    "type": "string"
                },
                "policyRuleResource": {
                    "$ref": "#/types/zpa:index/ZPALogStreamingServicePolicyRuleResource:ZPALogStreamingServicePolicyRuleResource"
                }
            },
            "required": [
                "policyRuleId"
            ],
            "inputProperties": {
                "config": {
                    "$ref": "#/types/zpa:index/ZPALogStreamingServiceConfig:ZPALogStreamingServiceConfig"
                },
                "connectorGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPALogStreamingServiceConnectorGroup:ZPALogStreamingServiceConnectorGroup"
                    },
                    "description": "App Connector Group(s) to be added to the LSS configuration\n"
                },
                "policyRuleResource": {
                    "$ref": "#/types/zpa:index/ZPALogStreamingServicePolicyRuleResource:ZPALogStreamingServicePolicyRuleResource"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZPALogStreamingService resources.\n",
                "properties": {
                    "config": {
                        "$ref": "#/types/zpa:index/ZPALogStreamingServiceConfig:ZPALogStreamingServiceConfig"
                    },
                    "connectorGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/ZPALogStreamingServiceConnectorGroup:ZPALogStreamingServiceConnectorGroup"
                        },
                        "description": "App Connector Group(s) to be added to the LSS configuration\n"
                    },
                    "policyRuleId": {
                        "type": "string"
                    },
                    "policyRuleResource": {
                        "$ref": "#/types/zpa:index/ZPALogStreamingServicePolicyRuleResource:ZPALogStreamingServicePolicyRuleResource"
                    }
                },
                "type": "object"
            }
        },
        "zpa:index/zPAPolicyAccessForwardingRule:ZPAPolicyAccessForwardingRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "This is for providing the rule action.\n"
                },
                "actionId": {
                    "type": "string",
                    "description": "This field defines the description of the server.\n"
                },
                "bypassDefaultRule": {
                    "type": "boolean"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAPolicyAccessForwardingRuleCondition:ZPAPolicyAccessForwardingRuleCondition"
                    },
                    "description": "This is for proviidng the set of conditions for the policy.\n"
                },
                "customMsg": {
                    "type": "string",
                    "description": "This is for providing a customer message for the user.\n"
                },
                "defaultRule": {
                    "type": "boolean",
                    "description": "This is for providing a customer message for the user.\n"
                },
                "description": {
                    "type": "string",
                    "description": "This is the description of the access policy.\n"
                },
                "lssDefaultRule": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "This is the name of the policy.\n"
                },
                "operator": {
                    "type": "string"
                },
                "policySetId": {
                    "type": "string"
                },
                "policyType": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "reauthDefaultRule": {
                    "type": "boolean"
                },
                "reauthIdleTimeout": {
                    "type": "string"
                },
                "reauthTimeout": {
                    "type": "string"
                },
                "ruleOrder": {
                    "type": "string"
                }
            },
            "required": [
                "conditions",
                "name",
                "operator",
                "policySetId",
                "policyType",
                "priority",
                "ruleOrder"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "This is for providing the rule action.\n"
                },
                "actionId": {
                    "type": "string",
                    "description": "This field defines the description of the server.\n"
                },
                "bypassDefaultRule": {
                    "type": "boolean"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAPolicyAccessForwardingRuleCondition:ZPAPolicyAccessForwardingRuleCondition"
                    },
                    "description": "This is for proviidng the set of conditions for the policy.\n"
                },
                "customMsg": {
                    "type": "string",
                    "description": "This is for providing a customer message for the user.\n"
                },
                "defaultRule": {
                    "type": "boolean",
                    "description": "This is for providing a customer message for the user.\n"
                },
                "description": {
                    "type": "string",
                    "description": "This is the description of the access policy.\n"
                },
                "lssDefaultRule": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "This is the name of the policy.\n"
                },
                "operator": {
                    "type": "string"
                },
                "policySetId": {
                    "type": "string"
                },
                "policyType": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "reauthDefaultRule": {
                    "type": "boolean"
                },
                "reauthIdleTimeout": {
                    "type": "string"
                },
                "reauthTimeout": {
                    "type": "string"
                },
                "ruleOrder": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZPAPolicyAccessForwardingRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "This is for providing the rule action.\n"
                    },
                    "actionId": {
                        "type": "string",
                        "description": "This field defines the description of the server.\n"
                    },
                    "bypassDefaultRule": {
                        "type": "boolean"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/ZPAPolicyAccessForwardingRuleCondition:ZPAPolicyAccessForwardingRuleCondition"
                        },
                        "description": "This is for proviidng the set of conditions for the policy.\n"
                    },
                    "customMsg": {
                        "type": "string",
                        "description": "This is for providing a customer message for the user.\n"
                    },
                    "defaultRule": {
                        "type": "boolean",
                        "description": "This is for providing a customer message for the user.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "This is the description of the access policy.\n"
                    },
                    "lssDefaultRule": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "description": "This is the name of the policy.\n"
                    },
                    "operator": {
                        "type": "string"
                    },
                    "policySetId": {
                        "type": "string"
                    },
                    "policyType": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "string"
                    },
                    "reauthDefaultRule": {
                        "type": "boolean"
                    },
                    "reauthIdleTimeout": {
                        "type": "string"
                    },
                    "reauthTimeout": {
                        "type": "string"
                    },
                    "ruleOrder": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "zpa:index/zPAPolicyAccessRule:ZPAPolicyAccessRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "This is for providing the rule action.\n"
                },
                "actionId": {
                    "type": "string",
                    "description": "This field defines the description of the server.\n"
                },
                "appConnectorGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAPolicyAccessRuleAppConnectorGroup:ZPAPolicyAccessRuleAppConnectorGroup"
                    },
                    "description": "List of app-connector IDs.\n"
                },
                "appServerGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAPolicyAccessRuleAppServerGroup:ZPAPolicyAccessRuleAppServerGroup"
                    },
                    "description": "List of the server group IDs.\n"
                },
                "bypassDefaultRule": {
                    "type": "boolean"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAPolicyAccessRuleCondition:ZPAPolicyAccessRuleCondition"
                    },
                    "description": "This is for proviidng the set of conditions for the policy.\n"
                },
                "customMsg": {
                    "type": "string",
                    "description": "This is for providing a customer message for the user.\n"
                },
                "defaultRule": {
                    "type": "boolean",
                    "description": "This is for providing a customer message for the user.\n"
                },
                "description": {
                    "type": "string",
                    "description": "This is the description of the access policy.\n"
                },
                "lssDefaultRule": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "This is the name of the policy.\n"
                },
                "operator": {
                    "type": "string"
                },
                "policySetId": {
                    "type": "string"
                },
                "policyType": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "reauthDefaultRule": {
                    "type": "boolean"
                },
                "reauthIdleTimeout": {
                    "type": "string"
                },
                "reauthTimeout": {
                    "type": "string"
                },
                "ruleOrder": {
                    "type": "string"
                }
            },
            "required": [
                "appConnectorGroups",
                "appServerGroups",
                "conditions",
                "name",
                "operator",
                "policySetId",
                "policyType",
                "priority",
                "ruleOrder"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "This is for providing the rule action.\n"
                },
                "actionId": {
                    "type": "string",
                    "description": "This field defines the description of the server.\n"
                },
                "appConnectorGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAPolicyAccessRuleAppConnectorGroup:ZPAPolicyAccessRuleAppConnectorGroup"
                    },
                    "description": "List of app-connector IDs.\n"
                },
                "appServerGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAPolicyAccessRuleAppServerGroup:ZPAPolicyAccessRuleAppServerGroup"
                    },
                    "description": "List of the server group IDs.\n"
                },
                "bypassDefaultRule": {
                    "type": "boolean"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAPolicyAccessRuleCondition:ZPAPolicyAccessRuleCondition"
                    },
                    "description": "This is for proviidng the set of conditions for the policy.\n"
                },
                "customMsg": {
                    "type": "string",
                    "description": "This is for providing a customer message for the user.\n"
                },
                "defaultRule": {
                    "type": "boolean",
                    "description": "This is for providing a customer message for the user.\n"
                },
                "description": {
                    "type": "string",
                    "description": "This is the description of the access policy.\n"
                },
                "lssDefaultRule": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "This is the name of the policy.\n"
                },
                "operator": {
                    "type": "string"
                },
                "policySetId": {
                    "type": "string"
                },
                "policyType": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "reauthDefaultRule": {
                    "type": "boolean"
                },
                "reauthIdleTimeout": {
                    "type": "string"
                },
                "reauthTimeout": {
                    "type": "string"
                },
                "ruleOrder": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZPAPolicyAccessRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "This is for providing the rule action.\n"
                    },
                    "actionId": {
                        "type": "string",
                        "description": "This field defines the description of the server.\n"
                    },
                    "appConnectorGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/ZPAPolicyAccessRuleAppConnectorGroup:ZPAPolicyAccessRuleAppConnectorGroup"
                        },
                        "description": "List of app-connector IDs.\n"
                    },
                    "appServerGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/ZPAPolicyAccessRuleAppServerGroup:ZPAPolicyAccessRuleAppServerGroup"
                        },
                        "description": "List of the server group IDs.\n"
                    },
                    "bypassDefaultRule": {
                        "type": "boolean"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/ZPAPolicyAccessRuleCondition:ZPAPolicyAccessRuleCondition"
                        },
                        "description": "This is for proviidng the set of conditions for the policy.\n"
                    },
                    "customMsg": {
                        "type": "string",
                        "description": "This is for providing a customer message for the user.\n"
                    },
                    "defaultRule": {
                        "type": "boolean",
                        "description": "This is for providing a customer message for the user.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "This is the description of the access policy.\n"
                    },
                    "lssDefaultRule": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "description": "This is the name of the policy.\n"
                    },
                    "operator": {
                        "type": "string"
                    },
                    "policySetId": {
                        "type": "string"
                    },
                    "policyType": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "string"
                    },
                    "reauthDefaultRule": {
                        "type": "boolean"
                    },
                    "reauthIdleTimeout": {
                        "type": "string"
                    },
                    "reauthTimeout": {
                        "type": "string"
                    },
                    "ruleOrder": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "zpa:index/zPAPolicyAccessTimeoutRule:ZPAPolicyAccessTimeoutRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "This is for providing the rule action.\n"
                },
                "actionId": {
                    "type": "string",
                    "description": "This field defines the description of the server.\n"
                },
                "bypassDefaultRule": {
                    "type": "boolean"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAPolicyAccessTimeoutRuleCondition:ZPAPolicyAccessTimeoutRuleCondition"
                    },
                    "description": "This is for proviidng the set of conditions for the policy.\n"
                },
                "customMsg": {
                    "type": "string",
                    "description": "This is for providing a customer message for the user.\n"
                },
                "defaultRule": {
                    "type": "boolean",
                    "description": "This is for providing a customer message for the user.\n"
                },
                "description": {
                    "type": "string",
                    "description": "This is the description of the access policy.\n"
                },
                "lssDefaultRule": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "This is the name of the policy.\n"
                },
                "operator": {
                    "type": "string"
                },
                "policySetId": {
                    "type": "string"
                },
                "policyType": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "reauthDefaultRule": {
                    "type": "boolean"
                },
                "reauthIdleTimeout": {
                    "type": "string"
                },
                "reauthTimeout": {
                    "type": "string"
                },
                "ruleOrder": {
                    "type": "string"
                }
            },
            "required": [
                "conditions",
                "name",
                "operator",
                "policySetId",
                "policyType",
                "priority",
                "ruleOrder"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "This is for providing the rule action.\n"
                },
                "actionId": {
                    "type": "string",
                    "description": "This field defines the description of the server.\n"
                },
                "bypassDefaultRule": {
                    "type": "boolean"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAPolicyAccessTimeoutRuleCondition:ZPAPolicyAccessTimeoutRuleCondition"
                    },
                    "description": "This is for proviidng the set of conditions for the policy.\n"
                },
                "customMsg": {
                    "type": "string",
                    "description": "This is for providing a customer message for the user.\n"
                },
                "defaultRule": {
                    "type": "boolean",
                    "description": "This is for providing a customer message for the user.\n"
                },
                "description": {
                    "type": "string",
                    "description": "This is the description of the access policy.\n"
                },
                "lssDefaultRule": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "This is the name of the policy.\n"
                },
                "operator": {
                    "type": "string"
                },
                "policySetId": {
                    "type": "string"
                },
                "policyType": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "reauthDefaultRule": {
                    "type": "boolean"
                },
                "reauthIdleTimeout": {
                    "type": "string"
                },
                "reauthTimeout": {
                    "type": "string"
                },
                "ruleOrder": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZPAPolicyAccessTimeoutRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "This is for providing the rule action.\n"
                    },
                    "actionId": {
                        "type": "string",
                        "description": "This field defines the description of the server.\n"
                    },
                    "bypassDefaultRule": {
                        "type": "boolean"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/ZPAPolicyAccessTimeoutRuleCondition:ZPAPolicyAccessTimeoutRuleCondition"
                        },
                        "description": "This is for proviidng the set of conditions for the policy.\n"
                    },
                    "customMsg": {
                        "type": "string",
                        "description": "This is for providing a customer message for the user.\n"
                    },
                    "defaultRule": {
                        "type": "boolean",
                        "description": "This is for providing a customer message for the user.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "This is the description of the access policy.\n"
                    },
                    "lssDefaultRule": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "description": "This is the name of the policy.\n"
                    },
                    "operator": {
                        "type": "string"
                    },
                    "policySetId": {
                        "type": "string"
                    },
                    "policyType": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "string"
                    },
                    "reauthDefaultRule": {
                        "type": "boolean"
                    },
                    "reauthIdleTimeout": {
                        "type": "string"
                    },
                    "reauthTimeout": {
                        "type": "string"
                    },
                    "ruleOrder": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "zpa:index/zPAProvisioningKey:ZPAProvisioningKey": {
            "properties": {
                "appConnectorGroupId": {
                    "type": "string"
                },
                "appConnectorGroupName": {
                    "type": "string",
                    "description": "Read only property. Applicable only for GET calls, ignored in PUT/POST calls.\n"
                },
                "associationType": {
                    "type": "string",
                    "description": "Specifies the provisioning key type for App Connectors or ZPA Private Service Edges. The supported values are\nCONNECTOR_GRP and SERVICE_EDGE_GRP.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the provisioning key is enabled or not. Supported values: true, false\n"
                },
                "enrollmentCertId": {
                    "type": "string",
                    "description": "ID of the enrollment certificate that can be used for this provisioning key.\n"
                },
                "enrollmentCertName": {
                    "type": "string",
                    "description": "Read only property. Applicable only for GET calls, ignored in PUT/POST calls.\n"
                },
                "ipAcls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maxUsage": {
                    "type": "string",
                    "description": "The maximum number of instances where this provisioning key can be used for enrolling an App Connector or Service Edge.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the provisioning key.\n"
                },
                "provisioningKey": {
                    "type": "string",
                    "description": "read only field. Ignored in PUT/POST calls.\n"
                },
                "uiConfig": {
                    "type": "string"
                },
                "usageCount": {
                    "type": "string",
                    "description": "The provisioning key utilization count.\n"
                },
                "zcomponentId": {
                    "type": "string",
                    "description": "ID of the existing App Connector or Service Edge Group.\n"
                },
                "zcomponentName": {
                    "type": "string",
                    "description": "Read only property. Applicable only for GET calls, ignored in PUT/POST calls.\n"
                }
            },
            "required": [
                "appConnectorGroupName",
                "associationType",
                "enrollmentCertId",
                "enrollmentCertName",
                "maxUsage",
                "name",
                "provisioningKey",
                "usageCount",
                "zcomponentId",
                "zcomponentName"
            ],
            "inputProperties": {
                "appConnectorGroupId": {
                    "type": "string"
                },
                "associationType": {
                    "type": "string",
                    "description": "Specifies the provisioning key type for App Connectors or ZPA Private Service Edges. The supported values are\nCONNECTOR_GRP and SERVICE_EDGE_GRP.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the provisioning key is enabled or not. Supported values: true, false\n"
                },
                "enrollmentCertId": {
                    "type": "string",
                    "description": "ID of the enrollment certificate that can be used for this provisioning key.\n"
                },
                "ipAcls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maxUsage": {
                    "type": "string",
                    "description": "The maximum number of instances where this provisioning key can be used for enrolling an App Connector or Service Edge.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the provisioning key.\n"
                },
                "uiConfig": {
                    "type": "string"
                },
                "usageCount": {
                    "type": "string",
                    "description": "The provisioning key utilization count.\n"
                },
                "zcomponentId": {
                    "type": "string",
                    "description": "ID of the existing App Connector or Service Edge Group.\n"
                },
                "zcomponentName": {
                    "type": "string",
                    "description": "Read only property. Applicable only for GET calls, ignored in PUT/POST calls.\n"
                }
            },
            "requiredInputs": [
                "associationType",
                "enrollmentCertId",
                "maxUsage",
                "zcomponentId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZPAProvisioningKey resources.\n",
                "properties": {
                    "appConnectorGroupId": {
                        "type": "string"
                    },
                    "appConnectorGroupName": {
                        "type": "string",
                        "description": "Read only property. Applicable only for GET calls, ignored in PUT/POST calls.\n"
                    },
                    "associationType": {
                        "type": "string",
                        "description": "Specifies the provisioning key type for App Connectors or ZPA Private Service Edges. The supported values are\nCONNECTOR_GRP and SERVICE_EDGE_GRP.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the provisioning key is enabled or not. Supported values: true, false\n"
                    },
                    "enrollmentCertId": {
                        "type": "string",
                        "description": "ID of the enrollment certificate that can be used for this provisioning key.\n"
                    },
                    "enrollmentCertName": {
                        "type": "string",
                        "description": "Read only property. Applicable only for GET calls, ignored in PUT/POST calls.\n"
                    },
                    "ipAcls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "maxUsage": {
                        "type": "string",
                        "description": "The maximum number of instances where this provisioning key can be used for enrolling an App Connector or Service Edge.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the provisioning key.\n"
                    },
                    "provisioningKey": {
                        "type": "string",
                        "description": "read only field. Ignored in PUT/POST calls.\n"
                    },
                    "uiConfig": {
                        "type": "string"
                    },
                    "usageCount": {
                        "type": "string",
                        "description": "The provisioning key utilization count.\n"
                    },
                    "zcomponentId": {
                        "type": "string",
                        "description": "ID of the existing App Connector or Service Edge Group.\n"
                    },
                    "zcomponentName": {
                        "type": "string",
                        "description": "Read only property. Applicable only for GET calls, ignored in PUT/POST calls.\n"
                    }
                },
                "type": "object"
            }
        },
        "zpa:index/zPASegmentGroup:ZPASegmentGroup": {
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPASegmentGroupApplication:ZPASegmentGroupApplication"
                    }
                },
                "configSpace": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the app group.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether this app group is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app group.\n"
                },
                "policyMigrated": {
                    "type": "boolean"
                },
                "tcpKeepAliveEnabled": {
                    "type": "string"
                }
            },
            "required": [
                "applications",
                "name",
                "policyMigrated"
            ],
            "inputProperties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPASegmentGroupApplication:ZPASegmentGroupApplication"
                    }
                },
                "configSpace": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the app group.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether this app group is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app group.\n"
                },
                "policyMigrated": {
                    "type": "boolean"
                },
                "tcpKeepAliveEnabled": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZPASegmentGroup resources.\n",
                "properties": {
                    "applications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/ZPASegmentGroupApplication:ZPASegmentGroupApplication"
                        }
                    },
                    "configSpace": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the app group.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether this app group is enabled or not.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app group.\n"
                    },
                    "policyMigrated": {
                        "type": "boolean"
                    },
                    "tcpKeepAliveEnabled": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "zpa:index/zPAServerGroup:ZPAServerGroup": {
            "properties": {
                "appConnectorGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAServerGroupAppConnectorGroup:ZPAServerGroupAppConnectorGroup"
                    },
                    "description": "List of app-connector IDs.\n"
                },
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAServerGroupApplication:ZPAServerGroupApplication"
                    },
                    "description": "This field is a json array of app-connector-id only.\n"
                },
                "configSpace": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "This field is the description of the server group.\n"
                },
                "dynamicDiscovery": {
                    "type": "boolean",
                    "description": "This field controls dynamic discovery of the servers.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This field defines if the server group is enabled or disabled.\n"
                },
                "ipAnchored": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "This field defines the name of the server group.\n"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAServerGroupServer:ZPAServerGroupServer"
                    },
                    "description": "This field is a list of servers that are applicable only when dynamic discovery is disabled. Server name is required\nonly in cases where the new servers need to be created in this API. For existing servers, pass only the serverId.\n"
                }
            },
            "required": [
                "appConnectorGroups",
                "applications",
                "name",
                "servers"
            ],
            "inputProperties": {
                "appConnectorGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAServerGroupAppConnectorGroup:ZPAServerGroupAppConnectorGroup"
                    },
                    "description": "List of app-connector IDs.\n"
                },
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAServerGroupApplication:ZPAServerGroupApplication"
                    },
                    "description": "This field is a json array of app-connector-id only.\n"
                },
                "configSpace": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "This field is the description of the server group.\n"
                },
                "dynamicDiscovery": {
                    "type": "boolean",
                    "description": "This field controls dynamic discovery of the servers.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This field defines if the server group is enabled or disabled.\n"
                },
                "ipAnchored": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "This field defines the name of the server group.\n"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAServerGroupServer:ZPAServerGroupServer"
                    },
                    "description": "This field is a list of servers that are applicable only when dynamic discovery is disabled. Server name is required\nonly in cases where the new servers need to be created in this API. For existing servers, pass only the serverId.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZPAServerGroup resources.\n",
                "properties": {
                    "appConnectorGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/ZPAServerGroupAppConnectorGroup:ZPAServerGroupAppConnectorGroup"
                        },
                        "description": "List of app-connector IDs.\n"
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/ZPAServerGroupApplication:ZPAServerGroupApplication"
                        },
                        "description": "This field is a json array of app-connector-id only.\n"
                    },
                    "configSpace": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "This field is the description of the server group.\n"
                    },
                    "dynamicDiscovery": {
                        "type": "boolean",
                        "description": "This field controls dynamic discovery of the servers.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This field defines if the server group is enabled or disabled.\n"
                    },
                    "ipAnchored": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "description": "This field defines the name of the server group.\n"
                    },
                    "servers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/ZPAServerGroupServer:ZPAServerGroupServer"
                        },
                        "description": "This field is a list of servers that are applicable only when dynamic discovery is disabled. Server name is required\nonly in cases where the new servers need to be created in this API. For existing servers, pass only the serverId.\n"
                    }
                },
                "type": "object"
            }
        },
        "zpa:index/zPAServiceEdgeGroup:ZPAServiceEdgeGroup": {
            "properties": {
                "cityCountry": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Service Edge Group.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether this Service Edge Group is enabled or not.\n"
                },
                "isPublic": {
                    "type": "string",
                    "description": "Enable or disable public access for the Service Edge Group.\n"
                },
                "latitude": {
                    "type": "string",
                    "description": "Latitude for the Service Edge Group.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Location for the Service Edge Group.\n"
                },
                "longitude": {
                    "type": "string",
                    "description": "Longitude for the Service Edge Group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Service Edge Group.\n"
                },
                "overrideVersionProfile": {
                    "type": "boolean",
                    "description": "Whether the default version profile of the App Connector Group is applied or overridden.\n"
                },
                "serviceEdges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAServiceEdgeGroupServiceEdge:ZPAServiceEdgeGroupServiceEdge"
                    }
                },
                "trustedNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAServiceEdgeGroupTrustedNetwork:ZPAServiceEdgeGroupTrustedNetwork"
                    }
                },
                "upgradeDay": {
                    "type": "string",
                    "description": "Service Edges in this group will attempt to update to a newer version of the software during this specified day.\n"
                },
                "upgradeTimeInSecs": {
                    "type": "string",
                    "description": "Service Edges in this group will attempt to update to a newer version of the software during this specified time.\n"
                },
                "versionProfileId": {
                    "type": "string",
                    "description": "ID of the version profile. To learn more\n"
                },
                "versionProfileName": {
                    "type": "string",
                    "description": "ID of the version profile. To learn more\n"
                },
                "versionProfileVisibilityScope": {
                    "type": "string",
                    "description": "ID of the version profile. To learn more\n"
                }
            },
            "required": [
                "cityCountry",
                "countryCode",
                "latitude",
                "location",
                "longitude",
                "name",
                "versionProfileId",
                "versionProfileName",
                "versionProfileVisibilityScope"
            ],
            "inputProperties": {
                "cityCountry": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Service Edge Group.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether this Service Edge Group is enabled or not.\n"
                },
                "isPublic": {
                    "type": "string",
                    "description": "Enable or disable public access for the Service Edge Group.\n"
                },
                "latitude": {
                    "type": "string",
                    "description": "Latitude for the Service Edge Group.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Location for the Service Edge Group.\n"
                },
                "longitude": {
                    "type": "string",
                    "description": "Longitude for the Service Edge Group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Service Edge Group.\n"
                },
                "overrideVersionProfile": {
                    "type": "boolean",
                    "description": "Whether the default version profile of the App Connector Group is applied or overridden.\n"
                },
                "serviceEdges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAServiceEdgeGroupServiceEdge:ZPAServiceEdgeGroupServiceEdge"
                    }
                },
                "trustedNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zpa:index/ZPAServiceEdgeGroupTrustedNetwork:ZPAServiceEdgeGroupTrustedNetwork"
                    }
                },
                "upgradeDay": {
                    "type": "string",
                    "description": "Service Edges in this group will attempt to update to a newer version of the software during this specified day.\n"
                },
                "upgradeTimeInSecs": {
                    "type": "string",
                    "description": "Service Edges in this group will attempt to update to a newer version of the software during this specified time.\n"
                },
                "versionProfileId": {
                    "type": "string",
                    "description": "ID of the version profile. To learn more\n"
                }
            },
            "requiredInputs": [
                "latitude",
                "location",
                "longitude",
                "versionProfileId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZPAServiceEdgeGroup resources.\n",
                "properties": {
                    "cityCountry": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Service Edge Group.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether this Service Edge Group is enabled or not.\n"
                    },
                    "isPublic": {
                        "type": "string",
                        "description": "Enable or disable public access for the Service Edge Group.\n"
                    },
                    "latitude": {
                        "type": "string",
                        "description": "Latitude for the Service Edge Group.\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location for the Service Edge Group.\n"
                    },
                    "longitude": {
                        "type": "string",
                        "description": "Longitude for the Service Edge Group.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Service Edge Group.\n"
                    },
                    "overrideVersionProfile": {
                        "type": "boolean",
                        "description": "Whether the default version profile of the App Connector Group is applied or overridden.\n"
                    },
                    "serviceEdges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/ZPAServiceEdgeGroupServiceEdge:ZPAServiceEdgeGroupServiceEdge"
                        }
                    },
                    "trustedNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/ZPAServiceEdgeGroupTrustedNetwork:ZPAServiceEdgeGroupTrustedNetwork"
                        }
                    },
                    "upgradeDay": {
                        "type": "string",
                        "description": "Service Edges in this group will attempt to update to a newer version of the software during this specified day.\n"
                    },
                    "upgradeTimeInSecs": {
                        "type": "string",
                        "description": "Service Edges in this group will attempt to update to a newer version of the software during this specified time.\n"
                    },
                    "versionProfileId": {
                        "type": "string",
                        "description": "ID of the version profile. To learn more\n"
                    },
                    "versionProfileName": {
                        "type": "string",
                        "description": "ID of the version profile. To learn more\n"
                    },
                    "versionProfileVisibilityScope": {
                        "type": "string",
                        "description": "ID of the version profile. To learn more\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "zpa:index/getZPAAppConnectorController:getZPAAppConnectorController": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPAAppConnectorController.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPAAppConnectorController.\n",
                "properties": {
                    "appConnectorGroupId": {
                        "type": "string"
                    },
                    "appConnectorGroupName": {
                        "type": "string"
                    },
                    "applicationStartTime": {
                        "type": "string"
                    },
                    "controlChannelStatus": {
                        "type": "string"
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "ctrlBrokerName": {
                        "type": "string"
                    },
                    "currentVersion": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "enrollmentCert": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "expectedUpgradeTime": {
                        "type": "string"
                    },
                    "expectedVersion": {
                        "type": "string"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipAcl": {
                        "type": "string"
                    },
                    "issuedCertId": {
                        "type": "string"
                    },
                    "lastBrokerConnectTime": {
                        "type": "string"
                    },
                    "lastBrokerConnectTimeDuration": {
                        "type": "string"
                    },
                    "lastBrokerDisconnectTime": {
                        "type": "string"
                    },
                    "lastBrokerDisconnectTimeDuration": {
                        "type": "string"
                    },
                    "lastUpgradeTime": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "platform": {
                        "type": "string"
                    },
                    "previousVersion": {
                        "type": "string"
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "provisioningKeyId": {
                        "type": "string"
                    },
                    "provisioningKeyName": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "sargeVersion": {
                        "type": "string"
                    },
                    "upgradeAttempt": {
                        "type": "string"
                    },
                    "upgradeStatus": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "appConnectorGroupId",
                    "appConnectorGroupName",
                    "applicationStartTime",
                    "controlChannelStatus",
                    "creationTime",
                    "ctrlBrokerName",
                    "currentVersion",
                    "description",
                    "enabled",
                    "enrollmentCert",
                    "expectedUpgradeTime",
                    "expectedVersion",
                    "fingerprint",
                    "id",
                    "ipAcl",
                    "issuedCertId",
                    "lastBrokerConnectTime",
                    "lastBrokerConnectTimeDuration",
                    "lastBrokerDisconnectTime",
                    "lastBrokerDisconnectTimeDuration",
                    "lastUpgradeTime",
                    "latitude",
                    "location",
                    "longitude",
                    "modifiedTime",
                    "modifiedby",
                    "platform",
                    "previousVersion",
                    "privateIp",
                    "provisioningKeyId",
                    "provisioningKeyName",
                    "publicIp",
                    "sargeVersion",
                    "upgradeAttempt",
                    "upgradeStatus"
                ]
            }
        },
        "zpa:index/getZPAAppConnectorGroup:getZPAAppConnectorGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPAAppConnectorGroup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "overrideVersionProfile": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPAAppConnectorGroup.\n",
                "properties": {
                    "cityCountry": {
                        "type": "string"
                    },
                    "connectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPAAppConnectorGroupConnector:getZPAAppConnectorGroupConnector"
                        }
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dnsQueryType": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "geoLocationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    },
                    "lssAppConnectorGroup": {
                        "type": "boolean"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "overrideVersionProfile": {
                        "type": "boolean"
                    },
                    "serverGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPAAppConnectorGroupServerGroup:getZPAAppConnectorGroupServerGroup"
                        }
                    },
                    "upgradeDay": {
                        "type": "string"
                    },
                    "upgradeTimeInSecs": {
                        "type": "string"
                    },
                    "versionProfileId": {
                        "type": "string"
                    },
                    "versionProfileName": {
                        "type": "string"
                    },
                    "versionProfileVisibilityScope": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cityCountry",
                    "connectors",
                    "countryCode",
                    "creationTime",
                    "description",
                    "dnsQueryType",
                    "enabled",
                    "geoLocationId",
                    "latitude",
                    "location",
                    "longitude",
                    "lssAppConnectorGroup",
                    "modifiedTime",
                    "modifiedby",
                    "serverGroups",
                    "upgradeDay",
                    "upgradeTimeInSecs",
                    "versionProfileId",
                    "versionProfileName",
                    "versionProfileVisibilityScope"
                ]
            }
        },
        "zpa:index/getZPAAppSegmentBrowserAccess:getZPAAppSegmentBrowserAccess": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPAAppSegmentBrowserAccess.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tcpPortRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPAAppSegmentBrowserAccessTcpPortRange:getZPAAppSegmentBrowserAccessTcpPortRange"
                        }
                    },
                    "udpPortRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPAAppSegmentBrowserAccessUdpPortRange:getZPAAppSegmentBrowserAccessUdpPortRange"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPAAppSegmentBrowserAccess.\n",
                "properties": {
                    "bypassType": {
                        "type": "string"
                    },
                    "clientlessApps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPAAppSegmentBrowserAccessClientlessApp:getZPAAppSegmentBrowserAccessClientlessApp"
                        }
                    },
                    "configSpace": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domainNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "doubleEncrypt": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "healthCheckType": {
                        "type": "string"
                    },
                    "healthReporting": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipAnchored": {
                        "type": "boolean"
                    },
                    "isCnameEnabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "passiveHealthEnabled": {
                        "type": "boolean"
                    },
                    "segmentGroupId": {
                        "type": "string"
                    },
                    "segmentGroupName": {
                        "type": "string"
                    },
                    "serverGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPAAppSegmentBrowserAccessServerGroup:getZPAAppSegmentBrowserAccessServerGroup"
                        }
                    },
                    "tcpPortRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "udpPortRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "bypassType",
                    "clientlessApps",
                    "configSpace",
                    "description",
                    "domainNames",
                    "doubleEncrypt",
                    "enabled",
                    "healthCheckType",
                    "healthReporting",
                    "ipAnchored",
                    "isCnameEnabled",
                    "passiveHealthEnabled",
                    "segmentGroupId",
                    "segmentGroupName",
                    "serverGroups",
                    "tcpPortRanges",
                    "tcpPortRanges",
                    "udpPortRanges",
                    "udpPortRanges"
                ]
            }
        },
        "zpa:index/getZPAApplicationSegment:getZPAApplicationSegment": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPAApplicationSegment.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tcpPortRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPAApplicationSegmentTcpPortRange:getZPAApplicationSegmentTcpPortRange"
                        }
                    },
                    "udpPortRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPAApplicationSegmentUdpPortRange:getZPAApplicationSegmentUdpPortRange"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPAApplicationSegment.\n",
                "properties": {
                    "bypassType": {
                        "type": "string"
                    },
                    "configSpace": {
                        "type": "string"
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "defaultIdleTimeout": {
                        "type": "string"
                    },
                    "defaultMaxAge": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domainNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "doubleEncrypt": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "healthChecktype": {
                        "type": "string"
                    },
                    "healthReporting": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipAnchored": {
                        "type": "boolean"
                    },
                    "isCnameEnabled": {
                        "type": "boolean"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "passiveHealthEnabled": {
                        "type": "boolean"
                    },
                    "segmentGroupId": {
                        "type": "string"
                    },
                    "segmentGroupName": {
                        "type": "string"
                    },
                    "serverGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPAApplicationSegmentServerGroup:getZPAApplicationSegmentServerGroup"
                        }
                    },
                    "tcpPortRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "udpPortRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "bypassType",
                    "configSpace",
                    "creationTime",
                    "defaultIdleTimeout",
                    "defaultMaxAge",
                    "description",
                    "domainNames",
                    "doubleEncrypt",
                    "enabled",
                    "healthChecktype",
                    "healthReporting",
                    "ipAnchored",
                    "isCnameEnabled",
                    "modifiedTime",
                    "modifiedby",
                    "passiveHealthEnabled",
                    "segmentGroupId",
                    "segmentGroupName",
                    "serverGroups",
                    "tcpPortRanges",
                    "tcpPortRanges",
                    "udpPortRanges",
                    "udpPortRanges"
                ]
            }
        },
        "zpa:index/getZPAApplicationServer:getZPAApplicationServer": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPAApplicationServer.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPAApplicationServer.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "appServerGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "configSpace": {
                        "type": "string"
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "appServerGroupIds",
                    "configSpace",
                    "creationTime",
                    "description",
                    "enabled",
                    "modifiedTime",
                    "modifiedby"
                ]
            }
        },
        "zpa:index/getZPABaCertificate:getZPABaCertificate": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPABaCertificate.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPABaCertificate.\n",
                "properties": {
                    "certChain": {
                        "type": "string"
                    },
                    "cname": {
                        "type": "string"
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "issuedBy": {
                        "type": "string"
                    },
                    "issuedTo": {
                        "type": "string"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serialNo": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "validFromInEpochsec": {
                        "type": "string"
                    },
                    "validToInEpochsec": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "certChain",
                    "cname",
                    "creationTime",
                    "description",
                    "issuedBy",
                    "issuedTo",
                    "modifiedTime",
                    "modifiedby",
                    "sans",
                    "serialNo",
                    "status",
                    "validFromInEpochsec",
                    "validToInEpochsec"
                ]
            }
        },
        "zpa:index/getZPACloudConnectorGroup:getZPACloudConnectorGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPACloudConnectorGroup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPACloudConnectorGroup.\n",
                "properties": {
                    "cloudConnectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPACloudConnectorGroupCloudConnector:getZPACloudConnectorGroupCloudConnector"
                        }
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "geolocationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ziaCloud": {
                        "type": "string"
                    },
                    "ziaOrgId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cloudConnectors",
                    "creationTime",
                    "description",
                    "enabled",
                    "geolocationId",
                    "modifiedTime",
                    "modifiedby",
                    "ziaCloud",
                    "ziaOrgId"
                ]
            }
        },
        "zpa:index/getZPACustomerVersionProfile:getZPACustomerVersionProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPACustomerVersionProfile.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getZPACustomerVersionProfile.\n",
                "properties": {
                    "creationTime": {
                        "type": "string"
                    },
                    "customScopeCustomerIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPACustomerVersionProfileCustomScopeCustomerId:getZPACustomerVersionProfileCustomScopeCustomerId"
                        }
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "upgradePriority": {
                        "type": "string"
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPACustomerVersionProfileVersion:getZPACustomerVersionProfileVersion"
                        }
                    },
                    "visibilityScope": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creationTime",
                    "customScopeCustomerIds",
                    "customerId",
                    "description",
                    "id",
                    "modifiedTime",
                    "modifiedby",
                    "name",
                    "upgradePriority",
                    "versions",
                    "visibilityScope"
                ]
            }
        },
        "zpa:index/getZPAEnrollmentCert:getZPAEnrollmentCert": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPAEnrollmentCert.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPAEnrollmentCert.\n",
                "properties": {
                    "allowSigning": {
                        "type": "boolean"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "clientCertType": {
                        "type": "string"
                    },
                    "cname": {
                        "type": "string"
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "csr": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "issuedBy": {
                        "type": "string"
                    },
                    "issuedTo": {
                        "type": "string"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parentCertId": {
                        "type": "string"
                    },
                    "parentCertName": {
                        "type": "string"
                    },
                    "privateKey": {
                        "type": "string"
                    },
                    "privateKeyPresent": {
                        "type": "boolean"
                    },
                    "serialNo": {
                        "type": "string"
                    },
                    "validFromInEpochSec": {
                        "type": "string"
                    },
                    "validToInEpochSec": {
                        "type": "string"
                    },
                    "zrsaEncryptedPrivateKey": {
                        "type": "string"
                    },
                    "zrsaEncryptedSessionKey": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "allowSigning",
                    "certificate",
                    "clientCertType",
                    "cname",
                    "creationTime",
                    "csr",
                    "description",
                    "issuedBy",
                    "issuedTo",
                    "modifiedTime",
                    "modifiedby",
                    "parentCertId",
                    "parentCertName",
                    "privateKey",
                    "privateKeyPresent",
                    "serialNo",
                    "validFromInEpochSec",
                    "validToInEpochSec",
                    "zrsaEncryptedPrivateKey",
                    "zrsaEncryptedSessionKey"
                ]
            }
        },
        "zpa:index/getZPAIdPController:getZPAIdPController": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPAIdPController.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPAIdPController.\n",
                "properties": {
                    "adminMetadatas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPAIdPControllerAdminMetadata:getZPAIdPControllerAdminMetadata"
                        }
                    },
                    "adminSpSigningCertId": {
                        "type": "string"
                    },
                    "autoProvision": {
                        "type": "string"
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "disableSamlBasedPolicy": {
                        "type": "boolean"
                    },
                    "domainLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "enableScimBasedPolicy": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "idpEntityId": {
                        "type": "string"
                    },
                    "loginNameAttribute": {
                        "type": "string"
                    },
                    "loginUrl": {
                        "type": "string"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "reauthOnUserUpdate": {
                        "type": "boolean"
                    },
                    "redirectBinding": {
                        "type": "boolean"
                    },
                    "scimEnabled": {
                        "type": "boolean"
                    },
                    "scimServiceProviderEndpoint": {
                        "type": "string"
                    },
                    "scimSharedSecretExists": {
                        "type": "boolean"
                    },
                    "signSamlRequest": {
                        "type": "string"
                    },
                    "ssoTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "useCustomSpMetadata": {
                        "type": "boolean"
                    },
                    "userMetadatas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPAIdPControllerUserMetadata:getZPAIdPControllerUserMetadata"
                        }
                    },
                    "userSpSigningCertId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminMetadatas",
                    "adminSpSigningCertId",
                    "autoProvision",
                    "creationTime",
                    "description",
                    "disableSamlBasedPolicy",
                    "domainLists",
                    "enableScimBasedPolicy",
                    "enabled",
                    "id",
                    "idpEntityId",
                    "loginNameAttribute",
                    "loginUrl",
                    "modifiedTime",
                    "modifiedby",
                    "name",
                    "reauthOnUserUpdate",
                    "redirectBinding",
                    "scimEnabled",
                    "scimServiceProviderEndpoint",
                    "scimSharedSecretExists",
                    "signSamlRequest",
                    "ssoTypes",
                    "useCustomSpMetadata",
                    "userMetadatas",
                    "userSpSigningCertId"
                ]
            }
        },
        "zpa:index/getZPALSSConfigClientTypes:getZPALSSConfigClientTypes": {
            "outputs": {
                "description": "A collection of values returned by getZPALSSConfigClientTypes.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "zpnClientTypeEdgeConnector": {
                        "type": "string"
                    },
                    "zpnClientTypeExporter": {
                        "type": "string"
                    },
                    "zpnClientTypeIpAnchoring": {
                        "type": "string"
                    },
                    "zpnClientTypeMachineTunnel": {
                        "type": "string"
                    },
                    "zpnClientTypeSlogger": {
                        "type": "string"
                    },
                    "zpnClientTypeZapp": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "zpnClientTypeEdgeConnector",
                    "zpnClientTypeExporter",
                    "zpnClientTypeIpAnchoring",
                    "zpnClientTypeMachineTunnel",
                    "zpnClientTypeSlogger",
                    "zpnClientTypeZapp",
                    "id"
                ]
            }
        },
        "zpa:index/getZPALSSConfigLogTypeFormats:getZPALSSConfigLogTypeFormats": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPALSSConfigLogTypeFormats.\n",
                "properties": {
                    "logType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "logType"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getZPALSSConfigLogTypeFormats.\n",
                "properties": {
                    "csv": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "logType": {
                        "type": "string"
                    },
                    "tsv": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "csv",
                    "json",
                    "logType",
                    "tsv",
                    "id"
                ]
            }
        },
        "zpa:index/getZPALSSConfigMachineGroup:getZPALSSConfigMachineGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPALSSConfigMachineGroup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPALSSConfigMachineGroup.\n",
                "properties": {
                    "creationTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "machines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPALSSConfigMachineGroupMachine:getZPALSSConfigMachineGroupMachine"
                        }
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creationTime",
                    "description",
                    "enabled",
                    "machines",
                    "modifiedTime",
                    "modifiedby"
                ]
            }
        },
        "zpa:index/getZPALSSConfigStatusCodes:getZPALSSConfigStatusCodes": {
            "outputs": {
                "description": "A collection of values returned by getZPALSSConfigStatusCodes.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "zpnAstAuthLog": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "zpnAuthLog": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "zpnSysAuthLog": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "zpnTransLog": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "zpnAstAuthLog",
                    "zpnAuthLog",
                    "zpnSysAuthLog",
                    "zpnTransLog",
                    "id"
                ]
            }
        },
        "zpa:index/getZPALogStreamingService:getZPALogStreamingService": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPALogStreamingService.\n",
                "properties": {
                    "configs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPALogStreamingServiceConfig:getZPALogStreamingServiceConfig"
                        }
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPALogStreamingService.\n",
                "properties": {
                    "configs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPALogStreamingServiceConfig:getZPALogStreamingServiceConfig"
                        }
                    },
                    "connectorGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPALogStreamingServiceConnectorGroup:getZPALogStreamingServiceConnectorGroup"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "policyRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPALogStreamingServicePolicyRule:getZPALogStreamingServicePolicyRule"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "configs",
                    "connectorGroups",
                    "policyRules"
                ]
            }
        },
        "zpa:index/getZPAPolicyType:getZPAPolicyType": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPAPolicyType.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "policyType": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPAPolicyType.\n",
                "properties": {
                    "creationTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyType": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPAPolicyTypeRule:getZPAPolicyTypeRule"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "creationTime",
                    "description",
                    "enabled",
                    "modifiedTime",
                    "modifiedby",
                    "name",
                    "policyType",
                    "rules"
                ]
            }
        },
        "zpa:index/getZPAPostureProfile:getZPAPostureProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPAPostureProfile.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPAPostureProfile.\n",
                "properties": {
                    "creationTime": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "masterCustomerId": {
                        "type": "string"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "postureUdid": {
                        "type": "string"
                    },
                    "zscalerCloud": {
                        "type": "string"
                    },
                    "zscalerCustomerId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creationTime",
                    "domain",
                    "id",
                    "masterCustomerId",
                    "modifiedTime",
                    "modifiedby",
                    "postureUdid",
                    "zscalerCloud",
                    "zscalerCustomerId"
                ]
            }
        },
        "zpa:index/getZPAProvisioningKey:getZPAProvisioningKey": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPAProvisioningKey.\n",
                "properties": {
                    "associationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "associationType"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getZPAProvisioningKey.\n",
                "properties": {
                    "appConnectorGroupId": {
                        "type": "string"
                    },
                    "appConnectorGroupName": {
                        "type": "string"
                    },
                    "associationType": {
                        "type": "string"
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "enrollmentCertId": {
                        "type": "string"
                    },
                    "enrollmentCertName": {
                        "type": "string"
                    },
                    "expirationInEpochSec": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipAcls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "maxUsage": {
                        "type": "string"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "provisioningKey": {
                        "type": "string"
                    },
                    "uiConfig": {
                        "type": "string"
                    },
                    "usageCount": {
                        "type": "string"
                    },
                    "zcomponentId": {
                        "type": "string"
                    },
                    "zcomponentName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "appConnectorGroupId",
                    "appConnectorGroupName",
                    "associationType",
                    "creationTime",
                    "enabled",
                    "enrollmentCertId",
                    "enrollmentCertName",
                    "expirationInEpochSec",
                    "ipAcls",
                    "maxUsage",
                    "modifiedTime",
                    "modifiedby",
                    "provisioningKey",
                    "uiConfig",
                    "usageCount",
                    "zcomponentId",
                    "zcomponentName"
                ]
            }
        },
        "zpa:index/getZPASAMLAttribute:getZPASAMLAttribute": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPASAMLAttribute.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "idpName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPASAMLAttribute.\n",
                "properties": {
                    "creationTime": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "idpId": {
                        "type": "string"
                    },
                    "idpName": {
                        "type": "string"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "samlName": {
                        "type": "string"
                    },
                    "userAttribute": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "creationTime",
                    "id",
                    "idpId",
                    "modifiedTime",
                    "modifiedby",
                    "name",
                    "samlName",
                    "userAttribute"
                ]
            }
        },
        "zpa:index/getZPASCIMAttributeHeader:getZPASCIMAttributeHeader": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPASCIMAttributeHeader.\n",
                "properties": {
                    "idpName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPASCIMAttributeHeader.\n",
                "properties": {
                    "canonicalValues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "caseSensitive": {
                        "type": "boolean"
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "dataType": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "idpId": {
                        "type": "string"
                    },
                    "idpName": {
                        "type": "string"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "multivalued": {
                        "type": "boolean"
                    },
                    "mutability": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "returned": {
                        "type": "string"
                    },
                    "schemaUri": {
                        "type": "string"
                    },
                    "uniqueness": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "canonicalValues",
                    "caseSensitive",
                    "creationTime",
                    "dataType",
                    "description",
                    "id",
                    "idpId",
                    "modifiedTime",
                    "modifiedby",
                    "multivalued",
                    "mutability",
                    "required",
                    "returned",
                    "schemaUri",
                    "uniqueness"
                ]
            }
        },
        "zpa:index/getZPASCIMGroups:getZPASCIMGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPASCIMGroups.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "idpId": {
                        "type": "integer"
                    },
                    "idpName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPASCIMGroups.\n",
                "properties": {
                    "creationTime": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "idpGroupId": {
                        "type": "string"
                    },
                    "idpId": {
                        "type": "integer"
                    },
                    "idpName": {
                        "type": "string"
                    },
                    "modifiedTime": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creationTime",
                    "idpGroupId",
                    "modifiedTime"
                ]
            }
        },
        "zpa:index/getZPASegmentGroup:getZPASegmentGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPASegmentGroup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyMigrated": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPASegmentGroup.\n",
                "properties": {
                    "applications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPASegmentGroupApplication:getZPASegmentGroupApplication"
                        }
                    },
                    "configSpace": {
                        "type": "string"
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyMigrated": {
                        "type": "boolean"
                    },
                    "tcpKeepAliveEnabled": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "applications",
                    "configSpace",
                    "creationTime",
                    "description",
                    "enabled",
                    "modifiedTime",
                    "modifiedby",
                    "policyMigrated",
                    "tcpKeepAliveEnabled"
                ]
            }
        },
        "zpa:index/getZPAServerGroup:getZPAServerGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPAServerGroup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPAServerGroup.\n",
                "properties": {
                    "appConnectorGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPAServerGroupAppConnectorGroup:getZPAServerGroupAppConnectorGroup"
                        }
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPAServerGroupApplication:getZPAServerGroupApplication"
                        }
                    },
                    "configSpace": {
                        "type": "string"
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dynamicDiscovery": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipAnchored": {
                        "type": "boolean"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "servers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPAServerGroupServer:getZPAServerGroupServer"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "appConnectorGroups",
                    "applications",
                    "configSpace",
                    "creationTime",
                    "description",
                    "dynamicDiscovery",
                    "enabled",
                    "ipAnchored",
                    "modifiedTime",
                    "modifiedby",
                    "servers"
                ]
            }
        },
        "zpa:index/getZPAServiceEdgeController:getZPAServiceEdgeController": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPAServiceEdgeController.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPAServiceEdgeController.\n",
                "properties": {
                    "applicationStartTime": {
                        "type": "string"
                    },
                    "controlChannelStatus": {
                        "type": "string"
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "ctrlBrokerName": {
                        "type": "string"
                    },
                    "currentVersion": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "enrollmentCert": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "expectedUpgradeTime": {
                        "type": "string"
                    },
                    "expectedVersion": {
                        "type": "string"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipAcl": {
                        "type": "string"
                    },
                    "issuedCertId": {
                        "type": "string"
                    },
                    "lastBrokerConnectTime": {
                        "type": "string"
                    },
                    "lastBrokerConnectTimeDuration": {
                        "type": "string"
                    },
                    "lastBrokerDisconnectTime": {
                        "type": "string"
                    },
                    "lastBrokerDisconnectTimeDuration": {
                        "type": "string"
                    },
                    "lastUpgradeTime": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "string"
                    },
                    "listenIps": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "platform": {
                        "type": "string"
                    },
                    "previousVersion": {
                        "type": "string"
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "provisioningKeyId": {
                        "type": "string"
                    },
                    "provisioningKeyName": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "publishIps": {
                        "type": "string"
                    },
                    "sargeVersion": {
                        "type": "string"
                    },
                    "serviceEdgeGroupId": {
                        "type": "string"
                    },
                    "serviceEdgeGroupName": {
                        "type": "string"
                    },
                    "upgradeAttempt": {
                        "type": "string"
                    },
                    "upgradeStatus": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "applicationStartTime",
                    "controlChannelStatus",
                    "creationTime",
                    "ctrlBrokerName",
                    "currentVersion",
                    "description",
                    "enabled",
                    "enrollmentCert",
                    "expectedUpgradeTime",
                    "expectedVersion",
                    "fingerprint",
                    "id",
                    "ipAcl",
                    "issuedCertId",
                    "lastBrokerConnectTime",
                    "lastBrokerConnectTimeDuration",
                    "lastBrokerDisconnectTime",
                    "lastBrokerDisconnectTimeDuration",
                    "lastUpgradeTime",
                    "latitude",
                    "listenIps",
                    "location",
                    "longitude",
                    "modifiedTime",
                    "modifiedby",
                    "platform",
                    "previousVersion",
                    "privateIp",
                    "provisioningKeyId",
                    "provisioningKeyName",
                    "publicIp",
                    "publishIps",
                    "sargeVersion",
                    "serviceEdgeGroupId",
                    "serviceEdgeGroupName",
                    "upgradeAttempt",
                    "upgradeStatus"
                ]
            }
        },
        "zpa:index/getZPAServiceEdgeGroup:getZPAServiceEdgeGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPAServiceEdgeGroup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPAServiceEdgeGroup.\n",
                "properties": {
                    "cityCountry": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "geoLocationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isPublic": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "overrideVersionProfile": {
                        "type": "boolean"
                    },
                    "serviceEdges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPAServiceEdgeGroupServiceEdge:getZPAServiceEdgeGroupServiceEdge"
                        }
                    },
                    "trustedNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zpa:index/getZPAServiceEdgeGroupTrustedNetwork:getZPAServiceEdgeGroupTrustedNetwork"
                        }
                    },
                    "upgradeDay": {
                        "type": "string"
                    },
                    "upgradeTimeInSecs": {
                        "type": "string"
                    },
                    "versionProfileId": {
                        "type": "string"
                    },
                    "versionProfileName": {
                        "type": "string"
                    },
                    "versionProfileVisibilityScope": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cityCountry",
                    "countryCode",
                    "creationTime",
                    "description",
                    "enabled",
                    "geoLocationId",
                    "id",
                    "isPublic",
                    "latitude",
                    "location",
                    "longitude",
                    "modifiedTime",
                    "modifiedby",
                    "name",
                    "overrideVersionProfile",
                    "serviceEdges",
                    "trustedNetworks",
                    "upgradeDay",
                    "upgradeTimeInSecs",
                    "versionProfileId",
                    "versionProfileName",
                    "versionProfileVisibilityScope"
                ]
            }
        },
        "zpa:index/getZPATrustedNetwork:getZPATrustedNetwork": {
            "inputs": {
                "description": "A collection of arguments for invoking getZPATrustedNetwork.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZPATrustedNetwork.\n",
                "properties": {
                    "creationTime": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "modifiedTime": {
                        "type": "string"
                    },
                    "modifiedby": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "zscalerCloud": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creationTime",
                    "domain",
                    "modifiedTime",
                    "modifiedby",
                    "networkId",
                    "zscalerCloud"
                ]
            }
        }
    }
}