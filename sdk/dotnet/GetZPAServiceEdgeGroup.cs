// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.willguibr
{
    public static class GetZPAServiceEdgeGroup
    {
        public static Task<GetZPAServiceEdgeGroupResult> InvokeAsync(GetZPAServiceEdgeGroupArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetZPAServiceEdgeGroupResult>("zpa:index/getZPAServiceEdgeGroup:getZPAServiceEdgeGroup", args ?? new GetZPAServiceEdgeGroupArgs(), options.WithDefaults());

        public static Output<GetZPAServiceEdgeGroupResult> Invoke(GetZPAServiceEdgeGroupInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetZPAServiceEdgeGroupResult>("zpa:index/getZPAServiceEdgeGroup:getZPAServiceEdgeGroup", args ?? new GetZPAServiceEdgeGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZPAServiceEdgeGroupArgs : Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        public GetZPAServiceEdgeGroupArgs()
        {
        }
    }

    public sealed class GetZPAServiceEdgeGroupInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetZPAServiceEdgeGroupInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetZPAServiceEdgeGroupResult
    {
        public readonly string CityCountry;
        public readonly string CountryCode;
        public readonly string CreationTime;
        public readonly string Description;
        public readonly bool Enabled;
        public readonly string GeoLocationId;
        public readonly string Id;
        public readonly string IsPublic;
        public readonly string Latitude;
        public readonly string Location;
        public readonly string Longitude;
        public readonly string ModifiedTime;
        public readonly string Modifiedby;
        public readonly string Name;
        public readonly bool OverrideVersionProfile;
        public readonly ImmutableArray<Outputs.GetZPAServiceEdgeGroupServiceEdgeResult> ServiceEdges;
        public readonly ImmutableArray<Outputs.GetZPAServiceEdgeGroupTrustedNetworkResult> TrustedNetworks;
        public readonly string UpgradeDay;
        public readonly string UpgradeTimeInSecs;
        public readonly string VersionProfileId;
        public readonly string VersionProfileName;
        public readonly string VersionProfileVisibilityScope;

        [OutputConstructor]
        private GetZPAServiceEdgeGroupResult(
            string cityCountry,

            string countryCode,

            string creationTime,

            string description,

            bool enabled,

            string geoLocationId,

            string id,

            string isPublic,

            string latitude,

            string location,

            string longitude,

            string modifiedTime,

            string modifiedby,

            string name,

            bool overrideVersionProfile,

            ImmutableArray<Outputs.GetZPAServiceEdgeGroupServiceEdgeResult> serviceEdges,

            ImmutableArray<Outputs.GetZPAServiceEdgeGroupTrustedNetworkResult> trustedNetworks,

            string upgradeDay,

            string upgradeTimeInSecs,

            string versionProfileId,

            string versionProfileName,

            string versionProfileVisibilityScope)
        {
            CityCountry = cityCountry;
            CountryCode = countryCode;
            CreationTime = creationTime;
            Description = description;
            Enabled = enabled;
            GeoLocationId = geoLocationId;
            Id = id;
            IsPublic = isPublic;
            Latitude = latitude;
            Location = location;
            Longitude = longitude;
            ModifiedTime = modifiedTime;
            Modifiedby = modifiedby;
            Name = name;
            OverrideVersionProfile = overrideVersionProfile;
            ServiceEdges = serviceEdges;
            TrustedNetworks = trustedNetworks;
            UpgradeDay = upgradeDay;
            UpgradeTimeInSecs = upgradeTimeInSecs;
            VersionProfileId = versionProfileId;
            VersionProfileName = versionProfileName;
            VersionProfileVisibilityScope = versionProfileVisibilityScope;
        }
    }
}
