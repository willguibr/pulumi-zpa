// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.willguibr
{
    [willguibrResourceType("zpa:index/zPAApplicationServer:ZPAApplicationServer")]
    public partial class ZPAApplicationServer : Pulumi.CustomResource
    {
        /// <summary>
        /// This field defines the domain or IP address of the server.
        /// </summary>
        [Output("address")]
        public Output<string> Address { get; private set; } = null!;

        /// <summary>
        /// This field defines the list of server groups IDs.
        /// </summary>
        [Output("appServerGroupIds")]
        public Output<ImmutableArray<string>> AppServerGroupIds { get; private set; } = null!;

        [Output("configSpace")]
        public Output<string?> ConfigSpace { get; private set; } = null!;

        /// <summary>
        /// This field defines the description of the server.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// This field defines the status of the server.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// This field defines the name of the server.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a ZPAApplicationServer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZPAApplicationServer(string name, ZPAApplicationServerArgs args, CustomResourceOptions? options = null)
            : base("zpa:index/zPAApplicationServer:ZPAApplicationServer", name, args ?? new ZPAApplicationServerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZPAApplicationServer(string name, Input<string> id, ZPAApplicationServerState? state = null, CustomResourceOptions? options = null)
            : base("zpa:index/zPAApplicationServer:ZPAApplicationServer", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/willguibr/pulumi-zpa/releases/download/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZPAApplicationServer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZPAApplicationServer Get(string name, Input<string> id, ZPAApplicationServerState? state = null, CustomResourceOptions? options = null)
        {
            return new ZPAApplicationServer(name, id, state, options);
        }
    }

    public sealed class ZPAApplicationServerArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// This field defines the domain or IP address of the server.
        /// </summary>
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        [Input("appServerGroupIds")]
        private InputList<string>? _appServerGroupIds;

        /// <summary>
        /// This field defines the list of server groups IDs.
        /// </summary>
        public InputList<string> AppServerGroupIds
        {
            get => _appServerGroupIds ?? (_appServerGroupIds = new InputList<string>());
            set => _appServerGroupIds = value;
        }

        [Input("configSpace")]
        public Input<string>? ConfigSpace { get; set; }

        /// <summary>
        /// This field defines the description of the server.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// This field defines the status of the server.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// This field defines the name of the server.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ZPAApplicationServerArgs()
        {
        }
    }

    public sealed class ZPAApplicationServerState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// This field defines the domain or IP address of the server.
        /// </summary>
        [Input("address")]
        public Input<string>? Address { get; set; }

        [Input("appServerGroupIds")]
        private InputList<string>? _appServerGroupIds;

        /// <summary>
        /// This field defines the list of server groups IDs.
        /// </summary>
        public InputList<string> AppServerGroupIds
        {
            get => _appServerGroupIds ?? (_appServerGroupIds = new InputList<string>());
            set => _appServerGroupIds = value;
        }

        [Input("configSpace")]
        public Input<string>? ConfigSpace { get; set; }

        /// <summary>
        /// This field defines the description of the server.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// This field defines the status of the server.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// This field defines the name of the server.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ZPAApplicationServerState()
        {
        }
    }
}
