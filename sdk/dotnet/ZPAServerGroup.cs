// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.willguibr
{
    [willguibrResourceType("zpa:index/zPAServerGroup:ZPAServerGroup")]
    public partial class ZPAServerGroup : Pulumi.CustomResource
    {
        /// <summary>
        /// List of app-connector IDs.
        /// </summary>
        [Output("appConnectorGroups")]
        public Output<ImmutableArray<Outputs.ZPAServerGroupAppConnectorGroup>> AppConnectorGroups { get; private set; } = null!;

        /// <summary>
        /// This field is a json array of app-connector-id only.
        /// </summary>
        [Output("applications")]
        public Output<ImmutableArray<Outputs.ZPAServerGroupApplication>> Applications { get; private set; } = null!;

        [Output("configSpace")]
        public Output<string?> ConfigSpace { get; private set; } = null!;

        /// <summary>
        /// This field is the description of the server group.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// This field controls dynamic discovery of the servers.
        /// </summary>
        [Output("dynamicDiscovery")]
        public Output<bool?> DynamicDiscovery { get; private set; } = null!;

        /// <summary>
        /// This field defines if the server group is enabled or disabled.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        [Output("ipAnchored")]
        public Output<bool?> IpAnchored { get; private set; } = null!;

        /// <summary>
        /// This field defines the name of the server group.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// This field is a list of servers that are applicable only when dynamic discovery is disabled. Server name is required
        /// only in cases where the new servers need to be created in this API. For existing servers, pass only the serverId.
        /// </summary>
        [Output("servers")]
        public Output<ImmutableArray<Outputs.ZPAServerGroupServer>> Servers { get; private set; } = null!;


        /// <summary>
        /// Create a ZPAServerGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZPAServerGroup(string name, ZPAServerGroupArgs? args = null, CustomResourceOptions? options = null)
            : base("zpa:index/zPAServerGroup:ZPAServerGroup", name, args ?? new ZPAServerGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZPAServerGroup(string name, Input<string> id, ZPAServerGroupState? state = null, CustomResourceOptions? options = null)
            : base("zpa:index/zPAServerGroup:ZPAServerGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/willguibr/pulumi-zpa/releases/download/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZPAServerGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZPAServerGroup Get(string name, Input<string> id, ZPAServerGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new ZPAServerGroup(name, id, state, options);
        }
    }

    public sealed class ZPAServerGroupArgs : Pulumi.ResourceArgs
    {
        [Input("appConnectorGroups")]
        private InputList<Inputs.ZPAServerGroupAppConnectorGroupArgs>? _appConnectorGroups;

        /// <summary>
        /// List of app-connector IDs.
        /// </summary>
        public InputList<Inputs.ZPAServerGroupAppConnectorGroupArgs> AppConnectorGroups
        {
            get => _appConnectorGroups ?? (_appConnectorGroups = new InputList<Inputs.ZPAServerGroupAppConnectorGroupArgs>());
            set => _appConnectorGroups = value;
        }

        [Input("applications")]
        private InputList<Inputs.ZPAServerGroupApplicationArgs>? _applications;

        /// <summary>
        /// This field is a json array of app-connector-id only.
        /// </summary>
        public InputList<Inputs.ZPAServerGroupApplicationArgs> Applications
        {
            get => _applications ?? (_applications = new InputList<Inputs.ZPAServerGroupApplicationArgs>());
            set => _applications = value;
        }

        [Input("configSpace")]
        public Input<string>? ConfigSpace { get; set; }

        /// <summary>
        /// This field is the description of the server group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// This field controls dynamic discovery of the servers.
        /// </summary>
        [Input("dynamicDiscovery")]
        public Input<bool>? DynamicDiscovery { get; set; }

        /// <summary>
        /// This field defines if the server group is enabled or disabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("ipAnchored")]
        public Input<bool>? IpAnchored { get; set; }

        /// <summary>
        /// This field defines the name of the server group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("servers")]
        private InputList<Inputs.ZPAServerGroupServerArgs>? _servers;

        /// <summary>
        /// This field is a list of servers that are applicable only when dynamic discovery is disabled. Server name is required
        /// only in cases where the new servers need to be created in this API. For existing servers, pass only the serverId.
        /// </summary>
        public InputList<Inputs.ZPAServerGroupServerArgs> Servers
        {
            get => _servers ?? (_servers = new InputList<Inputs.ZPAServerGroupServerArgs>());
            set => _servers = value;
        }

        public ZPAServerGroupArgs()
        {
        }
    }

    public sealed class ZPAServerGroupState : Pulumi.ResourceArgs
    {
        [Input("appConnectorGroups")]
        private InputList<Inputs.ZPAServerGroupAppConnectorGroupGetArgs>? _appConnectorGroups;

        /// <summary>
        /// List of app-connector IDs.
        /// </summary>
        public InputList<Inputs.ZPAServerGroupAppConnectorGroupGetArgs> AppConnectorGroups
        {
            get => _appConnectorGroups ?? (_appConnectorGroups = new InputList<Inputs.ZPAServerGroupAppConnectorGroupGetArgs>());
            set => _appConnectorGroups = value;
        }

        [Input("applications")]
        private InputList<Inputs.ZPAServerGroupApplicationGetArgs>? _applications;

        /// <summary>
        /// This field is a json array of app-connector-id only.
        /// </summary>
        public InputList<Inputs.ZPAServerGroupApplicationGetArgs> Applications
        {
            get => _applications ?? (_applications = new InputList<Inputs.ZPAServerGroupApplicationGetArgs>());
            set => _applications = value;
        }

        [Input("configSpace")]
        public Input<string>? ConfigSpace { get; set; }

        /// <summary>
        /// This field is the description of the server group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// This field controls dynamic discovery of the servers.
        /// </summary>
        [Input("dynamicDiscovery")]
        public Input<bool>? DynamicDiscovery { get; set; }

        /// <summary>
        /// This field defines if the server group is enabled or disabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("ipAnchored")]
        public Input<bool>? IpAnchored { get; set; }

        /// <summary>
        /// This field defines the name of the server group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("servers")]
        private InputList<Inputs.ZPAServerGroupServerGetArgs>? _servers;

        /// <summary>
        /// This field is a list of servers that are applicable only when dynamic discovery is disabled. Server name is required
        /// only in cases where the new servers need to be created in this API. For existing servers, pass only the serverId.
        /// </summary>
        public InputList<Inputs.ZPAServerGroupServerGetArgs> Servers
        {
            get => _servers ?? (_servers = new InputList<Inputs.ZPAServerGroupServerGetArgs>());
            set => _servers = value;
        }

        public ZPAServerGroupState()
        {
        }
    }
}
