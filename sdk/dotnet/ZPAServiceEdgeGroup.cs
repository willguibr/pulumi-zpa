// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.willguibr
{
    [willguibrResourceType("zpa:index/zPAServiceEdgeGroup:ZPAServiceEdgeGroup")]
    public partial class ZPAServiceEdgeGroup : Pulumi.CustomResource
    {
        [Output("cityCountry")]
        public Output<string> CityCountry { get; private set; } = null!;

        [Output("countryCode")]
        public Output<string> CountryCode { get; private set; } = null!;

        /// <summary>
        /// Description of the Service Edge Group.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Whether this Service Edge Group is enabled or not.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// Enable or disable public access for the Service Edge Group.
        /// </summary>
        [Output("isPublic")]
        public Output<string?> IsPublic { get; private set; } = null!;

        /// <summary>
        /// Latitude for the Service Edge Group.
        /// </summary>
        [Output("latitude")]
        public Output<string> Latitude { get; private set; } = null!;

        /// <summary>
        /// Location for the Service Edge Group.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Longitude for the Service Edge Group.
        /// </summary>
        [Output("longitude")]
        public Output<string> Longitude { get; private set; } = null!;

        /// <summary>
        /// Name of the Service Edge Group.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Whether the default version profile of the App Connector Group is applied or overridden.
        /// </summary>
        [Output("overrideVersionProfile")]
        public Output<bool?> OverrideVersionProfile { get; private set; } = null!;

        [Output("serviceEdges")]
        public Output<ImmutableArray<Outputs.ZPAServiceEdgeGroupServiceEdge>> ServiceEdges { get; private set; } = null!;

        [Output("trustedNetworks")]
        public Output<ImmutableArray<Outputs.ZPAServiceEdgeGroupTrustedNetwork>> TrustedNetworks { get; private set; } = null!;

        /// <summary>
        /// Service Edges in this group will attempt to update to a newer version of the software during this specified day.
        /// </summary>
        [Output("upgradeDay")]
        public Output<string?> UpgradeDay { get; private set; } = null!;

        /// <summary>
        /// Service Edges in this group will attempt to update to a newer version of the software during this specified time.
        /// </summary>
        [Output("upgradeTimeInSecs")]
        public Output<string?> UpgradeTimeInSecs { get; private set; } = null!;

        /// <summary>
        /// ID of the version profile. To learn more
        /// </summary>
        [Output("versionProfileId")]
        public Output<string> VersionProfileId { get; private set; } = null!;

        /// <summary>
        /// ID of the version profile. To learn more
        /// </summary>
        [Output("versionProfileName")]
        public Output<string> VersionProfileName { get; private set; } = null!;

        /// <summary>
        /// ID of the version profile. To learn more
        /// </summary>
        [Output("versionProfileVisibilityScope")]
        public Output<string> VersionProfileVisibilityScope { get; private set; } = null!;


        /// <summary>
        /// Create a ZPAServiceEdgeGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZPAServiceEdgeGroup(string name, ZPAServiceEdgeGroupArgs args, CustomResourceOptions? options = null)
            : base("zpa:index/zPAServiceEdgeGroup:ZPAServiceEdgeGroup", name, args ?? new ZPAServiceEdgeGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZPAServiceEdgeGroup(string name, Input<string> id, ZPAServiceEdgeGroupState? state = null, CustomResourceOptions? options = null)
            : base("zpa:index/zPAServiceEdgeGroup:ZPAServiceEdgeGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/willguibr/pulumi-zpa/releases/download/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZPAServiceEdgeGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZPAServiceEdgeGroup Get(string name, Input<string> id, ZPAServiceEdgeGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new ZPAServiceEdgeGroup(name, id, state, options);
        }
    }

    public sealed class ZPAServiceEdgeGroupArgs : Pulumi.ResourceArgs
    {
        [Input("cityCountry")]
        public Input<string>? CityCountry { get; set; }

        [Input("countryCode")]
        public Input<string>? CountryCode { get; set; }

        /// <summary>
        /// Description of the Service Edge Group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether this Service Edge Group is enabled or not.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Enable or disable public access for the Service Edge Group.
        /// </summary>
        [Input("isPublic")]
        public Input<string>? IsPublic { get; set; }

        /// <summary>
        /// Latitude for the Service Edge Group.
        /// </summary>
        [Input("latitude", required: true)]
        public Input<string> Latitude { get; set; } = null!;

        /// <summary>
        /// Location for the Service Edge Group.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Longitude for the Service Edge Group.
        /// </summary>
        [Input("longitude", required: true)]
        public Input<string> Longitude { get; set; } = null!;

        /// <summary>
        /// Name of the Service Edge Group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether the default version profile of the App Connector Group is applied or overridden.
        /// </summary>
        [Input("overrideVersionProfile")]
        public Input<bool>? OverrideVersionProfile { get; set; }

        [Input("serviceEdges")]
        private InputList<Inputs.ZPAServiceEdgeGroupServiceEdgeArgs>? _serviceEdges;
        public InputList<Inputs.ZPAServiceEdgeGroupServiceEdgeArgs> ServiceEdges
        {
            get => _serviceEdges ?? (_serviceEdges = new InputList<Inputs.ZPAServiceEdgeGroupServiceEdgeArgs>());
            set => _serviceEdges = value;
        }

        [Input("trustedNetworks")]
        private InputList<Inputs.ZPAServiceEdgeGroupTrustedNetworkArgs>? _trustedNetworks;
        public InputList<Inputs.ZPAServiceEdgeGroupTrustedNetworkArgs> TrustedNetworks
        {
            get => _trustedNetworks ?? (_trustedNetworks = new InputList<Inputs.ZPAServiceEdgeGroupTrustedNetworkArgs>());
            set => _trustedNetworks = value;
        }

        /// <summary>
        /// Service Edges in this group will attempt to update to a newer version of the software during this specified day.
        /// </summary>
        [Input("upgradeDay")]
        public Input<string>? UpgradeDay { get; set; }

        /// <summary>
        /// Service Edges in this group will attempt to update to a newer version of the software during this specified time.
        /// </summary>
        [Input("upgradeTimeInSecs")]
        public Input<string>? UpgradeTimeInSecs { get; set; }

        /// <summary>
        /// ID of the version profile. To learn more
        /// </summary>
        [Input("versionProfileId", required: true)]
        public Input<string> VersionProfileId { get; set; } = null!;

        public ZPAServiceEdgeGroupArgs()
        {
        }
    }

    public sealed class ZPAServiceEdgeGroupState : Pulumi.ResourceArgs
    {
        [Input("cityCountry")]
        public Input<string>? CityCountry { get; set; }

        [Input("countryCode")]
        public Input<string>? CountryCode { get; set; }

        /// <summary>
        /// Description of the Service Edge Group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether this Service Edge Group is enabled or not.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Enable or disable public access for the Service Edge Group.
        /// </summary>
        [Input("isPublic")]
        public Input<string>? IsPublic { get; set; }

        /// <summary>
        /// Latitude for the Service Edge Group.
        /// </summary>
        [Input("latitude")]
        public Input<string>? Latitude { get; set; }

        /// <summary>
        /// Location for the Service Edge Group.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Longitude for the Service Edge Group.
        /// </summary>
        [Input("longitude")]
        public Input<string>? Longitude { get; set; }

        /// <summary>
        /// Name of the Service Edge Group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether the default version profile of the App Connector Group is applied or overridden.
        /// </summary>
        [Input("overrideVersionProfile")]
        public Input<bool>? OverrideVersionProfile { get; set; }

        [Input("serviceEdges")]
        private InputList<Inputs.ZPAServiceEdgeGroupServiceEdgeGetArgs>? _serviceEdges;
        public InputList<Inputs.ZPAServiceEdgeGroupServiceEdgeGetArgs> ServiceEdges
        {
            get => _serviceEdges ?? (_serviceEdges = new InputList<Inputs.ZPAServiceEdgeGroupServiceEdgeGetArgs>());
            set => _serviceEdges = value;
        }

        [Input("trustedNetworks")]
        private InputList<Inputs.ZPAServiceEdgeGroupTrustedNetworkGetArgs>? _trustedNetworks;
        public InputList<Inputs.ZPAServiceEdgeGroupTrustedNetworkGetArgs> TrustedNetworks
        {
            get => _trustedNetworks ?? (_trustedNetworks = new InputList<Inputs.ZPAServiceEdgeGroupTrustedNetworkGetArgs>());
            set => _trustedNetworks = value;
        }

        /// <summary>
        /// Service Edges in this group will attempt to update to a newer version of the software during this specified day.
        /// </summary>
        [Input("upgradeDay")]
        public Input<string>? UpgradeDay { get; set; }

        /// <summary>
        /// Service Edges in this group will attempt to update to a newer version of the software during this specified time.
        /// </summary>
        [Input("upgradeTimeInSecs")]
        public Input<string>? UpgradeTimeInSecs { get; set; }

        /// <summary>
        /// ID of the version profile. To learn more
        /// </summary>
        [Input("versionProfileId")]
        public Input<string>? VersionProfileId { get; set; }

        /// <summary>
        /// ID of the version profile. To learn more
        /// </summary>
        [Input("versionProfileName")]
        public Input<string>? VersionProfileName { get; set; }

        /// <summary>
        /// ID of the version profile. To learn more
        /// </summary>
        [Input("versionProfileVisibilityScope")]
        public Input<string>? VersionProfileVisibilityScope { get; set; }

        public ZPAServiceEdgeGroupState()
        {
        }
    }
}
