// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetZPABaCertificate(ctx *pulumi.Context, args *GetZPABaCertificateArgs, opts ...pulumi.InvokeOption) (*GetZPABaCertificateResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetZPABaCertificateResult
	err := ctx.Invoke("zpa:index/getZPABaCertificate:getZPABaCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZPABaCertificate.
type GetZPABaCertificateArgs struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// A collection of values returned by getZPABaCertificate.
type GetZPABaCertificateResult struct {
	CertChain           string   `pulumi:"certChain"`
	Cname               string   `pulumi:"cname"`
	CreationTime        string   `pulumi:"creationTime"`
	Description         string   `pulumi:"description"`
	Id                  *string  `pulumi:"id"`
	IssuedBy            string   `pulumi:"issuedBy"`
	IssuedTo            string   `pulumi:"issuedTo"`
	ModifiedTime        string   `pulumi:"modifiedTime"`
	Modifiedby          string   `pulumi:"modifiedby"`
	Name                *string  `pulumi:"name"`
	Sans                []string `pulumi:"sans"`
	SerialNo            string   `pulumi:"serialNo"`
	Status              string   `pulumi:"status"`
	ValidFromInEpochsec string   `pulumi:"validFromInEpochsec"`
	ValidToInEpochsec   string   `pulumi:"validToInEpochsec"`
}

func GetZPABaCertificateOutput(ctx *pulumi.Context, args GetZPABaCertificateOutputArgs, opts ...pulumi.InvokeOption) GetZPABaCertificateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetZPABaCertificateResult, error) {
			args := v.(GetZPABaCertificateArgs)
			r, err := GetZPABaCertificate(ctx, &args, opts...)
			var s GetZPABaCertificateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetZPABaCertificateResultOutput)
}

// A collection of arguments for invoking getZPABaCertificate.
type GetZPABaCertificateOutputArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetZPABaCertificateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPABaCertificateArgs)(nil)).Elem()
}

// A collection of values returned by getZPABaCertificate.
type GetZPABaCertificateResultOutput struct{ *pulumi.OutputState }

func (GetZPABaCertificateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPABaCertificateResult)(nil)).Elem()
}

func (o GetZPABaCertificateResultOutput) ToGetZPABaCertificateResultOutput() GetZPABaCertificateResultOutput {
	return o
}

func (o GetZPABaCertificateResultOutput) ToGetZPABaCertificateResultOutputWithContext(ctx context.Context) GetZPABaCertificateResultOutput {
	return o
}

func (o GetZPABaCertificateResultOutput) CertChain() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPABaCertificateResult) string { return v.CertChain }).(pulumi.StringOutput)
}

func (o GetZPABaCertificateResultOutput) Cname() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPABaCertificateResult) string { return v.Cname }).(pulumi.StringOutput)
}

func (o GetZPABaCertificateResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPABaCertificateResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o GetZPABaCertificateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPABaCertificateResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetZPABaCertificateResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPABaCertificateResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetZPABaCertificateResultOutput) IssuedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPABaCertificateResult) string { return v.IssuedBy }).(pulumi.StringOutput)
}

func (o GetZPABaCertificateResultOutput) IssuedTo() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPABaCertificateResult) string { return v.IssuedTo }).(pulumi.StringOutput)
}

func (o GetZPABaCertificateResultOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPABaCertificateResult) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetZPABaCertificateResultOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPABaCertificateResult) string { return v.Modifiedby }).(pulumi.StringOutput)
}

func (o GetZPABaCertificateResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZPABaCertificateResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetZPABaCertificateResultOutput) Sans() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZPABaCertificateResult) []string { return v.Sans }).(pulumi.StringArrayOutput)
}

func (o GetZPABaCertificateResultOutput) SerialNo() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPABaCertificateResult) string { return v.SerialNo }).(pulumi.StringOutput)
}

func (o GetZPABaCertificateResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPABaCertificateResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetZPABaCertificateResultOutput) ValidFromInEpochsec() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPABaCertificateResult) string { return v.ValidFromInEpochsec }).(pulumi.StringOutput)
}

func (o GetZPABaCertificateResultOutput) ValidToInEpochsec() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPABaCertificateResult) string { return v.ValidToInEpochsec }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetZPABaCertificateResultOutput{})
}
