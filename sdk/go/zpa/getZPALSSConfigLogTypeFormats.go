// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetZPALSSConfigLogTypeFormats(ctx *pulumi.Context, args *GetZPALSSConfigLogTypeFormatsArgs, opts ...pulumi.InvokeOption) (*GetZPALSSConfigLogTypeFormatsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetZPALSSConfigLogTypeFormatsResult
	err := ctx.Invoke("zpa:index/getZPALSSConfigLogTypeFormats:getZPALSSConfigLogTypeFormats", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZPALSSConfigLogTypeFormats.
type GetZPALSSConfigLogTypeFormatsArgs struct {
	LogType string `pulumi:"logType"`
}

// A collection of values returned by getZPALSSConfigLogTypeFormats.
type GetZPALSSConfigLogTypeFormatsResult struct {
	Csv string `pulumi:"csv"`
	// The provider-assigned unique ID for this managed resource.
	Id      string `pulumi:"id"`
	Json    string `pulumi:"json"`
	LogType string `pulumi:"logType"`
	Tsv     string `pulumi:"tsv"`
}

func GetZPALSSConfigLogTypeFormatsOutput(ctx *pulumi.Context, args GetZPALSSConfigLogTypeFormatsOutputArgs, opts ...pulumi.InvokeOption) GetZPALSSConfigLogTypeFormatsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetZPALSSConfigLogTypeFormatsResult, error) {
			args := v.(GetZPALSSConfigLogTypeFormatsArgs)
			r, err := GetZPALSSConfigLogTypeFormats(ctx, &args, opts...)
			var s GetZPALSSConfigLogTypeFormatsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetZPALSSConfigLogTypeFormatsResultOutput)
}

// A collection of arguments for invoking getZPALSSConfigLogTypeFormats.
type GetZPALSSConfigLogTypeFormatsOutputArgs struct {
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (GetZPALSSConfigLogTypeFormatsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPALSSConfigLogTypeFormatsArgs)(nil)).Elem()
}

// A collection of values returned by getZPALSSConfigLogTypeFormats.
type GetZPALSSConfigLogTypeFormatsResultOutput struct{ *pulumi.OutputState }

func (GetZPALSSConfigLogTypeFormatsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZPALSSConfigLogTypeFormatsResult)(nil)).Elem()
}

func (o GetZPALSSConfigLogTypeFormatsResultOutput) ToGetZPALSSConfigLogTypeFormatsResultOutput() GetZPALSSConfigLogTypeFormatsResultOutput {
	return o
}

func (o GetZPALSSConfigLogTypeFormatsResultOutput) ToGetZPALSSConfigLogTypeFormatsResultOutputWithContext(ctx context.Context) GetZPALSSConfigLogTypeFormatsResultOutput {
	return o
}

func (o GetZPALSSConfigLogTypeFormatsResultOutput) Csv() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigLogTypeFormatsResult) string { return v.Csv }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetZPALSSConfigLogTypeFormatsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigLogTypeFormatsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigLogTypeFormatsResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigLogTypeFormatsResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigLogTypeFormatsResultOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigLogTypeFormatsResult) string { return v.LogType }).(pulumi.StringOutput)
}

func (o GetZPALSSConfigLogTypeFormatsResultOutput) Tsv() pulumi.StringOutput {
	return o.ApplyT(func(v GetZPALSSConfigLogTypeFormatsResult) string { return v.Tsv }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetZPALSSConfigLogTypeFormatsResultOutput{})
}
