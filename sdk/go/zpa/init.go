// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "zpa:index/zPAAppConnectorGroup:ZPAAppConnectorGroup":
		r = &ZPAAppConnectorGroup{}
	case "zpa:index/zPAAppSegmentBrowserAccess:ZPAAppSegmentBrowserAccess":
		r = &ZPAAppSegmentBrowserAccess{}
	case "zpa:index/zPAApplicationSegment:ZPAApplicationSegment":
		r = &ZPAApplicationSegment{}
	case "zpa:index/zPAApplicationServer:ZPAApplicationServer":
		r = &ZPAApplicationServer{}
	case "zpa:index/zPALogStreamingService:ZPALogStreamingService":
		r = &ZPALogStreamingService{}
	case "zpa:index/zPAPolicyAccessForwardingRule:ZPAPolicyAccessForwardingRule":
		r = &ZPAPolicyAccessForwardingRule{}
	case "zpa:index/zPAPolicyAccessRule:ZPAPolicyAccessRule":
		r = &ZPAPolicyAccessRule{}
	case "zpa:index/zPAPolicyAccessTimeoutRule:ZPAPolicyAccessTimeoutRule":
		r = &ZPAPolicyAccessTimeoutRule{}
	case "zpa:index/zPAProvisioningKey:ZPAProvisioningKey":
		r = &ZPAProvisioningKey{}
	case "zpa:index/zPASegmentGroup:ZPASegmentGroup":
		r = &ZPASegmentGroup{}
	case "zpa:index/zPAServerGroup:ZPAServerGroup":
		r = &ZPAServerGroup{}
	case "zpa:index/zPAServiceEdgeGroup:ZPAServiceEdgeGroup":
		r = &ZPAServiceEdgeGroup{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:zpa" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, _ := PkgVersion()
	pulumi.RegisterResourceModule(
		"zpa",
		"index/zPAAppConnectorGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/zPAAppSegmentBrowserAccess",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/zPAApplicationSegment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/zPAApplicationServer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/zPALogStreamingService",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/zPAPolicyAccessForwardingRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/zPAPolicyAccessRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/zPAPolicyAccessTimeoutRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/zPAProvisioningKey",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/zPASegmentGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/zPAServerGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/zPAServiceEdgeGroup",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"zpa",
		&pkg{version},
	)
}
