// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ZPAAppConnectorGroup struct {
	pulumi.CustomResourceState

	CityCountry pulumi.StringOutput `pulumi:"cityCountry"`
	CountryCode pulumi.StringOutput `pulumi:"countryCode"`
	// Description of the App Connector Group
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Whether to enable IPv4 or IPv6, or both, for DNS resolution of all applications in the App Connector Group
	DnsQueryType pulumi.StringPtrOutput `pulumi:"dnsQueryType"`
	// Whether this App Connector Group is enabled or not
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Latitude of the App Connector Group. Integer or decimal. With values in the range of -90 to 90
	Latitude pulumi.StringOutput `pulumi:"latitude"`
	// Location of the App Connector Group
	Location pulumi.StringOutput `pulumi:"location"`
	// Longitude of the App Connector Group. Integer or decimal. With values in the range of -180 to 180
	Longitude            pulumi.StringOutput `pulumi:"longitude"`
	LssAppConnectorGroup pulumi.BoolOutput   `pulumi:"lssAppConnectorGroup"`
	// Name of the App Connector Group
	Name pulumi.StringOutput `pulumi:"name"`
	// Whether the default version profile of the App Connector Group is applied or overridden. Supported values: true, false
	OverrideVersionProfile pulumi.BoolPtrOutput `pulumi:"overrideVersionProfile"`
	// App Connectors in this group will attempt to update to a newer version of the software during this specified day. List
	// of valid days (i.e., Sunday, Monday)
	UpgradeDay pulumi.StringPtrOutput `pulumi:"upgradeDay"`
	// App Connectors in this group will attempt to update to a newer version of the software during this specified time.
	// Integer in seconds (i.e., -66600). The integer should be greater than or equal to 0 and less than 86400, in 15 minute
	// intervals
	UpgradeTimeInSecs pulumi.StringPtrOutput `pulumi:"upgradeTimeInSecs"`
	// ID of the version profile. To learn more, see Version Profile Use Cases. This value is required, if the value for
	// overrideVersionProfile is set to true
	VersionProfileId pulumi.StringPtrOutput `pulumi:"versionProfileId"`
}

// NewZPAAppConnectorGroup registers a new resource with the given unique name, arguments, and options.
func NewZPAAppConnectorGroup(ctx *pulumi.Context,
	name string, args *ZPAAppConnectorGroupArgs, opts ...pulumi.ResourceOption) (*ZPAAppConnectorGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Latitude == nil {
		return nil, errors.New("invalid value for required argument 'Latitude'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Longitude == nil {
		return nil, errors.New("invalid value for required argument 'Longitude'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ZPAAppConnectorGroup
	err := ctx.RegisterResource("zpa:index/zPAAppConnectorGroup:ZPAAppConnectorGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZPAAppConnectorGroup gets an existing ZPAAppConnectorGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZPAAppConnectorGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZPAAppConnectorGroupState, opts ...pulumi.ResourceOption) (*ZPAAppConnectorGroup, error) {
	var resource ZPAAppConnectorGroup
	err := ctx.ReadResource("zpa:index/zPAAppConnectorGroup:ZPAAppConnectorGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZPAAppConnectorGroup resources.
type zpaappConnectorGroupState struct {
	CityCountry *string `pulumi:"cityCountry"`
	CountryCode *string `pulumi:"countryCode"`
	// Description of the App Connector Group
	Description *string `pulumi:"description"`
	// Whether to enable IPv4 or IPv6, or both, for DNS resolution of all applications in the App Connector Group
	DnsQueryType *string `pulumi:"dnsQueryType"`
	// Whether this App Connector Group is enabled or not
	Enabled *bool `pulumi:"enabled"`
	// Latitude of the App Connector Group. Integer or decimal. With values in the range of -90 to 90
	Latitude *string `pulumi:"latitude"`
	// Location of the App Connector Group
	Location *string `pulumi:"location"`
	// Longitude of the App Connector Group. Integer or decimal. With values in the range of -180 to 180
	Longitude            *string `pulumi:"longitude"`
	LssAppConnectorGroup *bool   `pulumi:"lssAppConnectorGroup"`
	// Name of the App Connector Group
	Name *string `pulumi:"name"`
	// Whether the default version profile of the App Connector Group is applied or overridden. Supported values: true, false
	OverrideVersionProfile *bool `pulumi:"overrideVersionProfile"`
	// App Connectors in this group will attempt to update to a newer version of the software during this specified day. List
	// of valid days (i.e., Sunday, Monday)
	UpgradeDay *string `pulumi:"upgradeDay"`
	// App Connectors in this group will attempt to update to a newer version of the software during this specified time.
	// Integer in seconds (i.e., -66600). The integer should be greater than or equal to 0 and less than 86400, in 15 minute
	// intervals
	UpgradeTimeInSecs *string `pulumi:"upgradeTimeInSecs"`
	// ID of the version profile. To learn more, see Version Profile Use Cases. This value is required, if the value for
	// overrideVersionProfile is set to true
	VersionProfileId *string `pulumi:"versionProfileId"`
}

type ZPAAppConnectorGroupState struct {
	CityCountry pulumi.StringPtrInput
	CountryCode pulumi.StringPtrInput
	// Description of the App Connector Group
	Description pulumi.StringPtrInput
	// Whether to enable IPv4 or IPv6, or both, for DNS resolution of all applications in the App Connector Group
	DnsQueryType pulumi.StringPtrInput
	// Whether this App Connector Group is enabled or not
	Enabled pulumi.BoolPtrInput
	// Latitude of the App Connector Group. Integer or decimal. With values in the range of -90 to 90
	Latitude pulumi.StringPtrInput
	// Location of the App Connector Group
	Location pulumi.StringPtrInput
	// Longitude of the App Connector Group. Integer or decimal. With values in the range of -180 to 180
	Longitude            pulumi.StringPtrInput
	LssAppConnectorGroup pulumi.BoolPtrInput
	// Name of the App Connector Group
	Name pulumi.StringPtrInput
	// Whether the default version profile of the App Connector Group is applied or overridden. Supported values: true, false
	OverrideVersionProfile pulumi.BoolPtrInput
	// App Connectors in this group will attempt to update to a newer version of the software during this specified day. List
	// of valid days (i.e., Sunday, Monday)
	UpgradeDay pulumi.StringPtrInput
	// App Connectors in this group will attempt to update to a newer version of the software during this specified time.
	// Integer in seconds (i.e., -66600). The integer should be greater than or equal to 0 and less than 86400, in 15 minute
	// intervals
	UpgradeTimeInSecs pulumi.StringPtrInput
	// ID of the version profile. To learn more, see Version Profile Use Cases. This value is required, if the value for
	// overrideVersionProfile is set to true
	VersionProfileId pulumi.StringPtrInput
}

func (ZPAAppConnectorGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*zpaappConnectorGroupState)(nil)).Elem()
}

type zpaappConnectorGroupArgs struct {
	CountryCode *string `pulumi:"countryCode"`
	// Description of the App Connector Group
	Description *string `pulumi:"description"`
	// Whether to enable IPv4 or IPv6, or both, for DNS resolution of all applications in the App Connector Group
	DnsQueryType *string `pulumi:"dnsQueryType"`
	// Whether this App Connector Group is enabled or not
	Enabled *bool `pulumi:"enabled"`
	// Latitude of the App Connector Group. Integer or decimal. With values in the range of -90 to 90
	Latitude string `pulumi:"latitude"`
	// Location of the App Connector Group
	Location string `pulumi:"location"`
	// Longitude of the App Connector Group. Integer or decimal. With values in the range of -180 to 180
	Longitude            string `pulumi:"longitude"`
	LssAppConnectorGroup *bool  `pulumi:"lssAppConnectorGroup"`
	// Name of the App Connector Group
	Name *string `pulumi:"name"`
	// Whether the default version profile of the App Connector Group is applied or overridden. Supported values: true, false
	OverrideVersionProfile *bool `pulumi:"overrideVersionProfile"`
	// App Connectors in this group will attempt to update to a newer version of the software during this specified day. List
	// of valid days (i.e., Sunday, Monday)
	UpgradeDay *string `pulumi:"upgradeDay"`
	// App Connectors in this group will attempt to update to a newer version of the software during this specified time.
	// Integer in seconds (i.e., -66600). The integer should be greater than or equal to 0 and less than 86400, in 15 minute
	// intervals
	UpgradeTimeInSecs *string `pulumi:"upgradeTimeInSecs"`
	// ID of the version profile. To learn more, see Version Profile Use Cases. This value is required, if the value for
	// overrideVersionProfile is set to true
	VersionProfileId *string `pulumi:"versionProfileId"`
}

// The set of arguments for constructing a ZPAAppConnectorGroup resource.
type ZPAAppConnectorGroupArgs struct {
	CountryCode pulumi.StringPtrInput
	// Description of the App Connector Group
	Description pulumi.StringPtrInput
	// Whether to enable IPv4 or IPv6, or both, for DNS resolution of all applications in the App Connector Group
	DnsQueryType pulumi.StringPtrInput
	// Whether this App Connector Group is enabled or not
	Enabled pulumi.BoolPtrInput
	// Latitude of the App Connector Group. Integer or decimal. With values in the range of -90 to 90
	Latitude pulumi.StringInput
	// Location of the App Connector Group
	Location pulumi.StringInput
	// Longitude of the App Connector Group. Integer or decimal. With values in the range of -180 to 180
	Longitude            pulumi.StringInput
	LssAppConnectorGroup pulumi.BoolPtrInput
	// Name of the App Connector Group
	Name pulumi.StringPtrInput
	// Whether the default version profile of the App Connector Group is applied or overridden. Supported values: true, false
	OverrideVersionProfile pulumi.BoolPtrInput
	// App Connectors in this group will attempt to update to a newer version of the software during this specified day. List
	// of valid days (i.e., Sunday, Monday)
	UpgradeDay pulumi.StringPtrInput
	// App Connectors in this group will attempt to update to a newer version of the software during this specified time.
	// Integer in seconds (i.e., -66600). The integer should be greater than or equal to 0 and less than 86400, in 15 minute
	// intervals
	UpgradeTimeInSecs pulumi.StringPtrInput
	// ID of the version profile. To learn more, see Version Profile Use Cases. This value is required, if the value for
	// overrideVersionProfile is set to true
	VersionProfileId pulumi.StringPtrInput
}

func (ZPAAppConnectorGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zpaappConnectorGroupArgs)(nil)).Elem()
}

type ZPAAppConnectorGroupInput interface {
	pulumi.Input

	ToZPAAppConnectorGroupOutput() ZPAAppConnectorGroupOutput
	ToZPAAppConnectorGroupOutputWithContext(ctx context.Context) ZPAAppConnectorGroupOutput
}

func (*ZPAAppConnectorGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAAppConnectorGroup)(nil)).Elem()
}

func (i *ZPAAppConnectorGroup) ToZPAAppConnectorGroupOutput() ZPAAppConnectorGroupOutput {
	return i.ToZPAAppConnectorGroupOutputWithContext(context.Background())
}

func (i *ZPAAppConnectorGroup) ToZPAAppConnectorGroupOutputWithContext(ctx context.Context) ZPAAppConnectorGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAAppConnectorGroupOutput)
}

// ZPAAppConnectorGroupArrayInput is an input type that accepts ZPAAppConnectorGroupArray and ZPAAppConnectorGroupArrayOutput values.
// You can construct a concrete instance of `ZPAAppConnectorGroupArrayInput` via:
//
//          ZPAAppConnectorGroupArray{ ZPAAppConnectorGroupArgs{...} }
type ZPAAppConnectorGroupArrayInput interface {
	pulumi.Input

	ToZPAAppConnectorGroupArrayOutput() ZPAAppConnectorGroupArrayOutput
	ToZPAAppConnectorGroupArrayOutputWithContext(context.Context) ZPAAppConnectorGroupArrayOutput
}

type ZPAAppConnectorGroupArray []ZPAAppConnectorGroupInput

func (ZPAAppConnectorGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZPAAppConnectorGroup)(nil)).Elem()
}

func (i ZPAAppConnectorGroupArray) ToZPAAppConnectorGroupArrayOutput() ZPAAppConnectorGroupArrayOutput {
	return i.ToZPAAppConnectorGroupArrayOutputWithContext(context.Background())
}

func (i ZPAAppConnectorGroupArray) ToZPAAppConnectorGroupArrayOutputWithContext(ctx context.Context) ZPAAppConnectorGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAAppConnectorGroupArrayOutput)
}

// ZPAAppConnectorGroupMapInput is an input type that accepts ZPAAppConnectorGroupMap and ZPAAppConnectorGroupMapOutput values.
// You can construct a concrete instance of `ZPAAppConnectorGroupMapInput` via:
//
//          ZPAAppConnectorGroupMap{ "key": ZPAAppConnectorGroupArgs{...} }
type ZPAAppConnectorGroupMapInput interface {
	pulumi.Input

	ToZPAAppConnectorGroupMapOutput() ZPAAppConnectorGroupMapOutput
	ToZPAAppConnectorGroupMapOutputWithContext(context.Context) ZPAAppConnectorGroupMapOutput
}

type ZPAAppConnectorGroupMap map[string]ZPAAppConnectorGroupInput

func (ZPAAppConnectorGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZPAAppConnectorGroup)(nil)).Elem()
}

func (i ZPAAppConnectorGroupMap) ToZPAAppConnectorGroupMapOutput() ZPAAppConnectorGroupMapOutput {
	return i.ToZPAAppConnectorGroupMapOutputWithContext(context.Background())
}

func (i ZPAAppConnectorGroupMap) ToZPAAppConnectorGroupMapOutputWithContext(ctx context.Context) ZPAAppConnectorGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAAppConnectorGroupMapOutput)
}

type ZPAAppConnectorGroupOutput struct{ *pulumi.OutputState }

func (ZPAAppConnectorGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAAppConnectorGroup)(nil)).Elem()
}

func (o ZPAAppConnectorGroupOutput) ToZPAAppConnectorGroupOutput() ZPAAppConnectorGroupOutput {
	return o
}

func (o ZPAAppConnectorGroupOutput) ToZPAAppConnectorGroupOutputWithContext(ctx context.Context) ZPAAppConnectorGroupOutput {
	return o
}

func (o ZPAAppConnectorGroupOutput) CityCountry() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringOutput { return v.CityCountry }).(pulumi.StringOutput)
}

func (o ZPAAppConnectorGroupOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringOutput { return v.CountryCode }).(pulumi.StringOutput)
}

// Description of the App Connector Group
func (o ZPAAppConnectorGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether to enable IPv4 or IPv6, or both, for DNS resolution of all applications in the App Connector Group
func (o ZPAAppConnectorGroupOutput) DnsQueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringPtrOutput { return v.DnsQueryType }).(pulumi.StringPtrOutput)
}

// Whether this App Connector Group is enabled or not
func (o ZPAAppConnectorGroupOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Latitude of the App Connector Group. Integer or decimal. With values in the range of -90 to 90
func (o ZPAAppConnectorGroupOutput) Latitude() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringOutput { return v.Latitude }).(pulumi.StringOutput)
}

// Location of the App Connector Group
func (o ZPAAppConnectorGroupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Longitude of the App Connector Group. Integer or decimal. With values in the range of -180 to 180
func (o ZPAAppConnectorGroupOutput) Longitude() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringOutput { return v.Longitude }).(pulumi.StringOutput)
}

func (o ZPAAppConnectorGroupOutput) LssAppConnectorGroup() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.BoolOutput { return v.LssAppConnectorGroup }).(pulumi.BoolOutput)
}

// Name of the App Connector Group
func (o ZPAAppConnectorGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Whether the default version profile of the App Connector Group is applied or overridden. Supported values: true, false
func (o ZPAAppConnectorGroupOutput) OverrideVersionProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.BoolPtrOutput { return v.OverrideVersionProfile }).(pulumi.BoolPtrOutput)
}

// App Connectors in this group will attempt to update to a newer version of the software during this specified day. List
// of valid days (i.e., Sunday, Monday)
func (o ZPAAppConnectorGroupOutput) UpgradeDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringPtrOutput { return v.UpgradeDay }).(pulumi.StringPtrOutput)
}

// App Connectors in this group will attempt to update to a newer version of the software during this specified time.
// Integer in seconds (i.e., -66600). The integer should be greater than or equal to 0 and less than 86400, in 15 minute
// intervals
func (o ZPAAppConnectorGroupOutput) UpgradeTimeInSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringPtrOutput { return v.UpgradeTimeInSecs }).(pulumi.StringPtrOutput)
}

// ID of the version profile. To learn more, see Version Profile Use Cases. This value is required, if the value for
// overrideVersionProfile is set to true
func (o ZPAAppConnectorGroupOutput) VersionProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAAppConnectorGroup) pulumi.StringPtrOutput { return v.VersionProfileId }).(pulumi.StringPtrOutput)
}

type ZPAAppConnectorGroupArrayOutput struct{ *pulumi.OutputState }

func (ZPAAppConnectorGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZPAAppConnectorGroup)(nil)).Elem()
}

func (o ZPAAppConnectorGroupArrayOutput) ToZPAAppConnectorGroupArrayOutput() ZPAAppConnectorGroupArrayOutput {
	return o
}

func (o ZPAAppConnectorGroupArrayOutput) ToZPAAppConnectorGroupArrayOutputWithContext(ctx context.Context) ZPAAppConnectorGroupArrayOutput {
	return o
}

func (o ZPAAppConnectorGroupArrayOutput) Index(i pulumi.IntInput) ZPAAppConnectorGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZPAAppConnectorGroup {
		return vs[0].([]*ZPAAppConnectorGroup)[vs[1].(int)]
	}).(ZPAAppConnectorGroupOutput)
}

type ZPAAppConnectorGroupMapOutput struct{ *pulumi.OutputState }

func (ZPAAppConnectorGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZPAAppConnectorGroup)(nil)).Elem()
}

func (o ZPAAppConnectorGroupMapOutput) ToZPAAppConnectorGroupMapOutput() ZPAAppConnectorGroupMapOutput {
	return o
}

func (o ZPAAppConnectorGroupMapOutput) ToZPAAppConnectorGroupMapOutputWithContext(ctx context.Context) ZPAAppConnectorGroupMapOutput {
	return o
}

func (o ZPAAppConnectorGroupMapOutput) MapIndex(k pulumi.StringInput) ZPAAppConnectorGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZPAAppConnectorGroup {
		return vs[0].(map[string]*ZPAAppConnectorGroup)[vs[1].(string)]
	}).(ZPAAppConnectorGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAAppConnectorGroupInput)(nil)).Elem(), &ZPAAppConnectorGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAAppConnectorGroupArrayInput)(nil)).Elem(), ZPAAppConnectorGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAAppConnectorGroupMapInput)(nil)).Elem(), ZPAAppConnectorGroupMap{})
	pulumi.RegisterOutputType(ZPAAppConnectorGroupOutput{})
	pulumi.RegisterOutputType(ZPAAppConnectorGroupArrayOutput{})
	pulumi.RegisterOutputType(ZPAAppConnectorGroupMapOutput{})
}
