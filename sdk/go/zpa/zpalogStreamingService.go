// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ZPALogStreamingService struct {
	pulumi.CustomResourceState

	Config ZPALogStreamingServiceConfigPtrOutput `pulumi:"config"`
	// App Connector Group(s) to be added to the LSS configuration
	ConnectorGroups    ZPALogStreamingServiceConnectorGroupArrayOutput   `pulumi:"connectorGroups"`
	PolicyRuleId       pulumi.StringOutput                               `pulumi:"policyRuleId"`
	PolicyRuleResource ZPALogStreamingServicePolicyRuleResourcePtrOutput `pulumi:"policyRuleResource"`
}

// NewZPALogStreamingService registers a new resource with the given unique name, arguments, and options.
func NewZPALogStreamingService(ctx *pulumi.Context,
	name string, args *ZPALogStreamingServiceArgs, opts ...pulumi.ResourceOption) (*ZPALogStreamingService, error) {
	if args == nil {
		args = &ZPALogStreamingServiceArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource ZPALogStreamingService
	err := ctx.RegisterResource("zpa:index/zPALogStreamingService:ZPALogStreamingService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZPALogStreamingService gets an existing ZPALogStreamingService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZPALogStreamingService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZPALogStreamingServiceState, opts ...pulumi.ResourceOption) (*ZPALogStreamingService, error) {
	var resource ZPALogStreamingService
	err := ctx.ReadResource("zpa:index/zPALogStreamingService:ZPALogStreamingService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZPALogStreamingService resources.
type zpalogStreamingServiceState struct {
	Config *ZPALogStreamingServiceConfig `pulumi:"config"`
	// App Connector Group(s) to be added to the LSS configuration
	ConnectorGroups    []ZPALogStreamingServiceConnectorGroup    `pulumi:"connectorGroups"`
	PolicyRuleId       *string                                   `pulumi:"policyRuleId"`
	PolicyRuleResource *ZPALogStreamingServicePolicyRuleResource `pulumi:"policyRuleResource"`
}

type ZPALogStreamingServiceState struct {
	Config ZPALogStreamingServiceConfigPtrInput
	// App Connector Group(s) to be added to the LSS configuration
	ConnectorGroups    ZPALogStreamingServiceConnectorGroupArrayInput
	PolicyRuleId       pulumi.StringPtrInput
	PolicyRuleResource ZPALogStreamingServicePolicyRuleResourcePtrInput
}

func (ZPALogStreamingServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*zpalogStreamingServiceState)(nil)).Elem()
}

type zpalogStreamingServiceArgs struct {
	Config *ZPALogStreamingServiceConfig `pulumi:"config"`
	// App Connector Group(s) to be added to the LSS configuration
	ConnectorGroups    []ZPALogStreamingServiceConnectorGroup    `pulumi:"connectorGroups"`
	PolicyRuleResource *ZPALogStreamingServicePolicyRuleResource `pulumi:"policyRuleResource"`
}

// The set of arguments for constructing a ZPALogStreamingService resource.
type ZPALogStreamingServiceArgs struct {
	Config ZPALogStreamingServiceConfigPtrInput
	// App Connector Group(s) to be added to the LSS configuration
	ConnectorGroups    ZPALogStreamingServiceConnectorGroupArrayInput
	PolicyRuleResource ZPALogStreamingServicePolicyRuleResourcePtrInput
}

func (ZPALogStreamingServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zpalogStreamingServiceArgs)(nil)).Elem()
}

type ZPALogStreamingServiceInput interface {
	pulumi.Input

	ToZPALogStreamingServiceOutput() ZPALogStreamingServiceOutput
	ToZPALogStreamingServiceOutputWithContext(ctx context.Context) ZPALogStreamingServiceOutput
}

func (*ZPALogStreamingService) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPALogStreamingService)(nil)).Elem()
}

func (i *ZPALogStreamingService) ToZPALogStreamingServiceOutput() ZPALogStreamingServiceOutput {
	return i.ToZPALogStreamingServiceOutputWithContext(context.Background())
}

func (i *ZPALogStreamingService) ToZPALogStreamingServiceOutputWithContext(ctx context.Context) ZPALogStreamingServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPALogStreamingServiceOutput)
}

// ZPALogStreamingServiceArrayInput is an input type that accepts ZPALogStreamingServiceArray and ZPALogStreamingServiceArrayOutput values.
// You can construct a concrete instance of `ZPALogStreamingServiceArrayInput` via:
//
//          ZPALogStreamingServiceArray{ ZPALogStreamingServiceArgs{...} }
type ZPALogStreamingServiceArrayInput interface {
	pulumi.Input

	ToZPALogStreamingServiceArrayOutput() ZPALogStreamingServiceArrayOutput
	ToZPALogStreamingServiceArrayOutputWithContext(context.Context) ZPALogStreamingServiceArrayOutput
}

type ZPALogStreamingServiceArray []ZPALogStreamingServiceInput

func (ZPALogStreamingServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZPALogStreamingService)(nil)).Elem()
}

func (i ZPALogStreamingServiceArray) ToZPALogStreamingServiceArrayOutput() ZPALogStreamingServiceArrayOutput {
	return i.ToZPALogStreamingServiceArrayOutputWithContext(context.Background())
}

func (i ZPALogStreamingServiceArray) ToZPALogStreamingServiceArrayOutputWithContext(ctx context.Context) ZPALogStreamingServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPALogStreamingServiceArrayOutput)
}

// ZPALogStreamingServiceMapInput is an input type that accepts ZPALogStreamingServiceMap and ZPALogStreamingServiceMapOutput values.
// You can construct a concrete instance of `ZPALogStreamingServiceMapInput` via:
//
//          ZPALogStreamingServiceMap{ "key": ZPALogStreamingServiceArgs{...} }
type ZPALogStreamingServiceMapInput interface {
	pulumi.Input

	ToZPALogStreamingServiceMapOutput() ZPALogStreamingServiceMapOutput
	ToZPALogStreamingServiceMapOutputWithContext(context.Context) ZPALogStreamingServiceMapOutput
}

type ZPALogStreamingServiceMap map[string]ZPALogStreamingServiceInput

func (ZPALogStreamingServiceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZPALogStreamingService)(nil)).Elem()
}

func (i ZPALogStreamingServiceMap) ToZPALogStreamingServiceMapOutput() ZPALogStreamingServiceMapOutput {
	return i.ToZPALogStreamingServiceMapOutputWithContext(context.Background())
}

func (i ZPALogStreamingServiceMap) ToZPALogStreamingServiceMapOutputWithContext(ctx context.Context) ZPALogStreamingServiceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPALogStreamingServiceMapOutput)
}

type ZPALogStreamingServiceOutput struct{ *pulumi.OutputState }

func (ZPALogStreamingServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPALogStreamingService)(nil)).Elem()
}

func (o ZPALogStreamingServiceOutput) ToZPALogStreamingServiceOutput() ZPALogStreamingServiceOutput {
	return o
}

func (o ZPALogStreamingServiceOutput) ToZPALogStreamingServiceOutputWithContext(ctx context.Context) ZPALogStreamingServiceOutput {
	return o
}

func (o ZPALogStreamingServiceOutput) Config() ZPALogStreamingServiceConfigPtrOutput {
	return o.ApplyT(func(v *ZPALogStreamingService) ZPALogStreamingServiceConfigPtrOutput { return v.Config }).(ZPALogStreamingServiceConfigPtrOutput)
}

// App Connector Group(s) to be added to the LSS configuration
func (o ZPALogStreamingServiceOutput) ConnectorGroups() ZPALogStreamingServiceConnectorGroupArrayOutput {
	return o.ApplyT(func(v *ZPALogStreamingService) ZPALogStreamingServiceConnectorGroupArrayOutput {
		return v.ConnectorGroups
	}).(ZPALogStreamingServiceConnectorGroupArrayOutput)
}

func (o ZPALogStreamingServiceOutput) PolicyRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPALogStreamingService) pulumi.StringOutput { return v.PolicyRuleId }).(pulumi.StringOutput)
}

func (o ZPALogStreamingServiceOutput) PolicyRuleResource() ZPALogStreamingServicePolicyRuleResourcePtrOutput {
	return o.ApplyT(func(v *ZPALogStreamingService) ZPALogStreamingServicePolicyRuleResourcePtrOutput {
		return v.PolicyRuleResource
	}).(ZPALogStreamingServicePolicyRuleResourcePtrOutput)
}

type ZPALogStreamingServiceArrayOutput struct{ *pulumi.OutputState }

func (ZPALogStreamingServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZPALogStreamingService)(nil)).Elem()
}

func (o ZPALogStreamingServiceArrayOutput) ToZPALogStreamingServiceArrayOutput() ZPALogStreamingServiceArrayOutput {
	return o
}

func (o ZPALogStreamingServiceArrayOutput) ToZPALogStreamingServiceArrayOutputWithContext(ctx context.Context) ZPALogStreamingServiceArrayOutput {
	return o
}

func (o ZPALogStreamingServiceArrayOutput) Index(i pulumi.IntInput) ZPALogStreamingServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZPALogStreamingService {
		return vs[0].([]*ZPALogStreamingService)[vs[1].(int)]
	}).(ZPALogStreamingServiceOutput)
}

type ZPALogStreamingServiceMapOutput struct{ *pulumi.OutputState }

func (ZPALogStreamingServiceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZPALogStreamingService)(nil)).Elem()
}

func (o ZPALogStreamingServiceMapOutput) ToZPALogStreamingServiceMapOutput() ZPALogStreamingServiceMapOutput {
	return o
}

func (o ZPALogStreamingServiceMapOutput) ToZPALogStreamingServiceMapOutputWithContext(ctx context.Context) ZPALogStreamingServiceMapOutput {
	return o
}

func (o ZPALogStreamingServiceMapOutput) MapIndex(k pulumi.StringInput) ZPALogStreamingServiceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZPALogStreamingService {
		return vs[0].(map[string]*ZPALogStreamingService)[vs[1].(string)]
	}).(ZPALogStreamingServiceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZPALogStreamingServiceInput)(nil)).Elem(), &ZPALogStreamingService{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPALogStreamingServiceArrayInput)(nil)).Elem(), ZPALogStreamingServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPALogStreamingServiceMapInput)(nil)).Elem(), ZPALogStreamingServiceMap{})
	pulumi.RegisterOutputType(ZPALogStreamingServiceOutput{})
	pulumi.RegisterOutputType(ZPALogStreamingServiceArrayOutput{})
	pulumi.RegisterOutputType(ZPALogStreamingServiceMapOutput{})
}
