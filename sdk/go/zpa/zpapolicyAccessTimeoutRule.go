// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ZPAPolicyAccessTimeoutRule struct {
	pulumi.CustomResourceState

	// This is for providing the rule action.
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// This field defines the description of the server.
	ActionId          pulumi.StringPtrOutput `pulumi:"actionId"`
	BypassDefaultRule pulumi.BoolPtrOutput   `pulumi:"bypassDefaultRule"`
	// This is for proviidng the set of conditions for the policy.
	Conditions ZPAPolicyAccessTimeoutRuleConditionArrayOutput `pulumi:"conditions"`
	// This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrOutput `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrOutput `pulumi:"defaultRule"`
	// This is the description of the access policy.
	Description    pulumi.StringPtrOutput `pulumi:"description"`
	LssDefaultRule pulumi.BoolPtrOutput   `pulumi:"lssDefaultRule"`
	// This is the name of the policy.
	Name              pulumi.StringOutput    `pulumi:"name"`
	Operator          pulumi.StringOutput    `pulumi:"operator"`
	PolicySetId       pulumi.StringOutput    `pulumi:"policySetId"`
	PolicyType        pulumi.StringOutput    `pulumi:"policyType"`
	Priority          pulumi.StringOutput    `pulumi:"priority"`
	ReauthDefaultRule pulumi.BoolPtrOutput   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout pulumi.StringPtrOutput `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     pulumi.StringPtrOutput `pulumi:"reauthTimeout"`
	RuleOrder         pulumi.StringOutput    `pulumi:"ruleOrder"`
}

// NewZPAPolicyAccessTimeoutRule registers a new resource with the given unique name, arguments, and options.
func NewZPAPolicyAccessTimeoutRule(ctx *pulumi.Context,
	name string, args *ZPAPolicyAccessTimeoutRuleArgs, opts ...pulumi.ResourceOption) (*ZPAPolicyAccessTimeoutRule, error) {
	if args == nil {
		args = &ZPAPolicyAccessTimeoutRuleArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource ZPAPolicyAccessTimeoutRule
	err := ctx.RegisterResource("zpa:index/zPAPolicyAccessTimeoutRule:ZPAPolicyAccessTimeoutRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZPAPolicyAccessTimeoutRule gets an existing ZPAPolicyAccessTimeoutRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZPAPolicyAccessTimeoutRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZPAPolicyAccessTimeoutRuleState, opts ...pulumi.ResourceOption) (*ZPAPolicyAccessTimeoutRule, error) {
	var resource ZPAPolicyAccessTimeoutRule
	err := ctx.ReadResource("zpa:index/zPAPolicyAccessTimeoutRule:ZPAPolicyAccessTimeoutRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZPAPolicyAccessTimeoutRule resources.
type zpapolicyAccessTimeoutRuleState struct {
	// This is for providing the rule action.
	Action *string `pulumi:"action"`
	// This field defines the description of the server.
	ActionId          *string `pulumi:"actionId"`
	BypassDefaultRule *bool   `pulumi:"bypassDefaultRule"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []ZPAPolicyAccessTimeoutRuleCondition `pulumi:"conditions"`
	// This is for providing a customer message for the user.
	CustomMsg *string `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule *bool `pulumi:"defaultRule"`
	// This is the description of the access policy.
	Description    *string `pulumi:"description"`
	LssDefaultRule *bool   `pulumi:"lssDefaultRule"`
	// This is the name of the policy.
	Name              *string `pulumi:"name"`
	Operator          *string `pulumi:"operator"`
	PolicySetId       *string `pulumi:"policySetId"`
	PolicyType        *string `pulumi:"policyType"`
	Priority          *string `pulumi:"priority"`
	ReauthDefaultRule *bool   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout *string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     *string `pulumi:"reauthTimeout"`
	RuleOrder         *string `pulumi:"ruleOrder"`
}

type ZPAPolicyAccessTimeoutRuleState struct {
	// This is for providing the rule action.
	Action pulumi.StringPtrInput
	// This field defines the description of the server.
	ActionId          pulumi.StringPtrInput
	BypassDefaultRule pulumi.BoolPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions ZPAPolicyAccessTimeoutRuleConditionArrayInput
	// This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrInput
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrInput
	// This is the description of the access policy.
	Description    pulumi.StringPtrInput
	LssDefaultRule pulumi.BoolPtrInput
	// This is the name of the policy.
	Name              pulumi.StringPtrInput
	Operator          pulumi.StringPtrInput
	PolicySetId       pulumi.StringPtrInput
	PolicyType        pulumi.StringPtrInput
	Priority          pulumi.StringPtrInput
	ReauthDefaultRule pulumi.BoolPtrInput
	ReauthIdleTimeout pulumi.StringPtrInput
	ReauthTimeout     pulumi.StringPtrInput
	RuleOrder         pulumi.StringPtrInput
}

func (ZPAPolicyAccessTimeoutRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*zpapolicyAccessTimeoutRuleState)(nil)).Elem()
}

type zpapolicyAccessTimeoutRuleArgs struct {
	// This is for providing the rule action.
	Action *string `pulumi:"action"`
	// This field defines the description of the server.
	ActionId          *string `pulumi:"actionId"`
	BypassDefaultRule *bool   `pulumi:"bypassDefaultRule"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []ZPAPolicyAccessTimeoutRuleCondition `pulumi:"conditions"`
	// This is for providing a customer message for the user.
	CustomMsg *string `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule *bool `pulumi:"defaultRule"`
	// This is the description of the access policy.
	Description    *string `pulumi:"description"`
	LssDefaultRule *bool   `pulumi:"lssDefaultRule"`
	// This is the name of the policy.
	Name              *string `pulumi:"name"`
	Operator          *string `pulumi:"operator"`
	PolicySetId       *string `pulumi:"policySetId"`
	PolicyType        *string `pulumi:"policyType"`
	Priority          *string `pulumi:"priority"`
	ReauthDefaultRule *bool   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout *string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     *string `pulumi:"reauthTimeout"`
	RuleOrder         *string `pulumi:"ruleOrder"`
}

// The set of arguments for constructing a ZPAPolicyAccessTimeoutRule resource.
type ZPAPolicyAccessTimeoutRuleArgs struct {
	// This is for providing the rule action.
	Action pulumi.StringPtrInput
	// This field defines the description of the server.
	ActionId          pulumi.StringPtrInput
	BypassDefaultRule pulumi.BoolPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions ZPAPolicyAccessTimeoutRuleConditionArrayInput
	// This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrInput
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrInput
	// This is the description of the access policy.
	Description    pulumi.StringPtrInput
	LssDefaultRule pulumi.BoolPtrInput
	// This is the name of the policy.
	Name              pulumi.StringPtrInput
	Operator          pulumi.StringPtrInput
	PolicySetId       pulumi.StringPtrInput
	PolicyType        pulumi.StringPtrInput
	Priority          pulumi.StringPtrInput
	ReauthDefaultRule pulumi.BoolPtrInput
	ReauthIdleTimeout pulumi.StringPtrInput
	ReauthTimeout     pulumi.StringPtrInput
	RuleOrder         pulumi.StringPtrInput
}

func (ZPAPolicyAccessTimeoutRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zpapolicyAccessTimeoutRuleArgs)(nil)).Elem()
}

type ZPAPolicyAccessTimeoutRuleInput interface {
	pulumi.Input

	ToZPAPolicyAccessTimeoutRuleOutput() ZPAPolicyAccessTimeoutRuleOutput
	ToZPAPolicyAccessTimeoutRuleOutputWithContext(ctx context.Context) ZPAPolicyAccessTimeoutRuleOutput
}

func (*ZPAPolicyAccessTimeoutRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAPolicyAccessTimeoutRule)(nil)).Elem()
}

func (i *ZPAPolicyAccessTimeoutRule) ToZPAPolicyAccessTimeoutRuleOutput() ZPAPolicyAccessTimeoutRuleOutput {
	return i.ToZPAPolicyAccessTimeoutRuleOutputWithContext(context.Background())
}

func (i *ZPAPolicyAccessTimeoutRule) ToZPAPolicyAccessTimeoutRuleOutputWithContext(ctx context.Context) ZPAPolicyAccessTimeoutRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessTimeoutRuleOutput)
}

// ZPAPolicyAccessTimeoutRuleArrayInput is an input type that accepts ZPAPolicyAccessTimeoutRuleArray and ZPAPolicyAccessTimeoutRuleArrayOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessTimeoutRuleArrayInput` via:
//
//          ZPAPolicyAccessTimeoutRuleArray{ ZPAPolicyAccessTimeoutRuleArgs{...} }
type ZPAPolicyAccessTimeoutRuleArrayInput interface {
	pulumi.Input

	ToZPAPolicyAccessTimeoutRuleArrayOutput() ZPAPolicyAccessTimeoutRuleArrayOutput
	ToZPAPolicyAccessTimeoutRuleArrayOutputWithContext(context.Context) ZPAPolicyAccessTimeoutRuleArrayOutput
}

type ZPAPolicyAccessTimeoutRuleArray []ZPAPolicyAccessTimeoutRuleInput

func (ZPAPolicyAccessTimeoutRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZPAPolicyAccessTimeoutRule)(nil)).Elem()
}

func (i ZPAPolicyAccessTimeoutRuleArray) ToZPAPolicyAccessTimeoutRuleArrayOutput() ZPAPolicyAccessTimeoutRuleArrayOutput {
	return i.ToZPAPolicyAccessTimeoutRuleArrayOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessTimeoutRuleArray) ToZPAPolicyAccessTimeoutRuleArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessTimeoutRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessTimeoutRuleArrayOutput)
}

// ZPAPolicyAccessTimeoutRuleMapInput is an input type that accepts ZPAPolicyAccessTimeoutRuleMap and ZPAPolicyAccessTimeoutRuleMapOutput values.
// You can construct a concrete instance of `ZPAPolicyAccessTimeoutRuleMapInput` via:
//
//          ZPAPolicyAccessTimeoutRuleMap{ "key": ZPAPolicyAccessTimeoutRuleArgs{...} }
type ZPAPolicyAccessTimeoutRuleMapInput interface {
	pulumi.Input

	ToZPAPolicyAccessTimeoutRuleMapOutput() ZPAPolicyAccessTimeoutRuleMapOutput
	ToZPAPolicyAccessTimeoutRuleMapOutputWithContext(context.Context) ZPAPolicyAccessTimeoutRuleMapOutput
}

type ZPAPolicyAccessTimeoutRuleMap map[string]ZPAPolicyAccessTimeoutRuleInput

func (ZPAPolicyAccessTimeoutRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZPAPolicyAccessTimeoutRule)(nil)).Elem()
}

func (i ZPAPolicyAccessTimeoutRuleMap) ToZPAPolicyAccessTimeoutRuleMapOutput() ZPAPolicyAccessTimeoutRuleMapOutput {
	return i.ToZPAPolicyAccessTimeoutRuleMapOutputWithContext(context.Background())
}

func (i ZPAPolicyAccessTimeoutRuleMap) ToZPAPolicyAccessTimeoutRuleMapOutputWithContext(ctx context.Context) ZPAPolicyAccessTimeoutRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAPolicyAccessTimeoutRuleMapOutput)
}

type ZPAPolicyAccessTimeoutRuleOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessTimeoutRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAPolicyAccessTimeoutRule)(nil)).Elem()
}

func (o ZPAPolicyAccessTimeoutRuleOutput) ToZPAPolicyAccessTimeoutRuleOutput() ZPAPolicyAccessTimeoutRuleOutput {
	return o
}

func (o ZPAPolicyAccessTimeoutRuleOutput) ToZPAPolicyAccessTimeoutRuleOutputWithContext(ctx context.Context) ZPAPolicyAccessTimeoutRuleOutput {
	return o
}

// This is for providing the rule action.
func (o ZPAPolicyAccessTimeoutRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessTimeoutRule) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// This field defines the description of the server.
func (o ZPAPolicyAccessTimeoutRuleOutput) ActionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessTimeoutRule) pulumi.StringPtrOutput { return v.ActionId }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessTimeoutRuleOutput) BypassDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessTimeoutRule) pulumi.BoolPtrOutput { return v.BypassDefaultRule }).(pulumi.BoolPtrOutput)
}

// This is for proviidng the set of conditions for the policy.
func (o ZPAPolicyAccessTimeoutRuleOutput) Conditions() ZPAPolicyAccessTimeoutRuleConditionArrayOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessTimeoutRule) ZPAPolicyAccessTimeoutRuleConditionArrayOutput {
		return v.Conditions
	}).(ZPAPolicyAccessTimeoutRuleConditionArrayOutput)
}

// This is for providing a customer message for the user.
func (o ZPAPolicyAccessTimeoutRuleOutput) CustomMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessTimeoutRule) pulumi.StringPtrOutput { return v.CustomMsg }).(pulumi.StringPtrOutput)
}

// This is for providing a customer message for the user.
func (o ZPAPolicyAccessTimeoutRuleOutput) DefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessTimeoutRule) pulumi.BoolPtrOutput { return v.DefaultRule }).(pulumi.BoolPtrOutput)
}

// This is the description of the access policy.
func (o ZPAPolicyAccessTimeoutRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessTimeoutRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessTimeoutRuleOutput) LssDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessTimeoutRule) pulumi.BoolPtrOutput { return v.LssDefaultRule }).(pulumi.BoolPtrOutput)
}

// This is the name of the policy.
func (o ZPAPolicyAccessTimeoutRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessTimeoutRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ZPAPolicyAccessTimeoutRuleOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessTimeoutRule) pulumi.StringOutput { return v.Operator }).(pulumi.StringOutput)
}

func (o ZPAPolicyAccessTimeoutRuleOutput) PolicySetId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessTimeoutRule) pulumi.StringOutput { return v.PolicySetId }).(pulumi.StringOutput)
}

func (o ZPAPolicyAccessTimeoutRuleOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessTimeoutRule) pulumi.StringOutput { return v.PolicyType }).(pulumi.StringOutput)
}

func (o ZPAPolicyAccessTimeoutRuleOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessTimeoutRule) pulumi.StringOutput { return v.Priority }).(pulumi.StringOutput)
}

func (o ZPAPolicyAccessTimeoutRuleOutput) ReauthDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessTimeoutRule) pulumi.BoolPtrOutput { return v.ReauthDefaultRule }).(pulumi.BoolPtrOutput)
}

func (o ZPAPolicyAccessTimeoutRuleOutput) ReauthIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessTimeoutRule) pulumi.StringPtrOutput { return v.ReauthIdleTimeout }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessTimeoutRuleOutput) ReauthTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessTimeoutRule) pulumi.StringPtrOutput { return v.ReauthTimeout }).(pulumi.StringPtrOutput)
}

func (o ZPAPolicyAccessTimeoutRuleOutput) RuleOrder() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAPolicyAccessTimeoutRule) pulumi.StringOutput { return v.RuleOrder }).(pulumi.StringOutput)
}

type ZPAPolicyAccessTimeoutRuleArrayOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessTimeoutRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZPAPolicyAccessTimeoutRule)(nil)).Elem()
}

func (o ZPAPolicyAccessTimeoutRuleArrayOutput) ToZPAPolicyAccessTimeoutRuleArrayOutput() ZPAPolicyAccessTimeoutRuleArrayOutput {
	return o
}

func (o ZPAPolicyAccessTimeoutRuleArrayOutput) ToZPAPolicyAccessTimeoutRuleArrayOutputWithContext(ctx context.Context) ZPAPolicyAccessTimeoutRuleArrayOutput {
	return o
}

func (o ZPAPolicyAccessTimeoutRuleArrayOutput) Index(i pulumi.IntInput) ZPAPolicyAccessTimeoutRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZPAPolicyAccessTimeoutRule {
		return vs[0].([]*ZPAPolicyAccessTimeoutRule)[vs[1].(int)]
	}).(ZPAPolicyAccessTimeoutRuleOutput)
}

type ZPAPolicyAccessTimeoutRuleMapOutput struct{ *pulumi.OutputState }

func (ZPAPolicyAccessTimeoutRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZPAPolicyAccessTimeoutRule)(nil)).Elem()
}

func (o ZPAPolicyAccessTimeoutRuleMapOutput) ToZPAPolicyAccessTimeoutRuleMapOutput() ZPAPolicyAccessTimeoutRuleMapOutput {
	return o
}

func (o ZPAPolicyAccessTimeoutRuleMapOutput) ToZPAPolicyAccessTimeoutRuleMapOutputWithContext(ctx context.Context) ZPAPolicyAccessTimeoutRuleMapOutput {
	return o
}

func (o ZPAPolicyAccessTimeoutRuleMapOutput) MapIndex(k pulumi.StringInput) ZPAPolicyAccessTimeoutRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZPAPolicyAccessTimeoutRule {
		return vs[0].(map[string]*ZPAPolicyAccessTimeoutRule)[vs[1].(string)]
	}).(ZPAPolicyAccessTimeoutRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessTimeoutRuleInput)(nil)).Elem(), &ZPAPolicyAccessTimeoutRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessTimeoutRuleArrayInput)(nil)).Elem(), ZPAPolicyAccessTimeoutRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAPolicyAccessTimeoutRuleMapInput)(nil)).Elem(), ZPAPolicyAccessTimeoutRuleMap{})
	pulumi.RegisterOutputType(ZPAPolicyAccessTimeoutRuleOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessTimeoutRuleArrayOutput{})
	pulumi.RegisterOutputType(ZPAPolicyAccessTimeoutRuleMapOutput{})
}
