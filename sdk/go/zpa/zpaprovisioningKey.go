// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ZPAProvisioningKey struct {
	pulumi.CustomResourceState

	AppConnectorGroupId pulumi.StringPtrOutput `pulumi:"appConnectorGroupId"`
	// Read only property. Applicable only for GET calls, ignored in PUT/POST calls.
	AppConnectorGroupName pulumi.StringOutput `pulumi:"appConnectorGroupName"`
	// Specifies the provisioning key type for App Connectors or ZPA Private Service Edges. The supported values are
	// CONNECTOR_GRP and SERVICE_EDGE_GRP.
	AssociationType pulumi.StringOutput `pulumi:"associationType"`
	// Whether the provisioning key is enabled or not. Supported values: true, false
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// ID of the enrollment certificate that can be used for this provisioning key.
	EnrollmentCertId pulumi.StringOutput `pulumi:"enrollmentCertId"`
	// Read only property. Applicable only for GET calls, ignored in PUT/POST calls.
	EnrollmentCertName pulumi.StringOutput      `pulumi:"enrollmentCertName"`
	IpAcls             pulumi.StringArrayOutput `pulumi:"ipAcls"`
	// The maximum number of instances where this provisioning key can be used for enrolling an App Connector or Service Edge.
	MaxUsage pulumi.StringOutput `pulumi:"maxUsage"`
	// Name of the provisioning key.
	Name pulumi.StringOutput `pulumi:"name"`
	// read only field. Ignored in PUT/POST calls.
	ProvisioningKey pulumi.StringOutput    `pulumi:"provisioningKey"`
	UiConfig        pulumi.StringPtrOutput `pulumi:"uiConfig"`
	// The provisioning key utilization count.
	UsageCount pulumi.StringOutput `pulumi:"usageCount"`
	// ID of the existing App Connector or Service Edge Group.
	ZcomponentId pulumi.StringOutput `pulumi:"zcomponentId"`
	// Read only property. Applicable only for GET calls, ignored in PUT/POST calls.
	ZcomponentName pulumi.StringOutput `pulumi:"zcomponentName"`
}

// NewZPAProvisioningKey registers a new resource with the given unique name, arguments, and options.
func NewZPAProvisioningKey(ctx *pulumi.Context,
	name string, args *ZPAProvisioningKeyArgs, opts ...pulumi.ResourceOption) (*ZPAProvisioningKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AssociationType == nil {
		return nil, errors.New("invalid value for required argument 'AssociationType'")
	}
	if args.EnrollmentCertId == nil {
		return nil, errors.New("invalid value for required argument 'EnrollmentCertId'")
	}
	if args.MaxUsage == nil {
		return nil, errors.New("invalid value for required argument 'MaxUsage'")
	}
	if args.ZcomponentId == nil {
		return nil, errors.New("invalid value for required argument 'ZcomponentId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ZPAProvisioningKey
	err := ctx.RegisterResource("zpa:index/zPAProvisioningKey:ZPAProvisioningKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZPAProvisioningKey gets an existing ZPAProvisioningKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZPAProvisioningKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZPAProvisioningKeyState, opts ...pulumi.ResourceOption) (*ZPAProvisioningKey, error) {
	var resource ZPAProvisioningKey
	err := ctx.ReadResource("zpa:index/zPAProvisioningKey:ZPAProvisioningKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZPAProvisioningKey resources.
type zpaprovisioningKeyState struct {
	AppConnectorGroupId *string `pulumi:"appConnectorGroupId"`
	// Read only property. Applicable only for GET calls, ignored in PUT/POST calls.
	AppConnectorGroupName *string `pulumi:"appConnectorGroupName"`
	// Specifies the provisioning key type for App Connectors or ZPA Private Service Edges. The supported values are
	// CONNECTOR_GRP and SERVICE_EDGE_GRP.
	AssociationType *string `pulumi:"associationType"`
	// Whether the provisioning key is enabled or not. Supported values: true, false
	Enabled *bool `pulumi:"enabled"`
	// ID of the enrollment certificate that can be used for this provisioning key.
	EnrollmentCertId *string `pulumi:"enrollmentCertId"`
	// Read only property. Applicable only for GET calls, ignored in PUT/POST calls.
	EnrollmentCertName *string  `pulumi:"enrollmentCertName"`
	IpAcls             []string `pulumi:"ipAcls"`
	// The maximum number of instances where this provisioning key can be used for enrolling an App Connector or Service Edge.
	MaxUsage *string `pulumi:"maxUsage"`
	// Name of the provisioning key.
	Name *string `pulumi:"name"`
	// read only field. Ignored in PUT/POST calls.
	ProvisioningKey *string `pulumi:"provisioningKey"`
	UiConfig        *string `pulumi:"uiConfig"`
	// The provisioning key utilization count.
	UsageCount *string `pulumi:"usageCount"`
	// ID of the existing App Connector or Service Edge Group.
	ZcomponentId *string `pulumi:"zcomponentId"`
	// Read only property. Applicable only for GET calls, ignored in PUT/POST calls.
	ZcomponentName *string `pulumi:"zcomponentName"`
}

type ZPAProvisioningKeyState struct {
	AppConnectorGroupId pulumi.StringPtrInput
	// Read only property. Applicable only for GET calls, ignored in PUT/POST calls.
	AppConnectorGroupName pulumi.StringPtrInput
	// Specifies the provisioning key type for App Connectors or ZPA Private Service Edges. The supported values are
	// CONNECTOR_GRP and SERVICE_EDGE_GRP.
	AssociationType pulumi.StringPtrInput
	// Whether the provisioning key is enabled or not. Supported values: true, false
	Enabled pulumi.BoolPtrInput
	// ID of the enrollment certificate that can be used for this provisioning key.
	EnrollmentCertId pulumi.StringPtrInput
	// Read only property. Applicable only for GET calls, ignored in PUT/POST calls.
	EnrollmentCertName pulumi.StringPtrInput
	IpAcls             pulumi.StringArrayInput
	// The maximum number of instances where this provisioning key can be used for enrolling an App Connector or Service Edge.
	MaxUsage pulumi.StringPtrInput
	// Name of the provisioning key.
	Name pulumi.StringPtrInput
	// read only field. Ignored in PUT/POST calls.
	ProvisioningKey pulumi.StringPtrInput
	UiConfig        pulumi.StringPtrInput
	// The provisioning key utilization count.
	UsageCount pulumi.StringPtrInput
	// ID of the existing App Connector or Service Edge Group.
	ZcomponentId pulumi.StringPtrInput
	// Read only property. Applicable only for GET calls, ignored in PUT/POST calls.
	ZcomponentName pulumi.StringPtrInput
}

func (ZPAProvisioningKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*zpaprovisioningKeyState)(nil)).Elem()
}

type zpaprovisioningKeyArgs struct {
	AppConnectorGroupId *string `pulumi:"appConnectorGroupId"`
	// Specifies the provisioning key type for App Connectors or ZPA Private Service Edges. The supported values are
	// CONNECTOR_GRP and SERVICE_EDGE_GRP.
	AssociationType string `pulumi:"associationType"`
	// Whether the provisioning key is enabled or not. Supported values: true, false
	Enabled *bool `pulumi:"enabled"`
	// ID of the enrollment certificate that can be used for this provisioning key.
	EnrollmentCertId string   `pulumi:"enrollmentCertId"`
	IpAcls           []string `pulumi:"ipAcls"`
	// The maximum number of instances where this provisioning key can be used for enrolling an App Connector or Service Edge.
	MaxUsage string `pulumi:"maxUsage"`
	// Name of the provisioning key.
	Name     *string `pulumi:"name"`
	UiConfig *string `pulumi:"uiConfig"`
	// The provisioning key utilization count.
	UsageCount *string `pulumi:"usageCount"`
	// ID of the existing App Connector or Service Edge Group.
	ZcomponentId string `pulumi:"zcomponentId"`
	// Read only property. Applicable only for GET calls, ignored in PUT/POST calls.
	ZcomponentName *string `pulumi:"zcomponentName"`
}

// The set of arguments for constructing a ZPAProvisioningKey resource.
type ZPAProvisioningKeyArgs struct {
	AppConnectorGroupId pulumi.StringPtrInput
	// Specifies the provisioning key type for App Connectors or ZPA Private Service Edges. The supported values are
	// CONNECTOR_GRP and SERVICE_EDGE_GRP.
	AssociationType pulumi.StringInput
	// Whether the provisioning key is enabled or not. Supported values: true, false
	Enabled pulumi.BoolPtrInput
	// ID of the enrollment certificate that can be used for this provisioning key.
	EnrollmentCertId pulumi.StringInput
	IpAcls           pulumi.StringArrayInput
	// The maximum number of instances where this provisioning key can be used for enrolling an App Connector or Service Edge.
	MaxUsage pulumi.StringInput
	// Name of the provisioning key.
	Name     pulumi.StringPtrInput
	UiConfig pulumi.StringPtrInput
	// The provisioning key utilization count.
	UsageCount pulumi.StringPtrInput
	// ID of the existing App Connector or Service Edge Group.
	ZcomponentId pulumi.StringInput
	// Read only property. Applicable only for GET calls, ignored in PUT/POST calls.
	ZcomponentName pulumi.StringPtrInput
}

func (ZPAProvisioningKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zpaprovisioningKeyArgs)(nil)).Elem()
}

type ZPAProvisioningKeyInput interface {
	pulumi.Input

	ToZPAProvisioningKeyOutput() ZPAProvisioningKeyOutput
	ToZPAProvisioningKeyOutputWithContext(ctx context.Context) ZPAProvisioningKeyOutput
}

func (*ZPAProvisioningKey) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAProvisioningKey)(nil)).Elem()
}

func (i *ZPAProvisioningKey) ToZPAProvisioningKeyOutput() ZPAProvisioningKeyOutput {
	return i.ToZPAProvisioningKeyOutputWithContext(context.Background())
}

func (i *ZPAProvisioningKey) ToZPAProvisioningKeyOutputWithContext(ctx context.Context) ZPAProvisioningKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAProvisioningKeyOutput)
}

// ZPAProvisioningKeyArrayInput is an input type that accepts ZPAProvisioningKeyArray and ZPAProvisioningKeyArrayOutput values.
// You can construct a concrete instance of `ZPAProvisioningKeyArrayInput` via:
//
//          ZPAProvisioningKeyArray{ ZPAProvisioningKeyArgs{...} }
type ZPAProvisioningKeyArrayInput interface {
	pulumi.Input

	ToZPAProvisioningKeyArrayOutput() ZPAProvisioningKeyArrayOutput
	ToZPAProvisioningKeyArrayOutputWithContext(context.Context) ZPAProvisioningKeyArrayOutput
}

type ZPAProvisioningKeyArray []ZPAProvisioningKeyInput

func (ZPAProvisioningKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZPAProvisioningKey)(nil)).Elem()
}

func (i ZPAProvisioningKeyArray) ToZPAProvisioningKeyArrayOutput() ZPAProvisioningKeyArrayOutput {
	return i.ToZPAProvisioningKeyArrayOutputWithContext(context.Background())
}

func (i ZPAProvisioningKeyArray) ToZPAProvisioningKeyArrayOutputWithContext(ctx context.Context) ZPAProvisioningKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAProvisioningKeyArrayOutput)
}

// ZPAProvisioningKeyMapInput is an input type that accepts ZPAProvisioningKeyMap and ZPAProvisioningKeyMapOutput values.
// You can construct a concrete instance of `ZPAProvisioningKeyMapInput` via:
//
//          ZPAProvisioningKeyMap{ "key": ZPAProvisioningKeyArgs{...} }
type ZPAProvisioningKeyMapInput interface {
	pulumi.Input

	ToZPAProvisioningKeyMapOutput() ZPAProvisioningKeyMapOutput
	ToZPAProvisioningKeyMapOutputWithContext(context.Context) ZPAProvisioningKeyMapOutput
}

type ZPAProvisioningKeyMap map[string]ZPAProvisioningKeyInput

func (ZPAProvisioningKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZPAProvisioningKey)(nil)).Elem()
}

func (i ZPAProvisioningKeyMap) ToZPAProvisioningKeyMapOutput() ZPAProvisioningKeyMapOutput {
	return i.ToZPAProvisioningKeyMapOutputWithContext(context.Background())
}

func (i ZPAProvisioningKeyMap) ToZPAProvisioningKeyMapOutputWithContext(ctx context.Context) ZPAProvisioningKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAProvisioningKeyMapOutput)
}

type ZPAProvisioningKeyOutput struct{ *pulumi.OutputState }

func (ZPAProvisioningKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAProvisioningKey)(nil)).Elem()
}

func (o ZPAProvisioningKeyOutput) ToZPAProvisioningKeyOutput() ZPAProvisioningKeyOutput {
	return o
}

func (o ZPAProvisioningKeyOutput) ToZPAProvisioningKeyOutputWithContext(ctx context.Context) ZPAProvisioningKeyOutput {
	return o
}

func (o ZPAProvisioningKeyOutput) AppConnectorGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAProvisioningKey) pulumi.StringPtrOutput { return v.AppConnectorGroupId }).(pulumi.StringPtrOutput)
}

// Read only property. Applicable only for GET calls, ignored in PUT/POST calls.
func (o ZPAProvisioningKeyOutput) AppConnectorGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAProvisioningKey) pulumi.StringOutput { return v.AppConnectorGroupName }).(pulumi.StringOutput)
}

// Specifies the provisioning key type for App Connectors or ZPA Private Service Edges. The supported values are
// CONNECTOR_GRP and SERVICE_EDGE_GRP.
func (o ZPAProvisioningKeyOutput) AssociationType() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAProvisioningKey) pulumi.StringOutput { return v.AssociationType }).(pulumi.StringOutput)
}

// Whether the provisioning key is enabled or not. Supported values: true, false
func (o ZPAProvisioningKeyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPAProvisioningKey) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// ID of the enrollment certificate that can be used for this provisioning key.
func (o ZPAProvisioningKeyOutput) EnrollmentCertId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAProvisioningKey) pulumi.StringOutput { return v.EnrollmentCertId }).(pulumi.StringOutput)
}

// Read only property. Applicable only for GET calls, ignored in PUT/POST calls.
func (o ZPAProvisioningKeyOutput) EnrollmentCertName() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAProvisioningKey) pulumi.StringOutput { return v.EnrollmentCertName }).(pulumi.StringOutput)
}

func (o ZPAProvisioningKeyOutput) IpAcls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZPAProvisioningKey) pulumi.StringArrayOutput { return v.IpAcls }).(pulumi.StringArrayOutput)
}

// The maximum number of instances where this provisioning key can be used for enrolling an App Connector or Service Edge.
func (o ZPAProvisioningKeyOutput) MaxUsage() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAProvisioningKey) pulumi.StringOutput { return v.MaxUsage }).(pulumi.StringOutput)
}

// Name of the provisioning key.
func (o ZPAProvisioningKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAProvisioningKey) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// read only field. Ignored in PUT/POST calls.
func (o ZPAProvisioningKeyOutput) ProvisioningKey() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAProvisioningKey) pulumi.StringOutput { return v.ProvisioningKey }).(pulumi.StringOutput)
}

func (o ZPAProvisioningKeyOutput) UiConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAProvisioningKey) pulumi.StringPtrOutput { return v.UiConfig }).(pulumi.StringPtrOutput)
}

// The provisioning key utilization count.
func (o ZPAProvisioningKeyOutput) UsageCount() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAProvisioningKey) pulumi.StringOutput { return v.UsageCount }).(pulumi.StringOutput)
}

// ID of the existing App Connector or Service Edge Group.
func (o ZPAProvisioningKeyOutput) ZcomponentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAProvisioningKey) pulumi.StringOutput { return v.ZcomponentId }).(pulumi.StringOutput)
}

// Read only property. Applicable only for GET calls, ignored in PUT/POST calls.
func (o ZPAProvisioningKeyOutput) ZcomponentName() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAProvisioningKey) pulumi.StringOutput { return v.ZcomponentName }).(pulumi.StringOutput)
}

type ZPAProvisioningKeyArrayOutput struct{ *pulumi.OutputState }

func (ZPAProvisioningKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZPAProvisioningKey)(nil)).Elem()
}

func (o ZPAProvisioningKeyArrayOutput) ToZPAProvisioningKeyArrayOutput() ZPAProvisioningKeyArrayOutput {
	return o
}

func (o ZPAProvisioningKeyArrayOutput) ToZPAProvisioningKeyArrayOutputWithContext(ctx context.Context) ZPAProvisioningKeyArrayOutput {
	return o
}

func (o ZPAProvisioningKeyArrayOutput) Index(i pulumi.IntInput) ZPAProvisioningKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZPAProvisioningKey {
		return vs[0].([]*ZPAProvisioningKey)[vs[1].(int)]
	}).(ZPAProvisioningKeyOutput)
}

type ZPAProvisioningKeyMapOutput struct{ *pulumi.OutputState }

func (ZPAProvisioningKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZPAProvisioningKey)(nil)).Elem()
}

func (o ZPAProvisioningKeyMapOutput) ToZPAProvisioningKeyMapOutput() ZPAProvisioningKeyMapOutput {
	return o
}

func (o ZPAProvisioningKeyMapOutput) ToZPAProvisioningKeyMapOutputWithContext(ctx context.Context) ZPAProvisioningKeyMapOutput {
	return o
}

func (o ZPAProvisioningKeyMapOutput) MapIndex(k pulumi.StringInput) ZPAProvisioningKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZPAProvisioningKey {
		return vs[0].(map[string]*ZPAProvisioningKey)[vs[1].(string)]
	}).(ZPAProvisioningKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAProvisioningKeyInput)(nil)).Elem(), &ZPAProvisioningKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAProvisioningKeyArrayInput)(nil)).Elem(), ZPAProvisioningKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAProvisioningKeyMapInput)(nil)).Elem(), ZPAProvisioningKeyMap{})
	pulumi.RegisterOutputType(ZPAProvisioningKeyOutput{})
	pulumi.RegisterOutputType(ZPAProvisioningKeyArrayOutput{})
	pulumi.RegisterOutputType(ZPAProvisioningKeyMapOutput{})
}
