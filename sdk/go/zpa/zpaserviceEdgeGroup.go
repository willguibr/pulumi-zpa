// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ZPAServiceEdgeGroup struct {
	pulumi.CustomResourceState

	CityCountry pulumi.StringOutput `pulumi:"cityCountry"`
	CountryCode pulumi.StringOutput `pulumi:"countryCode"`
	// Description of the Service Edge Group.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Whether this Service Edge Group is enabled or not.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Enable or disable public access for the Service Edge Group.
	IsPublic pulumi.StringPtrOutput `pulumi:"isPublic"`
	// Latitude for the Service Edge Group.
	Latitude pulumi.StringOutput `pulumi:"latitude"`
	// Location for the Service Edge Group.
	Location pulumi.StringOutput `pulumi:"location"`
	// Longitude for the Service Edge Group.
	Longitude pulumi.StringOutput `pulumi:"longitude"`
	// Name of the Service Edge Group.
	Name pulumi.StringOutput `pulumi:"name"`
	// Whether the default version profile of the App Connector Group is applied or overridden.
	OverrideVersionProfile pulumi.BoolPtrOutput                         `pulumi:"overrideVersionProfile"`
	ServiceEdges           ZPAServiceEdgeGroupServiceEdgeArrayOutput    `pulumi:"serviceEdges"`
	TrustedNetworks        ZPAServiceEdgeGroupTrustedNetworkArrayOutput `pulumi:"trustedNetworks"`
	// Service Edges in this group will attempt to update to a newer version of the software during this specified day.
	UpgradeDay pulumi.StringPtrOutput `pulumi:"upgradeDay"`
	// Service Edges in this group will attempt to update to a newer version of the software during this specified time.
	UpgradeTimeInSecs pulumi.StringPtrOutput `pulumi:"upgradeTimeInSecs"`
	// ID of the version profile. To learn more
	VersionProfileId pulumi.StringOutput `pulumi:"versionProfileId"`
	// ID of the version profile. To learn more
	VersionProfileName pulumi.StringOutput `pulumi:"versionProfileName"`
	// ID of the version profile. To learn more
	VersionProfileVisibilityScope pulumi.StringOutput `pulumi:"versionProfileVisibilityScope"`
}

// NewZPAServiceEdgeGroup registers a new resource with the given unique name, arguments, and options.
func NewZPAServiceEdgeGroup(ctx *pulumi.Context,
	name string, args *ZPAServiceEdgeGroupArgs, opts ...pulumi.ResourceOption) (*ZPAServiceEdgeGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Latitude == nil {
		return nil, errors.New("invalid value for required argument 'Latitude'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Longitude == nil {
		return nil, errors.New("invalid value for required argument 'Longitude'")
	}
	if args.VersionProfileId == nil {
		return nil, errors.New("invalid value for required argument 'VersionProfileId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ZPAServiceEdgeGroup
	err := ctx.RegisterResource("zpa:index/zPAServiceEdgeGroup:ZPAServiceEdgeGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZPAServiceEdgeGroup gets an existing ZPAServiceEdgeGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZPAServiceEdgeGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZPAServiceEdgeGroupState, opts ...pulumi.ResourceOption) (*ZPAServiceEdgeGroup, error) {
	var resource ZPAServiceEdgeGroup
	err := ctx.ReadResource("zpa:index/zPAServiceEdgeGroup:ZPAServiceEdgeGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZPAServiceEdgeGroup resources.
type zpaserviceEdgeGroupState struct {
	CityCountry *string `pulumi:"cityCountry"`
	CountryCode *string `pulumi:"countryCode"`
	// Description of the Service Edge Group.
	Description *string `pulumi:"description"`
	// Whether this Service Edge Group is enabled or not.
	Enabled *bool `pulumi:"enabled"`
	// Enable or disable public access for the Service Edge Group.
	IsPublic *string `pulumi:"isPublic"`
	// Latitude for the Service Edge Group.
	Latitude *string `pulumi:"latitude"`
	// Location for the Service Edge Group.
	Location *string `pulumi:"location"`
	// Longitude for the Service Edge Group.
	Longitude *string `pulumi:"longitude"`
	// Name of the Service Edge Group.
	Name *string `pulumi:"name"`
	// Whether the default version profile of the App Connector Group is applied or overridden.
	OverrideVersionProfile *bool                               `pulumi:"overrideVersionProfile"`
	ServiceEdges           []ZPAServiceEdgeGroupServiceEdge    `pulumi:"serviceEdges"`
	TrustedNetworks        []ZPAServiceEdgeGroupTrustedNetwork `pulumi:"trustedNetworks"`
	// Service Edges in this group will attempt to update to a newer version of the software during this specified day.
	UpgradeDay *string `pulumi:"upgradeDay"`
	// Service Edges in this group will attempt to update to a newer version of the software during this specified time.
	UpgradeTimeInSecs *string `pulumi:"upgradeTimeInSecs"`
	// ID of the version profile. To learn more
	VersionProfileId *string `pulumi:"versionProfileId"`
	// ID of the version profile. To learn more
	VersionProfileName *string `pulumi:"versionProfileName"`
	// ID of the version profile. To learn more
	VersionProfileVisibilityScope *string `pulumi:"versionProfileVisibilityScope"`
}

type ZPAServiceEdgeGroupState struct {
	CityCountry pulumi.StringPtrInput
	CountryCode pulumi.StringPtrInput
	// Description of the Service Edge Group.
	Description pulumi.StringPtrInput
	// Whether this Service Edge Group is enabled or not.
	Enabled pulumi.BoolPtrInput
	// Enable or disable public access for the Service Edge Group.
	IsPublic pulumi.StringPtrInput
	// Latitude for the Service Edge Group.
	Latitude pulumi.StringPtrInput
	// Location for the Service Edge Group.
	Location pulumi.StringPtrInput
	// Longitude for the Service Edge Group.
	Longitude pulumi.StringPtrInput
	// Name of the Service Edge Group.
	Name pulumi.StringPtrInput
	// Whether the default version profile of the App Connector Group is applied or overridden.
	OverrideVersionProfile pulumi.BoolPtrInput
	ServiceEdges           ZPAServiceEdgeGroupServiceEdgeArrayInput
	TrustedNetworks        ZPAServiceEdgeGroupTrustedNetworkArrayInput
	// Service Edges in this group will attempt to update to a newer version of the software during this specified day.
	UpgradeDay pulumi.StringPtrInput
	// Service Edges in this group will attempt to update to a newer version of the software during this specified time.
	UpgradeTimeInSecs pulumi.StringPtrInput
	// ID of the version profile. To learn more
	VersionProfileId pulumi.StringPtrInput
	// ID of the version profile. To learn more
	VersionProfileName pulumi.StringPtrInput
	// ID of the version profile. To learn more
	VersionProfileVisibilityScope pulumi.StringPtrInput
}

func (ZPAServiceEdgeGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*zpaserviceEdgeGroupState)(nil)).Elem()
}

type zpaserviceEdgeGroupArgs struct {
	CityCountry *string `pulumi:"cityCountry"`
	CountryCode *string `pulumi:"countryCode"`
	// Description of the Service Edge Group.
	Description *string `pulumi:"description"`
	// Whether this Service Edge Group is enabled or not.
	Enabled *bool `pulumi:"enabled"`
	// Enable or disable public access for the Service Edge Group.
	IsPublic *string `pulumi:"isPublic"`
	// Latitude for the Service Edge Group.
	Latitude string `pulumi:"latitude"`
	// Location for the Service Edge Group.
	Location string `pulumi:"location"`
	// Longitude for the Service Edge Group.
	Longitude string `pulumi:"longitude"`
	// Name of the Service Edge Group.
	Name *string `pulumi:"name"`
	// Whether the default version profile of the App Connector Group is applied or overridden.
	OverrideVersionProfile *bool                               `pulumi:"overrideVersionProfile"`
	ServiceEdges           []ZPAServiceEdgeGroupServiceEdge    `pulumi:"serviceEdges"`
	TrustedNetworks        []ZPAServiceEdgeGroupTrustedNetwork `pulumi:"trustedNetworks"`
	// Service Edges in this group will attempt to update to a newer version of the software during this specified day.
	UpgradeDay *string `pulumi:"upgradeDay"`
	// Service Edges in this group will attempt to update to a newer version of the software during this specified time.
	UpgradeTimeInSecs *string `pulumi:"upgradeTimeInSecs"`
	// ID of the version profile. To learn more
	VersionProfileId string `pulumi:"versionProfileId"`
}

// The set of arguments for constructing a ZPAServiceEdgeGroup resource.
type ZPAServiceEdgeGroupArgs struct {
	CityCountry pulumi.StringPtrInput
	CountryCode pulumi.StringPtrInput
	// Description of the Service Edge Group.
	Description pulumi.StringPtrInput
	// Whether this Service Edge Group is enabled or not.
	Enabled pulumi.BoolPtrInput
	// Enable or disable public access for the Service Edge Group.
	IsPublic pulumi.StringPtrInput
	// Latitude for the Service Edge Group.
	Latitude pulumi.StringInput
	// Location for the Service Edge Group.
	Location pulumi.StringInput
	// Longitude for the Service Edge Group.
	Longitude pulumi.StringInput
	// Name of the Service Edge Group.
	Name pulumi.StringPtrInput
	// Whether the default version profile of the App Connector Group is applied or overridden.
	OverrideVersionProfile pulumi.BoolPtrInput
	ServiceEdges           ZPAServiceEdgeGroupServiceEdgeArrayInput
	TrustedNetworks        ZPAServiceEdgeGroupTrustedNetworkArrayInput
	// Service Edges in this group will attempt to update to a newer version of the software during this specified day.
	UpgradeDay pulumi.StringPtrInput
	// Service Edges in this group will attempt to update to a newer version of the software during this specified time.
	UpgradeTimeInSecs pulumi.StringPtrInput
	// ID of the version profile. To learn more
	VersionProfileId pulumi.StringInput
}

func (ZPAServiceEdgeGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zpaserviceEdgeGroupArgs)(nil)).Elem()
}

type ZPAServiceEdgeGroupInput interface {
	pulumi.Input

	ToZPAServiceEdgeGroupOutput() ZPAServiceEdgeGroupOutput
	ToZPAServiceEdgeGroupOutputWithContext(ctx context.Context) ZPAServiceEdgeGroupOutput
}

func (*ZPAServiceEdgeGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAServiceEdgeGroup)(nil)).Elem()
}

func (i *ZPAServiceEdgeGroup) ToZPAServiceEdgeGroupOutput() ZPAServiceEdgeGroupOutput {
	return i.ToZPAServiceEdgeGroupOutputWithContext(context.Background())
}

func (i *ZPAServiceEdgeGroup) ToZPAServiceEdgeGroupOutputWithContext(ctx context.Context) ZPAServiceEdgeGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAServiceEdgeGroupOutput)
}

// ZPAServiceEdgeGroupArrayInput is an input type that accepts ZPAServiceEdgeGroupArray and ZPAServiceEdgeGroupArrayOutput values.
// You can construct a concrete instance of `ZPAServiceEdgeGroupArrayInput` via:
//
//          ZPAServiceEdgeGroupArray{ ZPAServiceEdgeGroupArgs{...} }
type ZPAServiceEdgeGroupArrayInput interface {
	pulumi.Input

	ToZPAServiceEdgeGroupArrayOutput() ZPAServiceEdgeGroupArrayOutput
	ToZPAServiceEdgeGroupArrayOutputWithContext(context.Context) ZPAServiceEdgeGroupArrayOutput
}

type ZPAServiceEdgeGroupArray []ZPAServiceEdgeGroupInput

func (ZPAServiceEdgeGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZPAServiceEdgeGroup)(nil)).Elem()
}

func (i ZPAServiceEdgeGroupArray) ToZPAServiceEdgeGroupArrayOutput() ZPAServiceEdgeGroupArrayOutput {
	return i.ToZPAServiceEdgeGroupArrayOutputWithContext(context.Background())
}

func (i ZPAServiceEdgeGroupArray) ToZPAServiceEdgeGroupArrayOutputWithContext(ctx context.Context) ZPAServiceEdgeGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAServiceEdgeGroupArrayOutput)
}

// ZPAServiceEdgeGroupMapInput is an input type that accepts ZPAServiceEdgeGroupMap and ZPAServiceEdgeGroupMapOutput values.
// You can construct a concrete instance of `ZPAServiceEdgeGroupMapInput` via:
//
//          ZPAServiceEdgeGroupMap{ "key": ZPAServiceEdgeGroupArgs{...} }
type ZPAServiceEdgeGroupMapInput interface {
	pulumi.Input

	ToZPAServiceEdgeGroupMapOutput() ZPAServiceEdgeGroupMapOutput
	ToZPAServiceEdgeGroupMapOutputWithContext(context.Context) ZPAServiceEdgeGroupMapOutput
}

type ZPAServiceEdgeGroupMap map[string]ZPAServiceEdgeGroupInput

func (ZPAServiceEdgeGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZPAServiceEdgeGroup)(nil)).Elem()
}

func (i ZPAServiceEdgeGroupMap) ToZPAServiceEdgeGroupMapOutput() ZPAServiceEdgeGroupMapOutput {
	return i.ToZPAServiceEdgeGroupMapOutputWithContext(context.Background())
}

func (i ZPAServiceEdgeGroupMap) ToZPAServiceEdgeGroupMapOutputWithContext(ctx context.Context) ZPAServiceEdgeGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZPAServiceEdgeGroupMapOutput)
}

type ZPAServiceEdgeGroupOutput struct{ *pulumi.OutputState }

func (ZPAServiceEdgeGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZPAServiceEdgeGroup)(nil)).Elem()
}

func (o ZPAServiceEdgeGroupOutput) ToZPAServiceEdgeGroupOutput() ZPAServiceEdgeGroupOutput {
	return o
}

func (o ZPAServiceEdgeGroupOutput) ToZPAServiceEdgeGroupOutputWithContext(ctx context.Context) ZPAServiceEdgeGroupOutput {
	return o
}

func (o ZPAServiceEdgeGroupOutput) CityCountry() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAServiceEdgeGroup) pulumi.StringOutput { return v.CityCountry }).(pulumi.StringOutput)
}

func (o ZPAServiceEdgeGroupOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAServiceEdgeGroup) pulumi.StringOutput { return v.CountryCode }).(pulumi.StringOutput)
}

// Description of the Service Edge Group.
func (o ZPAServiceEdgeGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAServiceEdgeGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether this Service Edge Group is enabled or not.
func (o ZPAServiceEdgeGroupOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPAServiceEdgeGroup) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Enable or disable public access for the Service Edge Group.
func (o ZPAServiceEdgeGroupOutput) IsPublic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAServiceEdgeGroup) pulumi.StringPtrOutput { return v.IsPublic }).(pulumi.StringPtrOutput)
}

// Latitude for the Service Edge Group.
func (o ZPAServiceEdgeGroupOutput) Latitude() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAServiceEdgeGroup) pulumi.StringOutput { return v.Latitude }).(pulumi.StringOutput)
}

// Location for the Service Edge Group.
func (o ZPAServiceEdgeGroupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAServiceEdgeGroup) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Longitude for the Service Edge Group.
func (o ZPAServiceEdgeGroupOutput) Longitude() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAServiceEdgeGroup) pulumi.StringOutput { return v.Longitude }).(pulumi.StringOutput)
}

// Name of the Service Edge Group.
func (o ZPAServiceEdgeGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAServiceEdgeGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Whether the default version profile of the App Connector Group is applied or overridden.
func (o ZPAServiceEdgeGroupOutput) OverrideVersionProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZPAServiceEdgeGroup) pulumi.BoolPtrOutput { return v.OverrideVersionProfile }).(pulumi.BoolPtrOutput)
}

func (o ZPAServiceEdgeGroupOutput) ServiceEdges() ZPAServiceEdgeGroupServiceEdgeArrayOutput {
	return o.ApplyT(func(v *ZPAServiceEdgeGroup) ZPAServiceEdgeGroupServiceEdgeArrayOutput { return v.ServiceEdges }).(ZPAServiceEdgeGroupServiceEdgeArrayOutput)
}

func (o ZPAServiceEdgeGroupOutput) TrustedNetworks() ZPAServiceEdgeGroupTrustedNetworkArrayOutput {
	return o.ApplyT(func(v *ZPAServiceEdgeGroup) ZPAServiceEdgeGroupTrustedNetworkArrayOutput { return v.TrustedNetworks }).(ZPAServiceEdgeGroupTrustedNetworkArrayOutput)
}

// Service Edges in this group will attempt to update to a newer version of the software during this specified day.
func (o ZPAServiceEdgeGroupOutput) UpgradeDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAServiceEdgeGroup) pulumi.StringPtrOutput { return v.UpgradeDay }).(pulumi.StringPtrOutput)
}

// Service Edges in this group will attempt to update to a newer version of the software during this specified time.
func (o ZPAServiceEdgeGroupOutput) UpgradeTimeInSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZPAServiceEdgeGroup) pulumi.StringPtrOutput { return v.UpgradeTimeInSecs }).(pulumi.StringPtrOutput)
}

// ID of the version profile. To learn more
func (o ZPAServiceEdgeGroupOutput) VersionProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAServiceEdgeGroup) pulumi.StringOutput { return v.VersionProfileId }).(pulumi.StringOutput)
}

// ID of the version profile. To learn more
func (o ZPAServiceEdgeGroupOutput) VersionProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAServiceEdgeGroup) pulumi.StringOutput { return v.VersionProfileName }).(pulumi.StringOutput)
}

// ID of the version profile. To learn more
func (o ZPAServiceEdgeGroupOutput) VersionProfileVisibilityScope() pulumi.StringOutput {
	return o.ApplyT(func(v *ZPAServiceEdgeGroup) pulumi.StringOutput { return v.VersionProfileVisibilityScope }).(pulumi.StringOutput)
}

type ZPAServiceEdgeGroupArrayOutput struct{ *pulumi.OutputState }

func (ZPAServiceEdgeGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZPAServiceEdgeGroup)(nil)).Elem()
}

func (o ZPAServiceEdgeGroupArrayOutput) ToZPAServiceEdgeGroupArrayOutput() ZPAServiceEdgeGroupArrayOutput {
	return o
}

func (o ZPAServiceEdgeGroupArrayOutput) ToZPAServiceEdgeGroupArrayOutputWithContext(ctx context.Context) ZPAServiceEdgeGroupArrayOutput {
	return o
}

func (o ZPAServiceEdgeGroupArrayOutput) Index(i pulumi.IntInput) ZPAServiceEdgeGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZPAServiceEdgeGroup {
		return vs[0].([]*ZPAServiceEdgeGroup)[vs[1].(int)]
	}).(ZPAServiceEdgeGroupOutput)
}

type ZPAServiceEdgeGroupMapOutput struct{ *pulumi.OutputState }

func (ZPAServiceEdgeGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZPAServiceEdgeGroup)(nil)).Elem()
}

func (o ZPAServiceEdgeGroupMapOutput) ToZPAServiceEdgeGroupMapOutput() ZPAServiceEdgeGroupMapOutput {
	return o
}

func (o ZPAServiceEdgeGroupMapOutput) ToZPAServiceEdgeGroupMapOutputWithContext(ctx context.Context) ZPAServiceEdgeGroupMapOutput {
	return o
}

func (o ZPAServiceEdgeGroupMapOutput) MapIndex(k pulumi.StringInput) ZPAServiceEdgeGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZPAServiceEdgeGroup {
		return vs[0].(map[string]*ZPAServiceEdgeGroup)[vs[1].(string)]
	}).(ZPAServiceEdgeGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAServiceEdgeGroupInput)(nil)).Elem(), &ZPAServiceEdgeGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAServiceEdgeGroupArrayInput)(nil)).Elem(), ZPAServiceEdgeGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZPAServiceEdgeGroupMapInput)(nil)).Elem(), ZPAServiceEdgeGroupMap{})
	pulumi.RegisterOutputType(ZPAServiceEdgeGroupOutput{})
	pulumi.RegisterOutputType(ZPAServiceEdgeGroupArrayOutput{})
	pulumi.RegisterOutputType(ZPAServiceEdgeGroupMapOutput{})
}
