// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getZPAAppConnectorController(args?: GetZPAAppConnectorControllerArgs, opts?: pulumi.InvokeOptions): Promise<GetZPAAppConnectorControllerResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("zpa:index/getZPAAppConnectorController:getZPAAppConnectorController", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getZPAAppConnectorController.
 */
export interface GetZPAAppConnectorControllerArgs {
    name?: string;
}

/**
 * A collection of values returned by getZPAAppConnectorController.
 */
export interface GetZPAAppConnectorControllerResult {
    readonly appConnectorGroupId: string;
    readonly appConnectorGroupName: string;
    readonly applicationStartTime: string;
    readonly controlChannelStatus: string;
    readonly creationTime: string;
    readonly ctrlBrokerName: string;
    readonly currentVersion: string;
    readonly description: string;
    readonly enabled: boolean;
    readonly enrollmentCert: {[key: string]: any};
    readonly expectedUpgradeTime: string;
    readonly expectedVersion: string;
    readonly fingerprint: string;
    readonly id: string;
    readonly ipAcl: string;
    readonly issuedCertId: string;
    readonly lastBrokerConnectTime: string;
    readonly lastBrokerConnectTimeDuration: string;
    readonly lastBrokerDisconnectTime: string;
    readonly lastBrokerDisconnectTimeDuration: string;
    readonly lastUpgradeTime: string;
    readonly latitude: string;
    readonly location: string;
    readonly longitude: string;
    readonly modifiedTime: string;
    readonly modifiedby: string;
    readonly name?: string;
    readonly platform: string;
    readonly previousVersion: string;
    readonly privateIp: string;
    readonly provisioningKeyId: string;
    readonly provisioningKeyName: string;
    readonly publicIp: string;
    readonly sargeVersion: string;
    readonly upgradeAttempt: string;
    readonly upgradeStatus: string;
}

export function getZPAAppConnectorControllerOutput(args?: GetZPAAppConnectorControllerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZPAAppConnectorControllerResult> {
    return pulumi.output(args).apply(a => getZPAAppConnectorController(a, opts))
}

/**
 * A collection of arguments for invoking getZPAAppConnectorController.
 */
export interface GetZPAAppConnectorControllerOutputArgs {
    name?: pulumi.Input<string>;
}
