// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getZPAAppSegmentBrowserAccess(args?: GetZPAAppSegmentBrowserAccessArgs, opts?: pulumi.InvokeOptions): Promise<GetZPAAppSegmentBrowserAccessResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("zpa:index/getZPAAppSegmentBrowserAccess:getZPAAppSegmentBrowserAccess", {
        "id": args.id,
        "name": args.name,
        "tcpPortRanges": args.tcpPortRanges,
        "udpPortRanges": args.udpPortRanges,
    }, opts);
}

/**
 * A collection of arguments for invoking getZPAAppSegmentBrowserAccess.
 */
export interface GetZPAAppSegmentBrowserAccessArgs {
    id?: string;
    name?: string;
    tcpPortRanges?: inputs.GetZPAAppSegmentBrowserAccessTcpPortRange[];
    udpPortRanges?: inputs.GetZPAAppSegmentBrowserAccessUdpPortRange[];
}

/**
 * A collection of values returned by getZPAAppSegmentBrowserAccess.
 */
export interface GetZPAAppSegmentBrowserAccessResult {
    readonly bypassType: string;
    readonly clientlessApps: outputs.GetZPAAppSegmentBrowserAccessClientlessApp[];
    readonly configSpace: string;
    readonly description: string;
    readonly domainNames: string[];
    readonly doubleEncrypt: boolean;
    readonly enabled: boolean;
    readonly healthCheckType: string;
    readonly healthReporting: string;
    readonly id?: string;
    readonly ipAnchored: boolean;
    readonly isCnameEnabled: boolean;
    readonly name?: string;
    readonly passiveHealthEnabled: boolean;
    readonly segmentGroupId: string;
    readonly segmentGroupName: string;
    readonly serverGroups: outputs.GetZPAAppSegmentBrowserAccessServerGroup[];
    readonly tcpPortRanges: string[];
    readonly udpPortRanges: string[];
}

export function getZPAAppSegmentBrowserAccessOutput(args?: GetZPAAppSegmentBrowserAccessOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZPAAppSegmentBrowserAccessResult> {
    return pulumi.output(args).apply(a => getZPAAppSegmentBrowserAccess(a, opts))
}

/**
 * A collection of arguments for invoking getZPAAppSegmentBrowserAccess.
 */
export interface GetZPAAppSegmentBrowserAccessOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tcpPortRanges?: pulumi.Input<pulumi.Input<inputs.GetZPAAppSegmentBrowserAccessTcpPortRangeArgs>[]>;
    udpPortRanges?: pulumi.Input<pulumi.Input<inputs.GetZPAAppSegmentBrowserAccessUdpPortRangeArgs>[]>;
}
