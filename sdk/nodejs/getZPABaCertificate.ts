// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getZPABaCertificate(args?: GetZPABaCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetZPABaCertificateResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("zpa:index/getZPABaCertificate:getZPABaCertificate", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getZPABaCertificate.
 */
export interface GetZPABaCertificateArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getZPABaCertificate.
 */
export interface GetZPABaCertificateResult {
    readonly certChain: string;
    readonly cname: string;
    readonly creationTime: string;
    readonly description: string;
    readonly id?: string;
    readonly issuedBy: string;
    readonly issuedTo: string;
    readonly modifiedTime: string;
    readonly modifiedby: string;
    readonly name?: string;
    readonly sans: string[];
    readonly serialNo: string;
    readonly status: string;
    readonly validFromInEpochsec: string;
    readonly validToInEpochsec: string;
}

export function getZPABaCertificateOutput(args?: GetZPABaCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZPABaCertificateResult> {
    return pulumi.output(args).apply(a => getZPABaCertificate(a, opts))
}

/**
 * A collection of arguments for invoking getZPABaCertificate.
 */
export interface GetZPABaCertificateOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
