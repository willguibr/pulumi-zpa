// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getZPACloudConnectorGroup(args?: GetZPACloudConnectorGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetZPACloudConnectorGroupResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("zpa:index/getZPACloudConnectorGroup:getZPACloudConnectorGroup", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getZPACloudConnectorGroup.
 */
export interface GetZPACloudConnectorGroupArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getZPACloudConnectorGroup.
 */
export interface GetZPACloudConnectorGroupResult {
    readonly cloudConnectors: outputs.GetZPACloudConnectorGroupCloudConnector[];
    readonly creationTime: string;
    readonly description: string;
    readonly enabled: boolean;
    readonly geolocationId: string;
    readonly id?: string;
    readonly modifiedTime: string;
    readonly modifiedby: string;
    readonly name?: string;
    readonly ziaCloud: string;
    readonly ziaOrgId: string;
}

export function getZPACloudConnectorGroupOutput(args?: GetZPACloudConnectorGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZPACloudConnectorGroupResult> {
    return pulumi.output(args).apply(a => getZPACloudConnectorGroup(a, opts))
}

/**
 * A collection of arguments for invoking getZPACloudConnectorGroup.
 */
export interface GetZPACloudConnectorGroupOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
