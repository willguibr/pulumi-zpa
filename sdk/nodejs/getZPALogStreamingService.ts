// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getZPALogStreamingService(args?: GetZPALogStreamingServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetZPALogStreamingServiceResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("zpa:index/getZPALogStreamingService:getZPALogStreamingService", {
        "configs": args.configs,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getZPALogStreamingService.
 */
export interface GetZPALogStreamingServiceArgs {
    configs?: inputs.GetZPALogStreamingServiceConfig[];
    id?: string;
}

/**
 * A collection of values returned by getZPALogStreamingService.
 */
export interface GetZPALogStreamingServiceResult {
    readonly configs: outputs.GetZPALogStreamingServiceConfig[];
    readonly connectorGroups: outputs.GetZPALogStreamingServiceConnectorGroup[];
    readonly id?: string;
    readonly policyRules: outputs.GetZPALogStreamingServicePolicyRule[];
}

export function getZPALogStreamingServiceOutput(args?: GetZPALogStreamingServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZPALogStreamingServiceResult> {
    return pulumi.output(args).apply(a => getZPALogStreamingService(a, opts))
}

/**
 * A collection of arguments for invoking getZPALogStreamingService.
 */
export interface GetZPALogStreamingServiceOutputArgs {
    configs?: pulumi.Input<pulumi.Input<inputs.GetZPALogStreamingServiceConfigArgs>[]>;
    id?: pulumi.Input<string>;
}
