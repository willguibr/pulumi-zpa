// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getZPAPolicyType(args?: GetZPAPolicyTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetZPAPolicyTypeResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("zpa:index/getZPAPolicyType:getZPAPolicyType", {
        "id": args.id,
        "policyType": args.policyType,
    }, opts);
}

/**
 * A collection of arguments for invoking getZPAPolicyType.
 */
export interface GetZPAPolicyTypeArgs {
    id?: string;
    policyType?: string;
}

/**
 * A collection of values returned by getZPAPolicyType.
 */
export interface GetZPAPolicyTypeResult {
    readonly creationTime: string;
    readonly description: string;
    readonly enabled: boolean;
    readonly id?: string;
    readonly modifiedTime: string;
    readonly modifiedby: string;
    readonly name: string;
    readonly policyType: string;
    readonly rules: outputs.GetZPAPolicyTypeRule[];
}

export function getZPAPolicyTypeOutput(args?: GetZPAPolicyTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZPAPolicyTypeResult> {
    return pulumi.output(args).apply(a => getZPAPolicyType(a, opts))
}

/**
 * A collection of arguments for invoking getZPAPolicyType.
 */
export interface GetZPAPolicyTypeOutputArgs {
    id?: pulumi.Input<string>;
    policyType?: pulumi.Input<string>;
}
