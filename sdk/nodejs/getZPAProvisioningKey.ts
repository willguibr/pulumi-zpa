// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getZPAProvisioningKey(args: GetZPAProvisioningKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetZPAProvisioningKeyResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("zpa:index/getZPAProvisioningKey:getZPAProvisioningKey", {
        "associationType": args.associationType,
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getZPAProvisioningKey.
 */
export interface GetZPAProvisioningKeyArgs {
    associationType: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getZPAProvisioningKey.
 */
export interface GetZPAProvisioningKeyResult {
    readonly appConnectorGroupId: string;
    readonly appConnectorGroupName: string;
    readonly associationType: string;
    readonly creationTime: string;
    readonly enabled: boolean;
    readonly enrollmentCertId: string;
    readonly enrollmentCertName: string;
    readonly expirationInEpochSec: string;
    readonly id?: string;
    readonly ipAcls: string[];
    readonly maxUsage: string;
    readonly modifiedTime: string;
    readonly modifiedby: string;
    readonly name?: string;
    readonly provisioningKey: string;
    readonly uiConfig: string;
    readonly usageCount: string;
    readonly zcomponentId: string;
    readonly zcomponentName: string;
}

export function getZPAProvisioningKeyOutput(args: GetZPAProvisioningKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZPAProvisioningKeyResult> {
    return pulumi.output(args).apply(a => getZPAProvisioningKey(a, opts))
}

/**
 * A collection of arguments for invoking getZPAProvisioningKey.
 */
export interface GetZPAProvisioningKeyOutputArgs {
    associationType: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
